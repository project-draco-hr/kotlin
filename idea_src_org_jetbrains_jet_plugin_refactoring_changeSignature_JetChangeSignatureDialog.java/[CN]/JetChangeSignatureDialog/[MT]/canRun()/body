{
  if (myNamePanel.isVisible() && myMethod.canChangeName() && !JavaPsiFacade.getInstance(myProject).getNameHelper().isIdentifier(getMethodName()))   throw new ConfigurationException(JetRefactoringBundle.message("function.name.is.invalid"));
  if (myMethod.canChangeReturnType() == MethodDescriptor.ReadWriteOption.ReadWrite && getReturnType() == null)   throw new ConfigurationException(JetRefactoringBundle.message("return.type.is.invalid"));
  List<ParameterTableModelItemBase<JetParameterInfo>> parameterInfos=myParametersTableModel.getItems();
  for (  ParameterTableModelItemBase<JetParameterInfo> item : parameterInfos) {
    String parameterName=item.parameter.getName();
    if (!JavaPsiFacade.getInstance(myProject).getNameHelper().isIdentifier(parameterName))     throw new ConfigurationException(JetRefactoringBundle.message("parameter.name.is.invalid",parameterName));
    if (getType((JetTypeCodeFragment)item.typeCodeFragment) == null)     throw new ConfigurationException(JetRefactoringBundle.message("parameter.type.is.invalid",item.typeCodeFragment.getText()));
  }
}
