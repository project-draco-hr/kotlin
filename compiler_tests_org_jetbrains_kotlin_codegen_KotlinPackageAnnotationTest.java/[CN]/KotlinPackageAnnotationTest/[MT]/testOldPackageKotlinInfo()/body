{
  loadText("package " + PACKAGE_NAME + "\n"+ "\n"+ "fun foo() = 42\n"+ "val bar = 239\n"+ "\n"+ "class A\n"+ "class B\n"+ "object C\n");
  Class aClass=generateClass(PackageClassUtils.getPackageClassFqName(PACKAGE_NAME).asString());
  Class<? extends Annotation> annotationClass=loadAnnotationClassQuietly(JvmAnnotationNames.KOTLIN_PACKAGE.asString());
  assertTrue(aClass.isAnnotationPresent(annotationClass));
  Annotation kotlinPackage=aClass.getAnnotation(annotationClass);
  String[] data=(String[])CodegenTestUtil.getAnnotationAttribute(kotlinPackage,"data");
  assertNotNull(data);
  String[] strings=(String[])CodegenTestUtil.getAnnotationAttribute(kotlinPackage,"strings");
  assertNotNull(strings);
  PackageData packageData=JvmProtoBufUtil.readPackageDataFrom(data,strings);
  Set<String> callableNames=collectCallableNames(packageData.getPackageProto().getMemberList(),packageData.getNameResolver());
  assertEmpty(callableNames);
}
