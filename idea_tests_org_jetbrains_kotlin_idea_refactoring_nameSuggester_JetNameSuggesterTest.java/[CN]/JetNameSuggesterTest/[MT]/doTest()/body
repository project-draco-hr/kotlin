{
  myFixture.configureByFile(getTestName(false) + ".kt");
  JetFile file=(JetFile)myFixture.getFile();
  final String expectedResultText=JetTestUtils.getLastCommentInFile(file);
  try {
    JetRefactoringUtil.selectExpression(myFixture.getEditor(),file,new JetRefactoringUtil.SelectExpressionCallback(){
      @Override public void run(      @Nullable JetExpression expression){
        String[] names=KotlinNameSuggester.INSTANCE$.suggestNames(expression,EmptyValidator.INSTANCE$,"value");
        Arrays.sort(names);
        String result=StringUtil.join(names,"\n").trim();
        assertEquals(expectedResultText,result);
      }
    }
);
  }
 catch (  JetRefactoringUtil.IntroduceRefactoringException e) {
    throw new AssertionError("Failed to find expression: " + e.getMessage());
  }
}
