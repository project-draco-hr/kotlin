{
  List<ValueParameterDescriptor> valueParameterDescriptors=Lists.newArrayList();
  List<JetParameter> declaredValueParameters=functionLiteral.getValueParameters();
  List<ValueParameterDescriptor> expectedValueParameters=(functionTypeExpected) ? KotlinBuiltIns.getInstance().getValueParameters(functionDescriptor,context.expectedType) : null;
  JetParameterList valueParameterList=functionLiteral.getValueParameterList();
  boolean hasDeclaredValueParameters=valueParameterList != null;
  if (functionTypeExpected && !hasDeclaredValueParameters && expectedValueParameters.size() == 1) {
    ValueParameterDescriptor valueParameterDescriptor=expectedValueParameters.get(0);
    ValueParameterDescriptor it=new ValueParameterDescriptorImpl(functionDescriptor,null,0,Annotations.EMPTY,Name.identifier("it"),valueParameterDescriptor.getType(),valueParameterDescriptor.hasDefaultValue(),valueParameterDescriptor.getVarargElementType(),SourceElement.NO_SOURCE);
    valueParameterDescriptors.add(it);
    context.trace.record(AUTO_CREATED_IT,it);
  }
 else {
    if (expectedValueParameters != null && declaredValueParameters.size() != expectedValueParameters.size()) {
      List<JetType> expectedParameterTypes=ExpressionTypingUtils.getValueParametersTypes(expectedValueParameters);
      context.trace.report(EXPECTED_PARAMETERS_NUMBER_MISMATCH.on(functionLiteral,expectedParameterTypes.size(),expectedParameterTypes));
    }
    for (int i=0; i < declaredValueParameters.size(); i++) {
      ValueParameterDescriptor valueParameterDescriptor=createValueParameterDescriptor(context,functionDescriptor,declaredValueParameters,expectedValueParameters,i);
      valueParameterDescriptors.add(valueParameterDescriptor);
    }
  }
  return valueParameterDescriptors;
}
