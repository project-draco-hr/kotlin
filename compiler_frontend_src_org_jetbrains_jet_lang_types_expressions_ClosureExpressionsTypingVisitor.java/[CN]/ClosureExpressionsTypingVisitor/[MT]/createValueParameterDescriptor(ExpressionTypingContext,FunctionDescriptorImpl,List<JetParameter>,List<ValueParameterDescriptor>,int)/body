{
  JetParameter declaredParameter=declaredValueParameters.get(index);
  JetTypeReference typeReference=declaredParameter.getTypeReference();
  JetType expectedType;
  if (expectedValueParameters != null && index < expectedValueParameters.size()) {
    expectedType=expectedValueParameters.get(index).getType();
  }
 else {
    expectedType=null;
  }
  JetType type;
  if (typeReference != null) {
    type=context.expressionTypingServices.getTypeResolver().resolveType(context.scope,typeReference,context.trace,true);
    if (expectedType != null) {
      if (!JetTypeChecker.INSTANCE.isSubtypeOf(type,expectedType)) {
        context.trace.report(EXPECTED_PARAMETER_TYPE_MISMATCH.on(declaredParameter,expectedType));
      }
    }
  }
 else {
    if (expectedType == null || expectedType == CallResolverUtil.DONT_CARE || expectedType == CallResolverUtil.CANT_INFER_TYPE_PARAMETER) {
      context.trace.report(CANNOT_INFER_PARAMETER_TYPE.on(declaredParameter));
    }
    if (expectedType != null) {
      type=expectedType;
    }
 else {
      type=CANT_INFER_LAMBDA_PARAM_TYPE;
    }
  }
  return context.expressionTypingServices.getDescriptorResolver().resolveValueParameterDescriptor(context.scope,functionDescriptor,declaredParameter,index,type,context.trace);
}
