{
  if (element instanceof JetDeclaration) {
    return renderKotlinDeclaration((JetDeclaration)element,quickNavigation);
  }
 else   if (element instanceof KotlinLightMethod) {
    return renderKotlinDeclaration(((KotlinLightMethod)element).getOrigin(),quickNavigation);
  }
  if (quickNavigation) {
    JetReferenceExpression referenceExpression=PsiTreeUtil.getParentOfType(originalElement,JetReferenceExpression.class,false);
    if (referenceExpression != null) {
      BindingContext context=AnalyzerFacadeWithCache.getContextForElement(referenceExpression);
      DeclarationDescriptor declarationDescriptor=context.get(BindingContext.REFERENCE_TARGET,referenceExpression);
      if (declarationDescriptor != null) {
        return mixKotlinToJava(declarationDescriptor,element,originalElement);
      }
    }
  }
 else {
  }
  return null;
}
