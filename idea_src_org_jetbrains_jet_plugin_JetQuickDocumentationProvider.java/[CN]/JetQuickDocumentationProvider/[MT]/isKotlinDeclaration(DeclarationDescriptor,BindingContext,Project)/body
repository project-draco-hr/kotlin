{
  PsiElement declaration=BindingContextUtils.descriptorToDeclaration(bindingContext,descriptor);
  if (declaration == null) {
    BuiltInsReferenceResolver libraryReferenceResolver=project.getComponent(BuiltInsReferenceResolver.class);
    Collection<PsiElement> elements=libraryReferenceResolver.resolveStandardLibrarySymbol(descriptor);
    return !elements.isEmpty();
  }
  if (JetLanguage.INSTANCE == declaration.getLanguage())   return true;
  ClsClassImpl clsClass=PsiTreeUtil.getParentOfType(declaration,ClsClassImpl.class);
  if (clsClass == null)   return false;
  VirtualFile file=clsClass.getContainingFile().getVirtualFile();
  return file != null && DecompiledUtils.isKotlinCompiledFile(file);
}
