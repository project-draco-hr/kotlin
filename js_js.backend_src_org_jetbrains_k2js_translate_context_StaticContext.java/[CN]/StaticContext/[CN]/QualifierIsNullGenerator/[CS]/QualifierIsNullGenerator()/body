{
  Rule<Boolean> propertiesHaveNoQualifiers=new Rule<Boolean>(){
    @Override public Boolean apply(    @NotNull DeclarationDescriptor descriptor){
      if (!(descriptor instanceof PropertyDescriptor)) {
        return null;
      }
      return true;
    }
  }
;
  Rule<Boolean> variableAsFunctionsHaveNoQualifiers=new Rule<Boolean>(){
    @Override public Boolean apply(    @NotNull DeclarationDescriptor descriptor){
      if (!isVariableAsFunction(descriptor)) {
        return null;
      }
      return true;
    }
  }
;
  Rule<Boolean> nativeObjectsHaveNoQualifiers=new Rule<Boolean>(){
    @Override public Boolean apply(    @NotNull DeclarationDescriptor descriptor){
      if (!AnnotationsUtils.isNativeObject(descriptor)) {
        return null;
      }
      return true;
    }
  }
;
  addRule(propertiesHaveNoQualifiers);
  addRule(variableAsFunctionsHaveNoQualifiers);
  addRule(nativeObjectsHaveNoQualifiers);
}
