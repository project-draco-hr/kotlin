{
  JetExpression argument;
  if (arguments.size() == 1) {
    argument=arguments.get(0);
  }
 else   if (arguments.size() == 2) {
    receiver=codegen.gen(arguments.get(0));
    argument=arguments.get(1);
  }
 else {
    throw new IllegalStateException("Invalid arguments to compareTo: " + arguments);
  }
  Type type=comparisonOperandType(receiver.type,codegen.expressionType(argument));
  receiver.put(type,v);
  codegen.gen(argument,type);
  if (type == Type.INT_TYPE) {
    v.invokestatic(IntrinsicMethods.INTRINSICS_CLASS_NAME,"compare","(II)I",false);
  }
 else   if (type == Type.LONG_TYPE) {
    v.invokestatic(IntrinsicMethods.INTRINSICS_CLASS_NAME,"compare","(JJ)I",false);
  }
 else   if (type == Type.FLOAT_TYPE) {
    v.invokestatic("java/lang/Float","compare","(FF)I",false);
  }
 else   if (type == Type.DOUBLE_TYPE) {
    v.invokestatic("java/lang/Double","compare","(DD)I",false);
  }
 else {
    throw new UnsupportedOperationException();
  }
  return Type.INT_TYPE;
}
