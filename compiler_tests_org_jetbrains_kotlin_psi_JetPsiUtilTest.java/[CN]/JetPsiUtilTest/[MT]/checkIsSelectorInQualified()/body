{
  String trueResultString="/*true*/";
  String falseResultString="/*false*/";
  JetFile file=loadPsiFile(new File("psiUtil/" + getTestName(true) + ".kt").getPath());
  String text=file.getText();
  Pattern pattern=Pattern.compile(String.format("%s|%s",Pattern.quote(trueResultString),Pattern.quote(falseResultString)));
  Matcher matcher=pattern.matcher(text);
  while (matcher.find()) {
    boolean expected=trueResultString.equals(matcher.group());
    int offset=matcher.end();
    JetSimpleNameExpression expression=PsiTreeUtil.findElementOfClassAtOffset(file,offset,JetSimpleNameExpression.class,true);
    String modifiedWithOffset=new StringBuilder(text).insert(offset,"<======caret======>").toString();
    Assert.assertNotNull("Can't find expression in text:\n" + modifiedWithOffset,expression);
    Assert.assertSame(expected + " result was expected at\n" + modifiedWithOffset,expected,JetPsiUtil.isSelectorInQualified(expression));
  }
}
