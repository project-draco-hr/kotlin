{
  return "/* Block comment */\n" + "import kotlin.util.* // line comment\n" + "\n"+ "               Bad character: \\n\n"+ "/**\n"+ " * Doc comment here for `SomeClass`\n"+ " * @see Iterator#next()\n"+ " */\n"+ "[Deprecated]\n"+ "public class MyClass<out T : Iterable<T>>(var prop1 : Int) {\n"+ "    fun foo(nullable : String?, r : Runnable, f : () -> Int) {\n"+ "        println(\"length is ${nullable?.length} \\e\")\n"+ "        val ints = java.util.ArrayList<Int?>(2)\n"+ "        ints[0] = 102 + f()\n"+ "        var ref = ints.size()\n"+ "        if (!ints.empty) {\n"+ "            ints.forEach @lit {\n"+ "                if (it == null) return @lit\n"+ "                println(it + ref)\n"+ "            }\n"+ "        }\n"+ "    }\n"+ "}\n"+ "\n"+ "var globalCounter : Int = 5\n"+ "get() {\n"+ "    return $globalCounter\n"+ "}\n"+ "\n"+ "public abstract class Abstract {\n"+ "}";
}
