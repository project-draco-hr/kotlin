{
  return "/* Block comment */\n" + "import kotlin.util.*\n" + "                               Bad characters: \\n #\n"+ "val globalConst = 0\n"+ "/**\n"+ " * Doc comment here for `SomeClass`\n"+ " * @see Iterator#next()\n"+ " */\n"+ "[Annotation]\n"+ "public class SomeClass<out T : Runnable>(param : ATrait, reassignedParam : Array<Int>, val paramProperty: String?) { // some comment\n"+ "  private field : T {\n"+ "    return null\n"+ "  }\n"+ "  private open unusedField : Double = 12345.67890\n"+ "  private anotherString : UnknownType = \"$field Another\\nStrin\\g\";\n"+ "\n"+ "  {\n"+ "    paramProperty.?length ?: 33\n"+ "    val localVal : Int = \"IntelliJ\" // Error, incompatible types\n"+ "    println(anotherString + field + localVar + globalConst)\n"+ "    val time = Date.parse(\"1.2.3\") // Method is deprecated\n"+ "    var reassignedValue = \"\" as Int\n"+ "    reassignedValue++\n"+ "    object : Runnable {\n"+ "      override fun() {\n"+ "        val a = localVar\n"+ "      }\n"+ "    }\n"+ "    reassignedParam = Array<Int>(2)\n"+ "    reassignedParam[0] = 1\n"+ "    reassignedParam.foreach @lit {\n"+ "      if (it == 0) return@lit\n"+ "      println(it + localVar)\n"+ "    }\n"+ "  }\n"+ "}\n"+ "trait ATrait {\n"+ "  fun memberFun(param : (Int) -> Int)\n"+ "}\n"+ "abstract class SomeAbstractClass {\n"+ "}";
}
