{
  super(containingDeclaration);
  this.classHeaderScope=semanticServices.createWritableScope(outerScope,this);
  this.writableMemberScope=semanticServices.createWritableScope(classHeaderScope,this,new DeclarationDescriptorVisitor<Void,WritableScope>(){
    @Override public Void visitPropertyDescriptor(    PropertyDescriptor descriptor,    WritableScope data){
      properties.add(descriptor);
      return null;
    }
  }
);
  this.unsubstitutedMemberScope=this.writableMemberScope;
}
