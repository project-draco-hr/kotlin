{
  final LexicalScopeVariableInfo lexicalScopeVariableInfo=pseudocodeVariableDataCollector.getLexicalScopeVariableInfo();
  return pseudocodeVariableDataCollector.collectData(FORWARD,false,new InstructionDataMergeStrategy<VariableInitState>(){
    @NotNull @Override public Edges<Map<VariableDescriptor,VariableInitState>> invoke(    @NotNull Instruction instruction,    @NotNull Collection<? extends Map<VariableDescriptor,VariableInitState>> incomingEdgesData){
      Map<VariableDescriptor,VariableInitState> enterInstructionData=mergeIncomingEdgesDataForInitializers(incomingEdgesData);
      Map<VariableDescriptor,VariableInitState> exitInstructionData=addVariableInitStateFromCurrentInstructionIfAny(instruction,enterInstructionData,lexicalScopeVariableInfo);
      return new Edges<Map<VariableDescriptor,VariableInitState>>(enterInstructionData,exitInstructionData);
    }
  }
);
}
