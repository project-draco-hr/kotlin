{
  if (PsiUtilBase.getLanguageAtOffset(file,offset).isKindOf(KotlinLanguage.INSTANCE)) {
    PsiElement element=file.findElementAt(offset);
    if (element == null) {
      element=file.findElementAt(offset - 1);
    }
    if (element instanceof PsiWhiteSpace) {
      return false;
    }
 else     if (PsiTreeUtil.getParentOfType(element,PsiComment.class,false) != null) {
      return isCommentInContext();
    }
 else     if (PsiTreeUtil.getParentOfType(element,JetPackageDirective.class) != null || PsiTreeUtil.getParentOfType(element,JetImportDirective.class) != null) {
      return false;
    }
 else     if (element instanceof LeafPsiElement) {
      IElementType elementType=((LeafPsiElement)element).getElementType();
      if (elementType == JetTokens.IDENTIFIER) {
        PsiElement parent=element.getParent();
        if (parent instanceof JetReferenceExpression) {
          PsiElement parentOfParent=parent.getParent();
          JetQualifiedExpression qualifiedExpression=PsiTreeUtil.getParentOfType(element,JetQualifiedExpression.class);
          if (qualifiedExpression != null && qualifiedExpression.getSelectorExpression() == parentOfParent) {
            return false;
          }
        }
      }
    }
    return element != null && isInContext(element);
  }
  return false;
}
