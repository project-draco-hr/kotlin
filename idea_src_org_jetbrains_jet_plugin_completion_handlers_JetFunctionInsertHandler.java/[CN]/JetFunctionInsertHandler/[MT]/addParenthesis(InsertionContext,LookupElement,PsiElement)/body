{
  int startOffset=context.getStartOffset();
  int lookupStringLength=item.getLookupString().length();
  int endOffset=startOffset + lookupStringLength;
  Document document=context.getDocument();
  boolean bothParentheses=false;
  String documentText=document.getText();
  boolean braces=bracketType == BracketType.BRACES && context.getCompletionChar() != '(';
  char openingBracket=braces ? '{' : '(';
  char closingBracket=braces ? '}' : ')';
  int openingBracketIndex=documentText.indexOf(openingBracket,endOffset);
  if (openingBracketIndex != -1 && documentText.substring(endOffset,openingBracketIndex).trim().length() != 0) {
    openingBracketIndex=-1;
  }
  if (openingBracketIndex == -1) {
    if (braces) {
      if (isInsertSpacesInOneLineFunctionEnabled(offsetElement.getProject())) {
        document.insertString(endOffset," {  }");
        openingBracketIndex=endOffset + 2;
      }
 else {
        document.insertString(endOffset," {}");
        openingBracketIndex=endOffset + 1;
      }
    }
 else {
      document.insertString(endOffset,"()");
      openingBracketIndex=endOffset;
    }
    bothParentheses=true;
  }
 else   if (openingBracketIndex + 1 < documentText.length() && documentText.charAt(openingBracketIndex + 1) == closingBracket) {
    bothParentheses=true;
  }
  Editor editor=context.getEditor();
  if (caretPosition == CaretPosition.IN_BRACKETS || !bothParentheses) {
    editor.getCaretModel().moveToOffset(openingBracketIndex + 1);
    AutoPopupController.getInstance(context.getProject()).autoPopupParameterInfo(editor,offsetElement);
  }
 else {
    editor.getCaretModel().moveToOffset(openingBracketIndex + 2);
  }
  PsiDocumentManager.getInstance(context.getProject()).commitDocument(context.getDocument());
}
