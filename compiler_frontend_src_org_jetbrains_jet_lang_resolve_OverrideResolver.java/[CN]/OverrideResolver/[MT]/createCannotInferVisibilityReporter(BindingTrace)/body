{
  return new Function1<CallableMemberDescriptor,Unit>(){
    @Override public Unit invoke(    @NotNull CallableMemberDescriptor descriptor){
      DeclarationDescriptor reportOn=descriptor.getKind() == FAKE_OVERRIDE || descriptor.getKind() == DELEGATION ? DescriptorUtils.getParentOfType(descriptor,ClassDescriptor.class) : descriptor;
      PsiElement element=BindingContextUtils.descriptorToDeclaration(trace.getBindingContext(),reportOn);
      if (element instanceof JetDeclaration) {
        trace.report(CANNOT_INFER_VISIBILITY.on((JetDeclaration)element));
      }
      return Unit.VALUE;
    }
  }
;
}
