{
  List<CallableMemberDescriptor> fakeOverrides=Lists.newArrayList();
  for (  CallableMemberDescriptor functionFromSupertype : functionsFromSupertypes) {
    boolean overrides=false;
    for (    CallableMemberDescriptor functionFromCurrent : functionsFromCurrent) {
      OverridingUtil.OverrideCompatibilityInfo.ErrorKind overridable=OverridingUtil.isOverridableBy(functionFromSupertype,functionFromCurrent).isOverridable();
      if (overridable == OverridingUtil.OverrideCompatibilityInfo.ErrorKind.OVERRIDABLE) {
        functionFromCurrent.addOverriddenDescriptor(functionFromSupertype);
        overrides=true;
      }
 else       if (overridable == OverridingUtil.OverrideCompatibilityInfo.ErrorKind.CONFLICT) {
        sink.conflict(functionFromSupertype,functionFromCurrent);
      }
    }
    for (    CallableMemberDescriptor fakeOverride : fakeOverrides) {
      if (OverridingUtil.isOverridableBy(functionFromSupertype,fakeOverride).isOverridable() == OverridingUtil.OverrideCompatibilityInfo.ErrorKind.OVERRIDABLE) {
        fakeOverride.addOverriddenDescriptor(functionFromSupertype);
        overrides=true;
      }
    }
    if (!overrides) {
      CallableMemberDescriptor fakeOverride=functionFromSupertype.copy(current,false,CallableMemberDescriptor.Kind.FAKE_OVERRIDE,false);
      fakeOverride.addOverriddenDescriptor(functionFromSupertype);
      fakeOverrides.add(fakeOverride);
      sink.addToScope(fakeOverride);
    }
  }
}
