{
  List<NamedFunctionDescriptor> fakeOverrides=Lists.newArrayList();
  for (  NamedFunctionDescriptor functionFromSupertype : functionsFromSupertypes) {
    boolean overrides=false;
    for (    NamedFunctionDescriptor functionFromCurrent : functionsFromCurrent) {
      OverridingUtil.OverrideCompatibilityInfo.ErrorKind overridable=OverridingUtil.isOverridableBy(functionFromSupertype,functionFromCurrent).isOverridable();
      if (overridable == OverridingUtil.OverrideCompatibilityInfo.ErrorKind.OVERRIDABLE) {
        ((FunctionDescriptorImpl)functionFromCurrent).addOverriddenFunction(functionFromSupertype);
        overrides=true;
      }
 else       if (overridable == OverridingUtil.OverrideCompatibilityInfo.ErrorKind.CONFLICT) {
        sink.conflict(functionFromSupertype,functionFromCurrent);
      }
    }
    for (    NamedFunctionDescriptor fakeOverride : fakeOverrides) {
      if (OverridingUtil.isOverridableBy(functionFromSupertype,fakeOverride).isOverridable() == OverridingUtil.OverrideCompatibilityInfo.ErrorKind.OVERRIDABLE) {
        ((FunctionDescriptorImpl)fakeOverride).addOverriddenFunction(functionFromSupertype);
        overrides=true;
      }
    }
    if (!overrides) {
      NamedFunctionDescriptor fakeOverride=functionFromSupertype.copy(current,false,CallableMemberDescriptor.Kind.FAKE_OVERRIDE,false);
      ((FunctionDescriptorImpl)fakeOverride).addOverriddenFunction(functionFromSupertype);
      fakeOverrides.add(fakeOverride);
      sink.addToScope(fakeOverride);
    }
  }
}
