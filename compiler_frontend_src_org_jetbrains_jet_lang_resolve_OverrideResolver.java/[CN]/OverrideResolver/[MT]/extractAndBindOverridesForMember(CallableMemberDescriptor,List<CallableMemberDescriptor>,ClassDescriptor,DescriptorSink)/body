{
  for (Iterator<CallableMemberDescriptor> iterator=notOverridden.iterator(); iterator.hasNext(); ) {
    CallableMemberDescriptor fromSupertype=iterator.next();
    OverridingUtil.OverrideCompatibilityInfo.Result result=OverridingUtil.isOverridableBy(fromSupertype,fromCurrent).getResult();
    boolean isVisible=Visibilities.isVisible(fromSupertype,current);
switch (result) {
case OVERRIDABLE:
      if (isVisible) {
        OverridingUtil.bindOverride(fromCurrent,fromSupertype);
      }
    iterator.remove();
  break;
case CONFLICT:
if (isVisible) {
  sink.conflict(fromSupertype,fromCurrent);
}
iterator.remove();
break;
case INCOMPATIBLE:
break;
}
}
}
