{
  boolean fakeOverride=declared.getKind() == CallableMemberDescriptor.Kind.FAKE_OVERRIDE;
  if (!fakeOverride) {
    JetModifierListOwner declaration=(JetModifierListOwner)BindingContextUtils.descriptorToDeclaration(trace.getBindingContext(),declared);
    if (!declaration.hasModifier(JetTokens.OVERRIDE_KEYWORD)) {
      return;
    }
  }
  for (  ValueParameterDescriptor parameterFromSubclass : declared.getValueParameters()) {
    JetParameter parameter=fakeOverride ? null : (JetParameter)BindingContextUtils.descriptorToDeclaration(trace.getBindingContext(),parameterFromSubclass);
    if (parameterFromSubclass.hasDefaultValue() && !fakeOverride) {
      trace.report(DEFAULT_VALUE_NOT_ALLOWED_IN_OVERRIDE.on(parameter));
    }
    Set<ValueParameterDescriptor> uniqueOverridden=Sets.newHashSet(parameterFromSubclass.getOverriddenDescriptors());
    for (    ValueParameterDescriptor p2 : parameterFromSubclass.getOverriddenDescriptors()) {
      for (      ValueParameterDescriptor p3 : p2.getOverriddenDescriptors()) {
        if (uniqueOverridden.contains(p3)) {
          uniqueOverridden.remove(p2);
        }
      }
    }
    boolean superWithDefault=false;
    for (    ValueParameterDescriptor parameterFromSuperclass : uniqueOverridden) {
      if (parameterFromSuperclass.hasDefaultValue()) {
        if (!superWithDefault) {
          superWithDefault=true;
        }
 else {
          if (fakeOverride) {
            JetClassOrObject classElement=(JetClassOrObject)BindingContextUtils.descriptorToDeclaration(trace.getBindingContext(),declared.getContainingDeclaration());
            trace.report(MULTIPLE_DEFAULTS_INHERITED_FROM_SUPERTYPES_WHEN_NO_EXPLICIT_OVERRIDE.on(classElement,parameterFromSubclass));
          }
 else {
            trace.report(MULTIPLE_DEFAULTS_INHERITED_FROM_SUPERTYPES.on(parameter,parameterFromSubclass));
          }
          break;
        }
      }
    }
  }
}
