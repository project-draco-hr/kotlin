{
  Map<CallableMemberDescriptor,CallableMemberDescriptor> implementedWithDelegationBy=Maps.newHashMap();
  Set<CallableMemberDescriptor> inheritedFunctions=Sets.newLinkedHashSet();
  for (  JetType supertype : classDescriptor.getSupertypes()) {
    for (    DeclarationDescriptor descriptor : supertype.getMemberScope().getAllDescriptors()) {
      if (descriptor instanceof CallableMemberDescriptor) {
        CallableMemberDescriptor memberDescriptor=(CallableMemberDescriptor)descriptor;
        inheritedFunctions.add(memberDescriptor);
      }
    }
  }
  Set<CallableMemberDescriptor> filteredMembers=OverridingUtil.filterOverrides(inheritedFunctions);
  Multimap<CallableMemberDescriptor,CallableMemberDescriptor> factoredMembers=CommonSuppliers.newLinkedHashSetHashSetMultimap();
  for (  CallableMemberDescriptor one : filteredMembers) {
    if (factoredMembers.values().contains(one))     continue;
    for (    CallableMemberDescriptor another : filteredMembers) {
      factoredMembers.put(one,one);
      if (OverridingUtil.isOverridableBy(one,another).isSuccess() || OverridingUtil.isOverridableBy(another,one).isSuccess()) {
        factoredMembers.put(one,another);
      }
    }
  }
  for (  CallableMemberDescriptor key : factoredMembers.keySet()) {
    Collection<CallableMemberDescriptor> mutuallyOverridable=factoredMembers.get(key);
    int implementationCount=0;
    for (    CallableMemberDescriptor member : mutuallyOverridable) {
      if (member.getModality() != Modality.ABSTRACT) {
        implementationCount++;
      }
    }
    if (implementationCount == 0) {
      abstractNoImpl.addAll(mutuallyOverridable);
    }
 else     if (implementationCount > 1) {
      manyImpl.addAll(mutuallyOverridable);
    }
  }
  Set<CallableMemberDescriptor> actuallyOverridden=Sets.newHashSet(implementedWithDelegationBy.keySet());
  for (  CallableMemberDescriptor member : classDescriptor.getCallableMembers()) {
    actuallyOverridden.addAll(member.getOverriddenDescriptors());
  }
  abstractNoImpl.removeAll(actuallyOverridden);
  manyImpl.removeAll(actuallyOverridden);
}
