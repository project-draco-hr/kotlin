{
  Set<CallableMemberDescriptor> inheritedFunctions=Sets.newLinkedHashSet();
  for (  JetType supertype : classDescriptor.getSupertypes()) {
    for (    DeclarationDescriptor descriptor : supertype.getMemberScope().getAllDescriptors()) {
      if (descriptor instanceof CallableMemberDescriptor) {
        CallableMemberDescriptor memberDescriptor=(CallableMemberDescriptor)descriptor;
        inheritedFunctions.add(memberDescriptor);
      }
    }
  }
  Set<CallableMemberDescriptor> filteredMembers=OverridingUtil.filterOverrides(inheritedFunctions);
  Multimap<CallableMemberDescriptor,CallableMemberDescriptor> factoredMembers=CommonSuppliers.newLinkedHashSetHashSetMultimap();
  for (  CallableMemberDescriptor one : filteredMembers) {
    if (factoredMembers.values().contains(one))     continue;
    for (    CallableMemberDescriptor another : filteredMembers) {
      factoredMembers.put(one,one);
      if (OverridingUtil.isOverridableBy(one,another).isOverridable() == OverridingUtil.OverrideCompatibilityInfo.ErrorKind.OVERRIDABLE || OverridingUtil.isOverridableBy(another,one).isOverridable() == OverridingUtil.OverrideCompatibilityInfo.ErrorKind.OVERRIDABLE) {
        factoredMembers.put(one,another);
      }
    }
  }
  return factoredMembers;
}
