{
  Set<MutableClassDescriptor> ourClasses=new HashSet<MutableClassDescriptor>();
  ourClasses.addAll(context.getClasses().values());
  ourClasses.addAll(context.getObjects().values());
  Set<ClassifierDescriptor> processed=new HashSet<ClassifierDescriptor>();
  for (  MutableClassDescriptorLite klass : ContainerUtil.reverse(context.getClassesTopologicalOrder())) {
    if (klass instanceof MutableClassDescriptor && ourClasses.contains(klass)) {
      generateOverridesAndDelegationInAClass((MutableClassDescriptor)klass,processed,ourClasses);
      MutableClassDescriptorLite classObject=klass.getClassObjectDescriptor();
      if (classObject instanceof MutableClassDescriptor) {
        generateOverridesAndDelegationInAClass((MutableClassDescriptor)classObject,processed,ourClasses);
      }
    }
  }
}
