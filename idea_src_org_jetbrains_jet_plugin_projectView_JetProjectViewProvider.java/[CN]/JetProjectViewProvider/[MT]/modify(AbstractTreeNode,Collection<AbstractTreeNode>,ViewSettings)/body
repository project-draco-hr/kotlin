{
  List<AbstractTreeNode> result=new ArrayList<AbstractTreeNode>();
  for (  AbstractTreeNode child : children) {
    Object childValue=child.getValue();
    if (childValue instanceof JetFile) {
      JetFile file=(JetFile)childValue;
      List<JetDeclaration> declarations=file.getDeclarations();
      ArrayList<JetClassOrObject> classDeclarations=new ArrayList<JetClassOrObject>();
      for (      JetDeclaration declaration : declarations) {
        if (declaration instanceof JetClassOrObject) {
          classDeclarations.add((JetClassOrObject)declaration);
        }
      }
      VirtualFile virtualFile=file.getVirtualFile();
      String nameWithoutExtension=virtualFile != null ? virtualFile.getNameWithoutExtension() : file.getName();
      if (classDeclarations.size() == 1 && (!settings.isShowMembers() || declarations.size() == 1) && nameWithoutExtension.equals(classDeclarations.get(0).getName())) {
        result.add(new JetClassOrObjectTreeNode(file.getProject(),classDeclarations.get(0),settings));
      }
 else {
        result.add(new JetFileTreeNode(file.getProject(),file,settings));
      }
    }
 else {
      result.add(child);
    }
  }
  return result;
}
