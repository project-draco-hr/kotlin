{
  assertType("{() => }","fun () : Unit");
  assertType("{() : Int => }","fun () : Int");
  assertType("{() => 1}","fun () : Int");
  assertType("{(a : Int) => 1}","fun (a : Int) : Int");
  assertType("{(a : Int, b : String) => 1}","fun (a : Int, b : String) : Int");
  assertType("{(a : Int) => 1}","fun (Int) : Int");
  assertType("{(a : Int, b : String) => 1}","fun (Int, String) : Int");
  assertType("{Any.() => 1}","fun Any.() : Int");
  assertType("{Any.(a : Int) => 1}","fun Any.(a : Int) : Int");
  assertType("{Any.(a : Int, b : String) => 1}","fun Any.(a : Int, b : String) : Int");
  assertType("{Any.(a : Int) => 1}","fun Any.(Int) : Int");
  assertType("{Any.(a : Int, b : String) => 1}","fun Any.(Int, String) : Int");
  assertType("{Any.(a : Int, b : String) => b}","fun Any.(Int, String) : String");
}
