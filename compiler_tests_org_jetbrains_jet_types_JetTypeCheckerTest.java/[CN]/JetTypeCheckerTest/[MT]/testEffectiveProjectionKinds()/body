{
  assertSubtype("Tuple1<Int>","Tuple1<Int>");
  assertSubtype("Tuple1<out Int>","Tuple1<out Int>");
  assertSubtype("Tuple1<out Int>","Tuple1<Int>");
  assertSubtype("Tuple1<Int>","Tuple1<out Int>");
  assertSubtype("Tuple1<in Int>","Tuple1<out Any?>");
  assertSubtype("Tuple1<out Any?>","Tuple1<in String>");
  assertSubtype("Base_inT<Int>","Base_inT<Int>");
  assertSubtype("Base_inT<in Int>","Base_inT<in Int>");
  assertSubtype("Base_inT<in Int>","Base_inT<Int>");
  assertSubtype("Base_inT<Int>","Base_inT<in Int>");
  assertSubtype("Base_inT<out Int>","Base_inT<out Any?>");
  assertSubtype("Base_inT<out Any?>","Base_inT<out Int>");
}
