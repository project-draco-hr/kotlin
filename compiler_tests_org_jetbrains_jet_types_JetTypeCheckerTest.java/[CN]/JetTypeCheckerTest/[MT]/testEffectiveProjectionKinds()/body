{
  assertSubtype("Base_outT<Int>","Base_outT<Int>");
  assertSubtype("Base_outT<out Int>","Base_outT<out Int>");
  assertSubtype("Base_outT<out Int>","Base_outT<Int>");
  assertSubtype("Base_outT<Int>","Base_outT<out Int>");
  assertSubtype("Base_outT<in Int>","Base_outT<out Any?>");
  assertSubtype("Base_outT<out Any?>","Base_outT<in String>");
  assertSubtype("Base_inT<Int>","Base_inT<Int>");
  assertSubtype("Base_inT<in Int>","Base_inT<in Int>");
  assertSubtype("Base_inT<in Int>","Base_inT<Int>");
  assertSubtype("Base_inT<Int>","Base_inT<in Int>");
  assertSubtype("Base_inT<out Int>","Base_inT<out Any?>");
  assertSubtype("Base_inT<out Any?>","Base_inT<out Int>");
}
