{
  final JetType thisType=makeType(contextType);
  JetScope scope=new AbstractScopeAdapter(){
    @NotNull @Override protected JetScope getWorkerScope(){
      return scopeWithImports;
    }
    @NotNull @Override public List<ReceiverParameterDescriptor> getImplicitReceiversHierarchy(){
      return Lists.<ReceiverParameterDescriptor>newArrayList(new ReceiverParameterDescriptorImpl(getContainingDeclaration(),thisType,new ExpressionReceiver(JetPsiFactory.createExpression(getProject(),expression),thisType)));
    }
  }
;
  assertType(scope,expression,expectedType);
}
