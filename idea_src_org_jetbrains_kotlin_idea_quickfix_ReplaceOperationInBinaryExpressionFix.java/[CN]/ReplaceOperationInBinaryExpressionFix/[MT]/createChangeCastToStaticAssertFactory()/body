{
  return new JetSingleIntentionActionFactory(){
    @Override public JetIntentionAction<JetBinaryExpressionWithTypeRHS> createAction(    Diagnostic diagnostic){
      JetBinaryExpressionWithTypeRHS expression=QuickFixUtil.getParentElementOfType(diagnostic,JetBinaryExpressionWithTypeRHS.class);
      if (expression == null)       return null;
      return new ReplaceOperationInBinaryExpressionFix<JetBinaryExpressionWithTypeRHS>(expression," : "){
        @NotNull @Override public String getText(){
          return JetBundle.message("replace.cast.with.static.assert");
        }
      }
;
    }
  }
;
}
