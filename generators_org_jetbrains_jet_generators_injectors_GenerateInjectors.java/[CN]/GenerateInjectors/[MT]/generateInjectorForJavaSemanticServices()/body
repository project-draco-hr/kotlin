{
  DependencyInjectorGenerator generator=new DependencyInjectorGenerator();
  generator.addPublicField(JavaSemanticServices.class);
  generator.addPublicField(JavaDescriptorResolver.class);
  generator.addField(true,BindingTrace.class,null,new GivenExpression("new org.jetbrains.jet.lang.resolve.BindingTraceContext()"));
  generator.addField(JavaBridgeConfiguration.class);
  generator.addPublicField(PsiClassFinderImpl.class);
  generator.addField(false,ModuleDescriptorImpl.class,null,new GivenExpression("new org.jetbrains.jet.lang.descriptors.ModuleDescriptorImpl(" + "org.jetbrains.jet.lang.resolve.name.Name.special(\"<dummy>\"), " + "JavaBridgeConfiguration.ALL_JAVA_IMPORTS)"));
  generator.addPublicParameter(Project.class);
  generator.generate("compiler/frontend.java/src","org.jetbrains.jet.di","InjectorForJavaSemanticServices",GenerateInjectors.class);
}
