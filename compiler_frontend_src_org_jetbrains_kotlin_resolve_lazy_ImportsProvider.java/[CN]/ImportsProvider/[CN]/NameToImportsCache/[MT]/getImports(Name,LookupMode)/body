{
switch (mode) {
case CLASS:
    return nameToDirectives.containsKey(name) ? nameToDirectives.get(name) : allUnderImports;
case PACKAGE:
  return nameToDirectives.containsKey(name) ? nameToDirectives.get(name) : Collections.<JetImportDirective>emptyList();
case FUNCTION_OR_PROPERTY:
return nameToDirectives.containsKey(name) ? KotlinPackage.plus(nameToDirectives.get(name),allUnderImports) : allUnderImports;
default :
throw new IllegalArgumentException();
}
}
