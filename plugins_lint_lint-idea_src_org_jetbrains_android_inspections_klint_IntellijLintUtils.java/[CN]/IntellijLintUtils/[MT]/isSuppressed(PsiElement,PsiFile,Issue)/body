{
  while (element != null && element != file) {
    if (element instanceof PsiModifierListOwner) {
      PsiModifierListOwner owner=(PsiModifierListOwner)element;
      PsiModifierList modifierList=owner.getModifierList();
      if (modifierList != null) {
        for (        PsiAnnotation annotation : modifierList.getAnnotations()) {
          String fqcn=annotation.getQualifiedName();
          if (fqcn.equals(SUPPRESS_LINT_FQCN) || fqcn.equals(SUPPRESS_WARNINGS_FQCN)) {
            PsiAnnotationParameterList parameterList=annotation.getParameterList();
            for (            PsiNameValuePair pair : parameterList.getAttributes()) {
              PsiAnnotationMemberValue v=pair.getValue();
              String text=v.getText().trim();
              if (text.isEmpty()) {
                continue;
              }
              if (v instanceof PsiLiteral) {
                PsiLiteral literal=(PsiLiteral)v;
                Object value=literal.getValue();
                if (value instanceof String) {
                  text=(String)value;
                }
              }
 else               if (v instanceof PsiArrayInitializerMemberValue) {
                PsiArrayInitializerMemberValue mv=(PsiArrayInitializerMemberValue)v;
                for (                PsiAnnotationMemberValue mmv : mv.getInitializers()) {
                  if (mmv instanceof PsiLiteral) {
                    PsiLiteral literal=(PsiLiteral)mmv;
                    Object value=literal.getValue();
                    if (value instanceof String) {
                      text=(String)value;
                      break;
                    }
                  }
                }
              }
              if (text != null) {
                for (                String id : Splitter.on(',').trimResults().split(text)) {
                  if (id.equals(issue.getId()) || id.equals(SUPPRESS_ALL)) {
                    return true;
                  }
                }
              }
            }
          }
        }
      }
    }
    element=element.getParent();
  }
  return false;
}
