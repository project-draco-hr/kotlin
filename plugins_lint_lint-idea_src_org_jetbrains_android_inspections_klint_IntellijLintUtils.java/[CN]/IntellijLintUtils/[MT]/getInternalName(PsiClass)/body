{
  if (psiClass instanceof PsiAnonymousClass) {
    PsiClass parent=PsiTreeUtil.getParentOfType(psiClass,PsiClass.class);
    if (parent != null) {
      String internalName=getInternalName(parent);
      if (internalName == null) {
        return null;
      }
      return internalName + JavaAnonymousClassesHelper.getName((PsiAnonymousClass)psiClass);
    }
  }
  String sig=ClassUtil.getJVMClassName(psiClass);
  if (sig == null) {
    String qualifiedName=psiClass.getQualifiedName();
    if (qualifiedName != null) {
      return com.android.tools.klint.detector.api.ClassContext.getInternalName(qualifiedName);
    }
    return null;
  }
 else   if (sig.indexOf('.') != -1) {
    sig=com.android.tools.klint.detector.api.ClassContext.getInternalName(sig);
  }
  return sig;
}
