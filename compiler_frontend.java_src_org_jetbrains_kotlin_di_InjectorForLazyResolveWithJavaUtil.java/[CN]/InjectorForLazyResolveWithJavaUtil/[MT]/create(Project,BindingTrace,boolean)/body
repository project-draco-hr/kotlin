{
  ModuleDescriptorImpl module=TopDownAnalyzerFacadeForJVM.createJavaModule("<module>");
  GlobalSearchScope moduleContentScope=GlobalSearchScope.allScope(project);
  GlobalContextImpl globalContext=ContextPackage.GlobalContext();
  DeclarationProviderFactory declarationProviderFactory=DeclarationProviderFactoryService.createDeclarationProviderFactory(project,globalContext.getStorageManager(),Collections.<JetFile>emptyList(),moduleContentScope);
  SingleModuleClassResolver resolver=new SingleModuleClassResolver();
  InjectorForLazyResolveWithJava injector=new InjectorForLazyResolveWithJava(project,globalContext,trace,module,declarationProviderFactory,moduleContentScope,resolver);
  resolver.setResolver(injector.getJavaDescriptorResolver());
  module.addDependencyOnModule(module);
  module.initialize(injector.getJavaDescriptorResolver().getPackageFragmentProvider());
  if (dependOnBuiltins) {
    module.addDependencyOnModule(KotlinBuiltIns.getInstance().getBuiltInsModule());
  }
  module.seal();
  return injector;
}
