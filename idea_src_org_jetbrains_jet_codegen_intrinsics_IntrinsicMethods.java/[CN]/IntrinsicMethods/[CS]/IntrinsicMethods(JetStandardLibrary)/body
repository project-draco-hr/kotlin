{
  List<String> primitiveCastMethods=ImmutableList.of("dbl","flt","lng","int","chr","sht","byt");
  for (  String method : primitiveCastMethods) {
    declareIntrinsicProperty(stdlib,"Number",method,NUMBER_CAST);
  }
  declareIntrinsicProperty(stdlib,"Array","size",ARRAY_SIZE);
  List<ClassDescriptor> primitiveNumberTypes=ImmutableList.of(stdlib.getBoolean(),stdlib.getByte(),stdlib.getChar(),stdlib.getShort(),stdlib.getInt(),stdlib.getFloat(),stdlib.getLong(),stdlib.getDouble());
  for (  ClassDescriptor primitiveNumberType : primitiveNumberTypes) {
    final JetScope memberScope=primitiveNumberType.getMemberScope(Collections.<TypeProjection>emptyList());
    final FunctionGroup minus=memberScope.getFunctionGroup("minus");
    for (    FunctionDescriptor descriptor : minus.getFunctionDescriptors()) {
      if (descriptor.getValueParameters().isEmpty()) {
        myMethods.put(descriptor,UNARY_MINUS);
      }
    }
  }
}
