{
  PsiBuilder.Marker type=mark();
  boolean typeClosed=false;
  if (at(NAMESPACE_KEYWORD)) {
    advance();
    expect(DOT,"Expecting '.'",TokenSet.create(IDENTIFIER));
  }
  while (true) {
    expect(IDENTIFIER,"Type name expected",TokenSet.create(LT));
    PsiBuilder.Marker argsMarker=parseTypeArgumentList();
    if (!at(DOT)) {
      if (argsMarker != null) {
        type.doneBefore(REFERENCE_EXPRESSION,argsMarker);
        typeClosed=true;
      }
      break;
    }
    type.done(REFERENCE_EXPRESSION);
    type=type.precede();
    advance();
  }
  if (!typeClosed) {
    type.done(REFERENCE_EXPRESSION);
  }
}
