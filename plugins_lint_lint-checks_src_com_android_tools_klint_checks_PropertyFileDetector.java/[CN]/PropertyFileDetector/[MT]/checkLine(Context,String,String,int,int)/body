{
  String prefix="distributionUrl=http\\";
  if (line.startsWith(prefix)) {
    String https="https" + line.substring(prefix.length() - 1);
    String message=String.format("Replace HTTP with HTTPS for better security; use %1$s",https);
    int startOffset=offset + valueStart;
    int endOffset=startOffset + 4;
    Location location=Location.create(context.file,contents,startOffset,endOffset);
    context.report(HTTP,location,message);
  }
  boolean escaped=false;
  boolean hadNonPathEscape=false;
  int errorStart=-1;
  int errorEnd=-1;
  StringBuilder path=new StringBuilder();
  for (int i=valueStart; i < line.length(); i++) {
    char c=line.charAt(i);
    if (c == '\\') {
      escaped=!escaped;
      if (escaped) {
        path.append(c);
      }
    }
 else     if (c == ':') {
      if (!escaped) {
        hadNonPathEscape=true;
        if (errorStart < 0) {
          errorStart=i;
        }
        errorEnd=i;
      }
 else {
        escaped=false;
      }
      path.append(c);
    }
 else {
      if (escaped) {
        hadNonPathEscape=true;
        if (errorStart < 0) {
          errorStart=i;
        }
        errorEnd=i;
      }
      escaped=false;
      path.append(c);
    }
  }
  String pathString=path.toString();
  String key=line.substring(0,valueStart);
  if (hadNonPathEscape && key.endsWith(".dir=") || new File(pathString).exists()) {
    String escapedPath=suggestEscapes(line.substring(valueStart,line.length()));
    String message="Windows file separators (`\\`) and drive letter " + "separators (':') must be escaped (`\\\\`) in property files; use " + escapedPath;
    int startOffset=offset + errorStart;
    int endOffset=offset + errorEnd + 1;
    Location location=Location.create(context.file,contents,startOffset,endOffset);
    context.report(ESCAPE,location,message);
  }
}
