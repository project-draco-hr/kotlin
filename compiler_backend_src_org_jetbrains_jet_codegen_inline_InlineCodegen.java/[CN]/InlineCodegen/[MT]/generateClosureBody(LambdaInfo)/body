{
  JetFunctionLiteral declaration=info.getFunctionLiteral();
  FunctionDescriptor descriptor=info.getFunctionDescriptor();
  MethodContext parentContext=codegen.getContext();
  MethodContext context=parentContext.intoClosure(descriptor,codegen,typeMapper).intoFunction(descriptor);
  context.setInlineClosure(true);
  JvmMethodSignature jvmMethodSignature=typeMapper.mapSignature(descriptor);
  Method asmMethod=jvmMethodSignature.getAsmMethod();
  MethodNode methodNode=new MethodNode(Opcodes.ASM4,getMethodAsmFlags(descriptor,context.getContextKind()),asmMethod.getName(),asmMethod.getDescriptor(),jvmMethodSignature.getGenericsSignature(),null);
  MethodVisitor adapter=InlineCodegenUtil.wrapWithMaxLocalCalc(methodNode);
  FunctionCodegen.generateMethodBody(adapter,descriptor,context,jvmMethodSignature,new FunctionGenerationStrategy.FunctionDefault(state,descriptor,declaration){
    @Override public boolean generateLocalVarTable(){
      return false;
    }
  }
,codegen.getParentCodegen());
  adapter.visitMaxs(-1,-1);
  return methodNode;
}
