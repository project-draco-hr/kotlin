{
  if (delegationSpecifiers.isEmpty()) {
    return Collections.emptyList();
  }
  Collection<JetType> result=Lists.newArrayList();
  for (  JetDelegationSpecifier delegationSpecifier : delegationSpecifiers) {
    JetTypeReference typeReference=delegationSpecifier.getTypeReference();
    if (typeReference != null) {
      result.add(resolver.resolveType(extensibleScope,typeReference));
      JetTypeElement typeElement=typeReference.getTypeElement();
      while (typeElement instanceof JetNullableType) {
        JetNullableType nullableType=(JetNullableType)typeElement;
        trace.getErrorHandler().genericError(nullableType.getQuestionMarkNode(),"A supertype cannot be nullable");
        typeElement=nullableType.getInnerType();
      }
      if (typeElement instanceof JetUserType) {
        JetUserType userType=(JetUserType)typeElement;
        List<JetTypeProjection> typeArguments=userType.getTypeArguments();
        for (        JetTypeProjection typeArgument : typeArguments) {
          if (typeArgument.getProjectionKind() != JetProjectionKind.NONE) {
            trace.getErrorHandler().genericError(typeArgument.getProjectionNode(),"Projections are not allowed for immediate arguments of a supertype");
          }
        }
      }
    }
 else {
      result.add(ErrorUtils.createErrorType("No type reference"));
    }
  }
  return result;
}
