{
  final JetExpression operand=arguments.get(0);
  if (operand instanceof JetReferenceExpression) {
    final int index=codegen.indexOfLocal((JetReferenceExpression)operand);
    if (index >= 0 && JetTypeMapper.isIntPrimitive(expectedType)) {
      v.iinc(index,myDelta);
      return StackValue.local(index,expectedType);
    }
  }
  StackValue value=codegen.genQualified(receiver,operand);
  value.dupReceiver(v);
  value.put(expectedType,v);
  if (expectedType == Type.LONG_TYPE) {
    v.lconst(myDelta);
  }
 else   if (expectedType == Type.FLOAT_TYPE) {
    v.fconst(myDelta);
  }
 else   if (expectedType == Type.DOUBLE_TYPE) {
    v.dconst(myDelta);
  }
 else {
    v.aconst(myDelta);
  }
  v.add(expectedType);
  value.store(v);
  return value;
}
