{
  if (!checkReceiverAbsence(task,tracing,candidate,temporaryTrace))   return false;
  JetType receiverType=task.getReceiverType();
  JetType candidateReceiverType=candidate.getReceiverType();
  if (receiverType != null && candidateReceiverType != null && !semanticServices.getTypeChecker().isSubtypeOf(receiverType,candidateReceiverType)) {
    tracing.reportErrorOnReference(temporaryTrace,"This function requires a receiver of type " + candidateReceiverType);
    return false;
  }
  return true;
}
