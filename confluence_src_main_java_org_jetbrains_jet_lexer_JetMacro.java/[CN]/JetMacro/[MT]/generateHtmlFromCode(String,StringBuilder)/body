{
  try {
    List<TagData> tags=new ArrayList<TagData>();
    StringBuilder afterPreprocessing=preprocess(code.trim(),tags);
    result.append("<div class=\"code panel\" style=\"border-width: 1px;\">" + "<div class=\"codeContent panelContent\">" + "<div class=\"container\">");
    result.append(addNewLineOpenTag());
    _JetLexer jetLexer=new _JetLexer(DUMMY_READER);
    jetLexer.reset(afterPreprocessing,0,afterPreprocessing.length(),_JetLexer.YYINITIAL);
    Iterator<TagData> iterator=tags.iterator();
    TagData tag=iterator.hasNext() ? iterator.next() : null;
    while (true) {
      int tokenEnd=jetLexer.getTokenEnd();
      while (tag != null && tag.getEnd() < tokenEnd) {
        result.append("<div class=\"jet hwarning\">Skipping a tag in the middle of a token: &lt;").append(tag.getType()).append("&gt;</div>");
        tag=iterator.hasNext() ? iterator.next() : null;
      }
      if (tag != null) {
        if (tag.getStart() == tokenEnd) {
          tag.getType().appendOpenTag(result,tag);
        }
      }
      if (tag != null) {
        if (tag.getEnd() == tokenEnd || (tag.isNextToken() && tag.getStart() < tokenEnd)) {
          tag.getType().appendCloseTag(result,tag);
          tag=iterator.hasNext() ? iterator.next() : null;
        }
      }
      IElementType token=jetLexer.advance();
      if (token == null)       break;
      String yytext=jetLexer.yytext().toString();
      if (yytext.contains("\n")) {
        convertNewLines(result,yytext);
        yytext=yytext.replaceAll("\n","");
      }
      String style=null;
      if (token instanceof JetKeywordToken) {
        style="keyword";
      }
 else       if (token == JetTokens.IDENTIFIER) {
        for (        IElementType softKeyword : JetTokens.SOFT_KEYWORDS.asSet()) {
          if (((JetKeywordToken)softKeyword).getValue().equals(yytext.toString())) {
            style="softkeyword";
            break;
          }
        }
        style=style == null ? "plain" : style;
      }
 else       if (styleMap.containsKey(token)) {
        style=styleMap.get(token);
      }
 else {
        style="plain";
      }
      result.append("<code class=\"jet ").append(style).append("\">");
      ConfluenceUtils.escapeHTML(result,yytext);
      result.append("</code>");
    }
    result.append(addNewLineCloseTag());
    result.append("</div>");
    result.append("</div>");
    result.append("</div>");
  }
 catch (  Throwable e) {
    result=new StringBuilder(ConfluenceUtils.getErrorInHtml(e,code));
  }
}
