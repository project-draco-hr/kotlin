{
  assertType("if (true) 1","Unit");
  assertType("if (true) 1 else 1","Int");
  assertType("if (true) 1 else return","Int");
  assertType("if (true) return else 1","Int");
  assertType("if (true) return else return","Nothing");
  assertType("if (true) 1 else null","Int?");
  assertType("if (true) null else null","Nothing?");
  assertType("if (true) 1 else '1'","Any");
  assertType("if (true) null : Base_T<*>? else null : Derived_T<*>?","Base_T<*>?");
  assertType("if (true) null : Base_inT<*>? else null : Derived_T<*>?","Any?");
  assertType("if (true) null : DDerived_T<Int>? else null : Derived_T<Int>?","Derived_T<Int>?");
  assertType("if (true) null : DDerived_T<Int>? else null : DDerived1_T<Int>?","Derived_T<Int>?");
  assertType("if (true) null : Base_T<Int>? else null : Base_T<Boolean>?","Any?");
  assertType("if (true) null : Base_T<Int>? else null : Base_T<in Int>?","Base_T<in Int>?");
  assertType("if (true) null : Derived_T<Int>? else null : Base_T<in Int>?","Base_T<in Int>?");
  assertType("if (true) null : Derived_T<in Int>? else null : Base_T<Int>?","Any?");
  assertType("if (true) null : Base_T<Int>? else null : Base_T<*>?","Base_T<*>?");
}
