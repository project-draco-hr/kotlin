{
  CallableMemberDescriptor unwrappedDescriptor=DescriptorUtils.unwrapFakeOverride(descriptor);
  int flag=getAccessFlags(unwrappedDescriptor);
  if ((flag & ACC_PRIVATE) == 0 && (flag & ACC_PROTECTED) == 0) {
    return descriptor;
  }
  DeclarationDescriptor enclosed=descriptor.getContainingDeclaration();
  CodegenContext descriptorContext=findParentContextWithDescriptor(enclosed);
  if (descriptorContext == null && DescriptorUtils.isCompanionObject(enclosed)) {
    CodegenContext classContext=findParentContextWithDescriptor(enclosed.getContainingDeclaration());
    if (classContext instanceof ClassContext) {
      descriptorContext=((ClassContext)classContext).getCompanionObjectContext();
    }
  }
  if (descriptorContext == null) {
    return descriptor;
  }
  if ((flag & ACC_PROTECTED) != 0) {
    PackageFragmentDescriptor unwrappedDescriptorPackage=DescriptorUtils.getParentOfType(unwrappedDescriptor,PackageFragmentDescriptor.class,false);
    PackageFragmentDescriptor contextDescriptorPackage=DescriptorUtils.getParentOfType(descriptorContext.getContextDescriptor(),PackageFragmentDescriptor.class,false);
    boolean inSamePackage=contextDescriptorPackage != null && unwrappedDescriptorPackage != null && unwrappedDescriptorPackage.getFqName().equals(contextDescriptorPackage.getFqName());
    if (inSamePackage) {
      return descriptor;
    }
  }
  return (D)descriptorContext.getAccessor(descriptor,superCallExpression);
}
