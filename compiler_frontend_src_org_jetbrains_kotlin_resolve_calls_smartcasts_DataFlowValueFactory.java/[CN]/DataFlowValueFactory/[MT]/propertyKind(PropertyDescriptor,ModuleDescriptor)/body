{
  if (propertyDescriptor.isVar())   return MEMBER_VARIABLE;
  if (!isFinal(propertyDescriptor))   return MEMBER_VALUE_WITH_GETTER;
  if (!hasDefaultGetter(propertyDescriptor))   return MEMBER_VALUE_WITH_GETTER;
  if (!invisibleFromOtherModules(propertyDescriptor)) {
    ModuleDescriptor declarationModule=DescriptorUtils.getContainingModule(propertyDescriptor);
    if (usageModule == null || !usageModule.equals(declarationModule)) {
      return ALIEN_PUBLIC_VALUE;
    }
  }
  return STABLE_VALUE;
}
