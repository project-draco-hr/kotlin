{
  if (firstDecl == lastDecl) {
    LineRange range=adjustDeclarationRange(firstDecl,editor,oldRange);
    if (range != null) {
      range.firstElement=range.lastElement=firstDecl;
    }
    return range;
  }
  PsiElement parent=PsiTreeUtil.findCommonParent(firstDecl,lastDecl);
  if (parent == null)   return null;
  Pair<PsiElement,PsiElement> combinedRange=getElementRange(parent,firstDecl,lastDecl);
  if (combinedRange == null || !(combinedRange.first instanceof JetDeclaration) || !(combinedRange.second instanceof JetDeclaration)) {
    return null;
  }
  LineRange lineRange1=adjustDeclarationRange((JetDeclaration)combinedRange.getFirst(),editor,oldRange);
  if (lineRange1 == null)   return null;
  LineRange lineRange2=adjustDeclarationRange((JetDeclaration)combinedRange.getSecond(),editor,oldRange);
  if (lineRange2 == null)   return null;
  LineRange range=new LineRange(lineRange1.startLine,lineRange2.endLine);
  range.firstElement=combinedRange.getFirst();
  range.lastElement=combinedRange.getSecond();
  return range;
}
