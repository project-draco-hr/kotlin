{
  EnumSet<TypeUsage> signatureTypeUsages=EnumSet.of(TypeUsage.MEMBER_SIGNATURE_COVARIANT,TypeUsage.MEMBER_SIGNATURE_CONTRAVARIANT,TypeUsage.MEMBER_SIGNATURE_INVARIANT);
  if (!signatureTypeUsages.contains(originalTypeUsage)) {
    return originalTypeUsage;
  }
  if (JavaAnnotationResolver.findAnnotationWithExternal(owner,JvmAbi.JETBRAINS_MUTABLE_ANNOTATION.getFqName().getFqName()) != null) {
    return TypeUsage.MEMBER_SIGNATURE_COVARIANT;
  }
  if (JavaAnnotationResolver.findAnnotationWithExternal(owner,JvmAbi.JETBRAINS_READONLY_ANNOTATION.getFqName().getFqName()) != null) {
    return TypeUsage.MEMBER_SIGNATURE_CONTRAVARIANT;
  }
  return originalTypeUsage;
}
