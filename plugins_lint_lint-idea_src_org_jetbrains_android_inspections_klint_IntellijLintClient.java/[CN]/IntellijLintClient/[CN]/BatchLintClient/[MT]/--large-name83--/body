{
  VirtualFile vFile=null;
  File file=null;
  if (location != null) {
    file=location.getFile();
    vFile=LocalFileSystem.getInstance().findFileByIoFile(file);
  }
 else   if (context.getProject() != null) {
    final Module module=findModuleForLintProject(myProject,context.getProject());
    if (module != null) {
      final AndroidFacet facet=AndroidFacet.getInstance(module);
      vFile=facet != null ? AndroidRootUtil.getPrimaryManifestFile(facet) : null;
      if (vFile != null) {
        file=new File(vFile.getPath());
      }
    }
  }
  boolean inScope=vFile != null && myScope.contains(vFile);
  if (!inScope && vFile != null && vFile.isDirectory()) {
    if (myScope.getScopeType() == AnalysisScope.PROJECT) {
      inScope=true;
    }
 else     if (myScope.getScopeType() == AnalysisScope.MODULE || myScope.getScopeType() == AnalysisScope.MODULES) {
      final Module module=findModuleForLintProject(myProject,context.getProject());
      if (module != null && myScope.containsModule(module)) {
        inScope=true;
      }
    }
  }
  if (inScope) {
    file=new File(PathUtil.getCanonicalPath(file.getPath()));
    Map<File,List<org.jetbrains.android.inspections.klint.ProblemData>> file2ProblemList=myProblemMap.get(issue);
    if (file2ProblemList == null) {
      file2ProblemList=new HashMap<File,List<org.jetbrains.android.inspections.klint.ProblemData>>();
      myProblemMap.put(issue,file2ProblemList);
    }
    List<org.jetbrains.android.inspections.klint.ProblemData> problemList=file2ProblemList.get(file);
    if (problemList == null) {
      problemList=new ArrayList<org.jetbrains.android.inspections.klint.ProblemData>();
      file2ProblemList.put(file,problemList);
    }
    TextRange textRange=TextRange.EMPTY_RANGE;
    if (location != null) {
      final com.android.tools.klint.detector.api.Position start=location.getStart();
      final com.android.tools.klint.detector.api.Position end=location.getEnd();
      if (start != null && end != null && start.getOffset() <= end.getOffset()) {
        textRange=new TextRange(start.getOffset(),end.getOffset());
      }
    }
    com.android.tools.klint.detector.api.Severity configuredSeverity=severity != issue.getDefaultSeverity() ? severity : null;
    message=format.convertTo(message,RAW);
    problemList.add(new org.jetbrains.android.inspections.klint.ProblemData(issue,message,textRange,configuredSeverity));
    if (location != null && location.getSecondary() != null) {
      reportSecondary(context,issue,severity,location,message,format);
    }
  }
}
