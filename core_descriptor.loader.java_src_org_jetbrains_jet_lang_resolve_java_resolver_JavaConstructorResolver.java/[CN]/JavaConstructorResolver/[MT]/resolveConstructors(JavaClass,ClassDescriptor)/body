{
  Collection<ConstructorDescriptor> result=new ArrayList<ConstructorDescriptor>();
  Collection<JavaMethod> constructors=javaClass.getConstructors();
  if (constructors.isEmpty()) {
    ConstructorDescriptor defaultConstructor=resolveDefaultConstructor(javaClass,containingClass);
    if (defaultConstructor != null) {
      result.add(defaultConstructor);
    }
  }
 else {
    for (    JavaMethod constructor : constructors) {
      ConstructorDescriptor descriptor=resolveConstructor(constructor,containingClass,javaClass.isStatic());
      result.add(descriptor);
      ConstructorDescriptor samAdapter=resolveSamAdapter(descriptor);
      if (samAdapter != null) {
        result.add(samAdapter);
      }
    }
  }
  for (  ConstructorDescriptor constructor : result) {
    ((ConstructorDescriptorImpl)constructor).setReturnType(containingClass.getDefaultType());
  }
  return result;
}
