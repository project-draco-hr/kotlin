{
  File runtimePath=PathUtil.getKotlinPathsForIdeaPlugin().getJsLibJarPath();
  if (!runtimePath.exists()) {
    Messages.showErrorDialog("JavaScript standard library was not found. Make sure plugin is installed properly.",JAVA_SCRIPT_LIBRARY_CREATION);
    return null;
  }
  String directoryPath=FileUIUtils.selectDestinationFolderDialog(null,contextDirectory,"Select folder where Kotlin JavaScript header should be copied");
  if (directoryPath == null) {
    return null;
  }
  final File targetFile;
  try {
    targetFile=FileUIUtils.copyWithOverwriteDialog(directoryPath,runtimePath);
  }
 catch (  IOException e) {
    Messages.showErrorDialog("Error during file copy",JAVA_SCRIPT_LIBRARY_CREATION);
    return null;
  }
  return new NewLibraryConfiguration(LIBRARY_NAME + "-" + JetPluginUtil.getPluginVersion(),getDownloadableLibraryType(),new LibraryVersionProperties()){
    @Override public void addRoots(    @NotNull LibraryEditor editor){
      editor.addRoot(VfsUtil.getUrlForLibraryRoot(targetFile),OrderRootType.SOURCES);
    }
  }
;
}
