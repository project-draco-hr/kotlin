{
  if (module.getSourceFiles().isEmpty()) {
    throw new CompileEnvironmentException("No source files where defined in module " + module.getModuleName());
  }
  CompilerConfiguration compilerConfiguration=configuration.copy();
  for (  String sourceFile : module.getSourceFiles()) {
    File source=new File(sourceFile);
    if (!source.isAbsolute()) {
      source=new File(directory,sourceFile);
    }
    if (!source.exists()) {
      throw new CompileEnvironmentException("'" + source + "' does not exist in module "+ module.getModuleName());
    }
    compilerConfiguration.add(CommonConfigurationKeys.SOURCE_ROOTS_KEY,source.getPath());
  }
  for (  String classpathRoot : module.getClasspathRoots()) {
    compilerConfiguration.add(JVMConfigurationKeys.CLASSPATH_KEY,new File(classpathRoot));
  }
  for (  String annotationsRoot : module.getAnnotationsRoots()) {
    compilerConfiguration.add(JVMConfigurationKeys.ANNOTATIONS_PATH_KEY,new File(annotationsRoot));
  }
  Disposable parentDisposable=CompileEnvironmentUtil.createMockDisposable();
  JetCoreEnvironment moduleEnvironment=null;
  try {
    moduleEnvironment=new JetCoreEnvironment(parentDisposable,compilerConfiguration);
    GenerationState generationState=analyzeAndGenerate(moduleEnvironment);
    if (generationState == null) {
      return null;
    }
    return generationState.getFactory();
  }
  finally {
    if (moduleEnvironment != null) {
      Disposer.dispose(parentDisposable);
    }
  }
}
