{
  JetCoreEnvironment environment=configuration.getEnvironment();
  Project project=environment.getProject();
  Progress backendProgress=new Progress(){
    @Override public void log(    String message){
      configuration.getMessageCollector().report(CompilerMessageSeverity.LOGGING,message,CompilerMessageLocation.NO_LOCATION);
    }
  }
;
  GenerationState generationState=new GenerationState(project,ClassBuilderFactories.binaries(stubs),backendProgress,exhaust,environment.getSourceFiles(),configuration.getBuiltinToJavaTypesMapping());
  generationState.compileCorrectFiles(CompilationErrorHandler.THROW_EXCEPTION);
  List<CompilerPlugin> plugins=configuration.getCompilerPlugins();
  CompilerPluginContext context=new CompilerPluginContext(project,exhaust.getBindingContext(),environment.getSourceFiles());
  for (  CompilerPlugin plugin : plugins) {
    plugin.processFiles(context);
  }
  return generationState;
}
