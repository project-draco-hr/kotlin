{
  Project project=environment.getProject();
  CompilerConfiguration configuration=environment.getConfiguration();
  GenerationState generationState=new GenerationState(project,ClassBuilderFactories.BINARIES,Progress.DEAF,exhaust.getBindingContext(),environment.getSourceFiles(),configuration.get(JVMConfigurationKeys.GENERATE_NOT_NULL_ASSERTIONS,false),configuration.get(JVMConfigurationKeys.GENERATE_NOT_NULL_PARAMETER_ASSERTIONS,false),true);
  KotlinCodegenFacade.compileCorrectFiles(generationState,CompilationErrorHandler.THROW_EXCEPTION);
  CompilerPluginContext context=new CompilerPluginContext(project,exhaust.getBindingContext(),environment.getSourceFiles());
  for (  CompilerPlugin plugin : configuration.getList(CLIConfigurationKeys.COMPILER_PLUGINS)) {
    plugin.processFiles(context);
  }
  return generationState;
}
