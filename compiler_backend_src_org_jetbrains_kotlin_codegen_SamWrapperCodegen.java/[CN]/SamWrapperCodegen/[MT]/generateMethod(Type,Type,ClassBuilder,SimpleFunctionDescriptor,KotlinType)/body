{
  FunctionCodegen codegen=new FunctionCodegen(state.getRootContext().intoClass((ClassDescriptor)erasedInterfaceFunction.getContainingDeclaration(),OwnerKind.IMPLEMENTATION,state),cv,state,parentCodegen);
  FunctionDescriptor invokeFunction=functionJetType.getMemberScope().getContributedFunctions(OperatorNameConventions.INVOKE,NoLookupLocation.FROM_BACKEND).iterator().next().getOriginal();
  StackValue functionField=StackValue.field(functionType,ownerType,FUNCTION_FIELD_NAME,false,StackValue.none());
  codegen.genSamDelegate(erasedInterfaceFunction,invokeFunction,functionField);
  SimpleFunctionDescriptor originalInterfaceErased=samType.getAbstractMethod().getOriginal();
  SimpleFunctionDescriptorImpl descriptorForBridges=SimpleFunctionDescriptorImpl.create(erasedInterfaceFunction.getContainingDeclaration(),erasedInterfaceFunction.getAnnotations(),originalInterfaceErased.getName(),CallableMemberDescriptor.Kind.DECLARATION,erasedInterfaceFunction.getSource());
  descriptorForBridges.initialize(null,originalInterfaceErased.getDispatchReceiverParameter(),originalInterfaceErased.getTypeParameters(),originalInterfaceErased.getValueParameters(),originalInterfaceErased.getReturnType(),Modality.OPEN,originalInterfaceErased.getVisibility());
  DescriptorUtilsKt.setSingleOverridden(descriptorForBridges,originalInterfaceErased);
  codegen.generateBridges(descriptorForBridges);
}
