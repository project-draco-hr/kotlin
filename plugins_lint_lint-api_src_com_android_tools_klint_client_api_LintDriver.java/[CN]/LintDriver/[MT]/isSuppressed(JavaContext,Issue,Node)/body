{
  boolean checkComments=mClient.checkForSuppressComments() && context != null && context.containsCommentSuppress();
  while (scope != null) {
    Class<? extends Node> type=scope.getClass();
    if (type == VariableDefinition.class) {
      VariableDefinition declaration=(VariableDefinition)scope;
      if (isSuppressed(issue,declaration.astModifiers())) {
        return true;
      }
    }
 else     if (type == MethodDeclaration.class) {
      MethodDeclaration declaration=(MethodDeclaration)scope;
      if (isSuppressed(issue,declaration.astModifiers())) {
        return true;
      }
    }
 else     if (type == ConstructorDeclaration.class) {
      ConstructorDeclaration declaration=(ConstructorDeclaration)scope;
      if (isSuppressed(issue,declaration.astModifiers())) {
        return true;
      }
    }
 else     if (type == ClassDeclaration.class) {
      ClassDeclaration declaration=(ClassDeclaration)scope;
      if (isSuppressed(issue,declaration.astModifiers())) {
        return true;
      }
    }
    if (checkComments && context.isSuppressedWithComment(scope,issue)) {
      return true;
    }
    scope=scope.getParent();
  }
  return false;
}
