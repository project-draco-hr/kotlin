{
  ClassDescriptor descriptor=state.getBindingContext().get(BindingContext.CLASS,aClass);
  if (descriptor == null || ErrorUtils.isError(descriptor)) {
    badDescriptor(descriptor,state.getClassBuilderMode());
    return;
  }
  if (descriptor.getName().equals(SpecialNames.NO_NAME_PROVIDED)) {
    badDescriptor(descriptor,state.getClassBuilderMode());
  }
  ClassBuilder classBuilder=state.getFactory().forClassImplementation(descriptor,aClass.getContainingFile());
  ClassContext classContext=parentContext.intoClass(descriptor,OwnerKind.IMPLEMENTATION,state);
  new ImplementationBodyCodegen(aClass,classContext,classBuilder,state,parentCodegen).generate();
  classBuilder.done();
  if (aClass instanceof JetClass && ((JetClass)aClass).isTrait()) {
    ClassBuilder traitBuilder=state.getFactory().forTraitImplementation(descriptor,state,aClass.getContainingFile());
    new TraitImplBodyCodegen(aClass,parentContext.intoClass(descriptor,OwnerKind.TRAIT_IMPL,state),traitBuilder,state,parentCodegen).generate();
    traitBuilder.done();
  }
}
