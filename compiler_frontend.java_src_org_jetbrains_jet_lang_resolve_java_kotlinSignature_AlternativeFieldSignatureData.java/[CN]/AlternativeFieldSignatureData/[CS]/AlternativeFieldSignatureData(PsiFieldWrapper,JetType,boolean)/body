{
  String signature=field.getSignatureAnnotation().signature();
  this.field=field;
  if (signature.isEmpty()) {
    setAnnotated(false);
    return;
  }
  setAnnotated(true);
  Project project=field.getPsiMember().getProject();
  JetProperty altPropertyDeclaration=JetPsiFactory.createProperty(project,signature);
  try {
    checkForSyntaxErrors(altPropertyDeclaration);
    checkFieldAnnotation(altPropertyDeclaration,field,isVar);
    altReturnType=computeReturnType(originalReturnType,altPropertyDeclaration.getTypeRef(),new HashMap<TypeParameterDescriptor,TypeParameterDescriptorImpl>());
  }
 catch (  AlternativeSignatureMismatchException e) {
    setError(e.getMessage());
  }
}
