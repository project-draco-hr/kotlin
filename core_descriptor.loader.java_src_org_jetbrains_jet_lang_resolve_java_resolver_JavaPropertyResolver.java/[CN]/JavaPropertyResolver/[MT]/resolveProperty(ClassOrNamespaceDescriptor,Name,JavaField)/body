{
  boolean isVar=!field.isFinal();
  PropertyDescriptorImpl propertyDescriptor=createPropertyDescriptor(owner,name,field,isVar);
  propertyDescriptor.initialize(null,null);
  TypeVariableResolver typeVariableResolver=new TypeVariableResolverImpl(Collections.<TypeParameterDescriptor>emptyList(),propertyDescriptor);
  JetType propertyType=getPropertyType(field,typeVariableResolver);
  ExternalSignatureResolver.AlternativeFieldSignature effectiveSignature=externalSignatureResolver.resolveAlternativeFieldSignature(field,propertyType,isVar);
  List<String> signatureErrors=effectiveSignature.getErrors();
  if (!signatureErrors.isEmpty()) {
    externalSignatureResolver.reportSignatureErrors(propertyDescriptor,signatureErrors);
  }
  propertyDescriptor.setType(effectiveSignature.getReturnType(),Collections.<TypeParameterDescriptor>emptyList(),DescriptorUtils.getExpectedThisObjectIfNeeded(owner),(JetType)null);
  cache.recordField(field,propertyDescriptor);
  return propertyDescriptor;
}
