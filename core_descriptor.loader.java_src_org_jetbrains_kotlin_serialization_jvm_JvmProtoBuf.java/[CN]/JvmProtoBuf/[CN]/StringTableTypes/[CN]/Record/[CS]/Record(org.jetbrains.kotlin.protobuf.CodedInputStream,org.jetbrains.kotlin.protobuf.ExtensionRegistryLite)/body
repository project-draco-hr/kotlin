{
  initFields();
  int mutable_bitField0_=0;
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 8:
{
    bitField0_|=0x00000001;
    range_=input.readInt32();
    break;
  }
case 16:
{
  bitField0_|=0x00000002;
  predefinedIndex_=input.readInt32();
  break;
}
case 24:
{
int rawValue=input.readEnum();
org.jetbrains.kotlin.serialization.jvm.JvmProtoBuf.StringTableTypes.Record.Operation value=org.jetbrains.kotlin.serialization.jvm.JvmProtoBuf.StringTableTypes.Record.Operation.valueOf(rawValue);
if (value != null) {
  bitField0_|=0x00000008;
  operation_=value;
}
break;
}
case 32:
{
if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
substringIndex_=new java.util.ArrayList<java.lang.Integer>();
mutable_bitField0_|=0x00000010;
}
substringIndex_.add(input.readInt32());
break;
}
case 34:
{
int length=input.readRawVarint32();
int limit=input.pushLimit(length);
if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
substringIndex_=new java.util.ArrayList<java.lang.Integer>();
mutable_bitField0_|=0x00000010;
}
while (input.getBytesUntilLimit() > 0) {
substringIndex_.add(input.readInt32());
}
input.popLimit(limit);
break;
}
case 40:
{
if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
replaceChar_=new java.util.ArrayList<java.lang.Integer>();
mutable_bitField0_|=0x00000020;
}
replaceChar_.add(input.readInt32());
break;
}
case 42:
{
int length=input.readRawVarint32();
int limit=input.pushLimit(length);
if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
replaceChar_=new java.util.ArrayList<java.lang.Integer>();
mutable_bitField0_|=0x00000020;
}
while (input.getBytesUntilLimit() > 0) {
replaceChar_.add(input.readInt32());
}
input.popLimit(limit);
break;
}
case 50:
{
bitField0_|=0x00000004;
string_=input.readBytes();
break;
}
}
}
}
 catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
substringIndex_=java.util.Collections.unmodifiableList(substringIndex_);
}
if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
replaceChar_=java.util.Collections.unmodifiableList(replaceChar_);
}
makeExtensionsImmutable();
}
}
