{
  element.accept(new JetVisitorVoid(){
    @Override public void visitElement(    PsiElement element){
      if (element instanceof LeafPsiElement) {
        if (JetTokens.SOFT_KEYWORDS.contains(((LeafPsiElement)element).getElementType())) {
          holder.createInfoAnnotation(element,null).setTextAttributes(JetHighlighter.JET_SOFT_KEYWORD);
        }
      }
    }
    @Override public void visitAnnotationEntry(    JetAnnotationEntry annotationEntry){
      JetTypeReference typeReference=annotationEntry.getTypeReference();
      if (typeReference != null) {
        JetTypeElement typeElement=typeReference.getTypeElement();
        markAnnotationIdentifiers(typeElement,holder);
      }
    }
    @Override public void visitFunctionLiteralExpression(    JetFunctionLiteralExpression expression){
      if (ApplicationManager.getApplication().isUnitTestMode())       return;
      JetFunctionLiteral functionLiteral=expression.getFunctionLiteral();
      holder.createInfoAnnotation(functionLiteral.getOpenBraceNode(),null).setTextAttributes(JetHighlighter.JET_FUNCTION_LITERAL_DELIMITER);
      ASTNode closingBraceNode=functionLiteral.getClosingBraceNode();
      if (closingBraceNode != null) {
        holder.createInfoAnnotation(closingBraceNode,null).setTextAttributes(JetHighlighter.JET_FUNCTION_LITERAL_DELIMITER);
      }
      ASTNode arrowNode=functionLiteral.getArrowNode();
      if (arrowNode != null) {
        holder.createInfoAnnotation(arrowNode,null).setTextAttributes(JetHighlighter.JET_FUNCTION_LITERAL_DELIMITER);
      }
    }
  }
);
}
