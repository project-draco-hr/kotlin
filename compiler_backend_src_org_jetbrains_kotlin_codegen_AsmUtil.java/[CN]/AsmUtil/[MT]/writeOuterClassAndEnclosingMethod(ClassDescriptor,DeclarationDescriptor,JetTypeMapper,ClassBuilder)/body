{
  String outerClassName=getOuterClassName(descriptor,originalDescriptor,typeMapper);
  FunctionDescriptor function=DescriptorUtils.getParentOfType(descriptor,FunctionDescriptor.class);
  while (function != null && JvmCodegenUtil.isLambdaWhichWillBeInlined(typeMapper.getBindingContext(),function)) {
    function=DescriptorUtils.getParentOfType(function,FunctionDescriptor.class);
  }
  if (function != null) {
    Method method=typeMapper.mapSignature(function).getAsmMethod();
    v.visitOuterClass(outerClassName,method.getName(),method.getDescriptor());
  }
 else {
    v.visitOuterClass(outerClassName,null,null);
  }
}
