{
  final Type leftType=left.type;
  final Type rightType=right.type;
  if (isPrimitive(leftType) && leftType == rightType) {
    return StackValue.cmp(opToken,leftType,left,right);
  }
  return StackValue.operation(Type.BOOLEAN_TYPE,new Function1<InstructionAdapter,Unit>(){
    @Override public Unit invoke(    InstructionAdapter v){
      left.put(leftType,v);
      right.put(rightType,v);
      genAreEqualCall(v);
      if (opToken == KtTokens.EXCLEQ || opToken == KtTokens.EXCLEQEQEQ) {
        genInvertBoolean(v);
      }
      return Unit.INSTANCE;
    }
  }
);
}
