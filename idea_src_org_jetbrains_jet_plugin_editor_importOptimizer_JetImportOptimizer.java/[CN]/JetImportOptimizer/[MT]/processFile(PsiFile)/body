{
  return new Runnable(){
    @Override public void run(){
      final JetFile jetFile=(JetFile)file;
      final Set<FqName> usedQualifiedNames=extractUsedQualifiedNames(jetFile);
      final List<JetImportDirective> directives=jetFile.getImportDirectives();
      final List<JetImportDirective> directivesBeforeCurrent=Lists.newArrayList();
      final List<JetImportDirective> directivesAfterCurrent=jetFile.getImportDirectives();
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        @Override public void run(){
          List<JetImportDirective> imports=jetFile.getImportDirectives();
          if (!imports.isEmpty()) {
            PsiElement firstForDelete=getWithPreviousWhitespaces(imports.get(0));
            PsiElement lastForDelete=getWithFollowedWhitespaces(imports.get(imports.size() - 1));
            PsiElement elementBeforeImports=firstForDelete.getPrevSibling();
            jetFile.deleteChildRange(firstForDelete,lastForDelete);
            if (elementBeforeImports != null) {
              jetFile.addAfter(JetPsiFactory.createNewLine(jetFile.getProject()),elementBeforeImports);
            }
          }
          for (          JetImportDirective anImport : directives) {
            directivesAfterCurrent.remove(anImport);
            ImportPath importPath=JetPsiUtil.getImportPath(anImport);
            if (importPath == null) {
              continue;
            }
            if (isUseful(importPath,usedQualifiedNames) && doNeedImport(importPath,jetFile,directivesBeforeCurrent) && doNeedImport(importPath,jetFile,directivesAfterCurrent)) {
              ImportInsertHelper.writeImportToFile(importPath,jetFile);
              directivesBeforeCurrent.add(anImport);
            }
          }
        }
      }
);
    }
  }
;
}
