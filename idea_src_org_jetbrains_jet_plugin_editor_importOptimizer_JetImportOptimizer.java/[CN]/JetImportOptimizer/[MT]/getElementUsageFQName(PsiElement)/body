{
  if (element instanceof JetFile) {
    return JetPsiUtil.getFQName((JetFile)element);
  }
  if (element instanceof JetNamedDeclaration) {
    return JetPsiUtil.getFQName((JetNamedDeclaration)element);
  }
  if (element instanceof PsiClass) {
    String qualifiedName=((PsiClass)element).getQualifiedName();
    if (qualifiedName != null) {
      return new FqName(qualifiedName);
    }
  }
  if (element instanceof PsiMethod) {
    PsiMethod method=(PsiMethod)element;
    PsiClass containingClass=method.getContainingClass();
    if (containingClass != null) {
      String classFQNStr=containingClass.getQualifiedName();
      if (classFQNStr != null) {
        if (method.isConstructor()) {
          return new FqName(classFQNStr);
        }
        FqName classFQN=new FqName(classFQNStr);
        if (classFQN.shortName().getName().equals(JvmAbi.PACKAGE_CLASS)) {
          return QualifiedNamesUtil.combine(classFQN.parent(),Name.identifier(method.getName()));
        }
 else {
          return QualifiedNamesUtil.combine(classFQN,Name.identifier(method.getName()));
        }
      }
    }
  }
  if (element instanceof PsiPackage) {
    return new FqName(((PsiPackage)element).getQualifiedName());
  }
  return null;
}
