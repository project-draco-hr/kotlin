{
  if (context.getFile() instanceof JetFile) {
    int offset=context.getStartOffset();
    PsiElement tokenBefore=context.getFile().findElementAt(Math.max(0,offset - 1));
    if (context.getCompletionType() == CompletionType.SMART) {
      context.setDummyIdentifier(CompletionUtilCore.DUMMY_IDENTIFIER_TRIMMED + "$");
    }
 else {
      if (JetPackagesContributor.ACTIVATION_PATTERN.accepts(tokenBefore)) {
        context.setDummyIdentifier(JetPackagesContributor.DUMMY_IDENTIFIER);
      }
 else       if (JetExtensionReceiverTypeContributor.ACTIVATION_PATTERN.accepts(tokenBefore)) {
        context.setDummyIdentifier(JetExtensionReceiverTypeContributor.DUMMY_IDENTIFIER);
      }
 else {
        context.setDummyIdentifier(CompletionUtilCore.DUMMY_IDENTIFIER_TRIMMED);
      }
    }
    context.setReplacementOffset(context.getReplacementOffset());
    if (context.getCompletionType() == CompletionType.SMART && !isAtEndOfLine(offset,context.getEditor().getDocument())) {
      PsiElement tokenAt=context.getFile().findElementAt(Math.max(0,offset));
      if (tokenAt != null) {
        PsiElement parent=tokenAt.getParent();
        if (parent instanceof JetExpression && !(parent instanceof JetBlockExpression)) {
          JetExpression expression=(JetExpression)parent;
          parent=expression.getParent();
          while (parent instanceof JetExpression && parent.getFirstChild() == expression) {
            expression=(JetExpression)parent;
            parent=expression.getParent();
          }
          int expressionEnd=expression.getTextRange().getEndOffset();
          int suggestedReplacementOffset;
          if (expression instanceof JetCallExpression) {
            JetExpression calleeExpression=((JetCallExpression)expression).getCalleeExpression();
            suggestedReplacementOffset=calleeExpression != null ? calleeExpression.getTextRange().getEndOffset() : expressionEnd;
          }
 else {
            suggestedReplacementOffset=expressionEnd;
          }
          if (suggestedReplacementOffset > context.getReplacementOffset()) {
            context.setReplacementOffset(suggestedReplacementOffset);
          }
          context.getOffsetMap().addOffset(SmartCompletion.OLD_ARGUMENTS_REPLACEMENT_OFFSET,expressionEnd);
        }
      }
    }
  }
}
