{
  BindingContext bindingContext=WholeProjectAnalyzerFacade.analyzeProjectWithCacheOnAFile((JetFile)reference.getExpression().getContainingFile()).getBindingContext();
  final PrefixMatcher prefixMatcher=result.getPrefixMatcher();
  NamePredicate namePredicate;
  if (prefixMatcher.getPrefix().length() == 0) {
    namePredicate=NamePredicate.all();
  }
 else {
class PrefixMatcherNamePredicate extends NamePredicate {
      @Override public boolean matches(      @NotNull Name name){
        return prefixMatcher.prefixMatches(name.getName());
      }
    }
    namePredicate=new PrefixMatcherNamePredicate();
  }
  Collection<DeclarationDescriptor> descriptors=TipsManager.getReferenceVariants(reference.getExpression(),bindingContext,namePredicate);
  Collection<DeclarationDescriptor> checkedDescriptors=Collections2.filter(descriptors,new Predicate<DeclarationDescriptor>(){
    @Override public boolean apply(    @Nullable DeclarationDescriptor descriptor){
      if (descriptor == null) {
        return false;
      }
      return isVisibleDescriptor(descriptor,session);
    }
  }
);
  return DescriptorLookupConverter.collectLookupElements(bindingContext,checkedDescriptors);
}
