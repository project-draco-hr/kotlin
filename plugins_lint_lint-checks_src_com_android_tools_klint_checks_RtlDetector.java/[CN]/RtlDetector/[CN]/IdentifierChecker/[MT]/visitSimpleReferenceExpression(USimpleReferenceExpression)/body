{
  String identifier=node.getIdentifier();
  boolean isLeft=LEFT_FIELD.equals(identifier);
  boolean isRight=RIGHT_FIELD.equals(identifier);
  if (!isLeft && !isRight) {
    return false;
  }
  UElement parent=node.getParent();
  if (parent instanceof UImportStatement || parent instanceof UVariable) {
    return false;
  }
  UElement resolved=node.resolve(mContext);
  if (resolved != null) {
    if (!(resolved instanceof UVariable)) {
      return false;
    }
 else {
      UClass containingClass=UastUtils.getContainingClass(resolved);
      if (containingClass == null || !containingClass.matchesFqName(FQCN_GRAVITY)) {
        return false;
      }
    }
  }
 else {
    if (parent instanceof UQualifiedExpression && !(GRAVITY_CLASS.equals(((UQualifiedExpression)parent).getReceiver().renderString()))) {
      return false;
    }
    if (parent instanceof USimpleReferenceExpression) {
      if (!LintUtils.isImported(mContext.getLintContext().getCompilationUnit(),FQCN_GRAVITY_PREFIX + identifier)) {
        return false;
      }
    }
  }
  String message=String.format("Use \"`Gravity.%1$s`\" instead of \"`Gravity.%2$s`\" to ensure correct " + "behavior in right-to-left locales",(isLeft ? GRAVITY_VALUE_START : GRAVITY_VALUE_END).toUpperCase(Locale.US),(isLeft ? GRAVITY_VALUE_LEFT : GRAVITY_VALUE_RIGHT).toUpperCase(Locale.US));
  Location location=UastAndroidUtils.getLocation(node);
  mContext.report(USE_START,node,location,message);
  return true;
}
