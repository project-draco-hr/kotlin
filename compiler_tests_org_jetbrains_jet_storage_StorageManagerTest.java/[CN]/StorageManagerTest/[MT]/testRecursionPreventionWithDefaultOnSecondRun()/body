{
@SuppressWarnings("unchecked") class C {
    NotNullLazyValue<String> rec=m.createLazyValueWithPostCompute(new Function0<String>(){
      @Override public String invoke(){
        return rec.invoke();
      }
    }
,new Function1<Boolean,String>(){
      @Override public String invoke(      Boolean firstTime){
        if (firstTime) {
          throw new ReenteringLazyValueComputationException();
        }
        return "second";
      }
    }
,new Function1<String,Unit>(){
      @Override public Unit invoke(      String s){
        fail("Recursion-tolerating value should not be post computed");
        return Unit.instance$;
      }
    }
);
  }
  C c=new C();
  try {
    c.rec.invoke();
    fail();
  }
 catch (  ReenteringLazyValueComputationException e) {
  }
  assertEquals("second",c.rec.invoke());
}
