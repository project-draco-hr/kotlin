{
  jetCoreEnvironment=JetCoreEnvironment.createForProduction(disposable,configuration);
  Project project=jetCoreEnvironment.getProject();
  trace=new BindingTraceContext();
  module=AnalyzerFacadeForJVM.createJavaModule("<repl>");
  TopDownAnalysisParameters topDownAnalysisParameters=new TopDownAnalysisParameters(Predicates.<PsiFile>alwaysTrue(),false,true,Collections.<AnalyzerScriptParameter>emptyList());
  injector=new InjectorForTopDownAnalyzerForJvm(project,topDownAnalysisParameters,trace,module);
  module.addFragmentProvider(injector.getTopDownAnalyzer().getPackageFragmentProvider());
  module.addFragmentProvider(KotlinBuiltIns.getInstance().getBuiltInsModule().getPackageFragmentProvider());
  module.addFragmentProvider(injector.getJavaDescriptorResolver().getPackageFragmentProvider());
  List<URL> classpath=Lists.newArrayList();
  for (  File file : configuration.getList(JVMConfigurationKeys.CLASSPATH_KEY)) {
    try {
      classpath.add(file.toURI().toURL());
    }
 catch (    MalformedURLException e) {
      throw ExceptionUtils.rethrow(e);
    }
  }
  classLoader=new ReplClassLoader(new URLClassLoader(classpath.toArray(new URL[0])));
}
