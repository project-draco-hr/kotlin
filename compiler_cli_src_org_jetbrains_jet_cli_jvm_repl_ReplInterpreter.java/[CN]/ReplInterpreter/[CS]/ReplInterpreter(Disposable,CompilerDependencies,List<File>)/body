{
  jetCoreEnvironment=new JetCoreEnvironment(disposable,compilerDependencies);
  Project project=jetCoreEnvironment.getProject();
  trace=new BindingTraceContext();
  module=new ModuleDescriptor(Name.special("<repl>"));
  TopDownAnalysisParameters topDownAnalysisParameters=new TopDownAnalysisParameters(Predicates.<PsiFile>alwaysTrue(),false,true,Collections.<AnalyzerScriptParameter>emptyList());
  injector=new InjectorForTopDownAnalyzerForJvm(project,topDownAnalysisParameters,trace,module,compilerDependencies);
  if (extraClasspath.size() > 0) {
    URL[] urls=new URL[extraClasspath.size()];
    for (int i=0; i < extraClasspath.size(); ++i) {
      try {
        urls[i]=extraClasspath.get(i).toURI().toURL();
      }
 catch (      Exception e) {
        throw ExceptionUtils.rethrow(e);
      }
    }
    classLoader=new ReplClassLoader(new URLClassLoader(urls));
  }
 else {
    classLoader=new ReplClassLoader();
  }
}
