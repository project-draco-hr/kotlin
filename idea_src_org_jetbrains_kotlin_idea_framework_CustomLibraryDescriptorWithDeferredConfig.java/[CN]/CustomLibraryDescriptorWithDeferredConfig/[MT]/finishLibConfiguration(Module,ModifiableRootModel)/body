{
  DeferredCopyFileRequests deferredCopyFileRequests=getCopyFileRequests();
  if (deferredCopyFileRequests == null)   return;
  Library library=ProjectStructureUtilKt.findLibrary(rootModel.orderEntries(),new Function1<Library,Boolean>(){
    @Override public Boolean invoke(    @NotNull Library library){
      LibraryPresentationManager libraryPresentationManager=LibraryPresentationManager.getInstance();
      List<VirtualFile> classFiles=Arrays.asList(library.getFiles(OrderRootType.CLASSES));
      return libraryPresentationManager.isLibraryOfKind(classFiles,libraryKind);
    }
  }
);
  if (library == null) {
    return;
  }
  Library.ModifiableModel model=library.getModifiableModel();
  try {
    deferredCopyFileRequests.performRequests(ProjectStructureUtilKt.getModuleDir(module),model);
  }
  finally {
    model.commit();
  }
}
