{
  super(NonConfiguredKotlinProjectComponent.CONFIGURE_NOTIFICATION_GROUP_ID,TITLE,notificationText,NotificationType.WARNING,new NotificationListener(){
    @Override public void hyperlinkUpdate(    @NotNull Notification notification,    @NotNull HyperlinkEvent event){
      if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
        final KotlinProjectConfigurator configurator=ConfigureKotlinInProjectUtils.getConfiguratorByName(event.getDescription());
        if (configurator == null) {
          throw new AssertionError("Missed action: " + event.getDescription());
        }
        DumbService.getInstance(project).withAlternativeResolveEnabled(new Runnable(){
          @Override public void run(){
            configurator.configure(project);
          }
        }
);
        notification.expire();
      }
    }
  }
);
  this.notificationText=notificationText;
}
