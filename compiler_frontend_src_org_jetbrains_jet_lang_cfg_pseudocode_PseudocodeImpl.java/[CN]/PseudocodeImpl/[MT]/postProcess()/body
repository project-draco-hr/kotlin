{
  if (postPrecessed)   return;
  postPrecessed=true;
  errorInstruction.setSink(getSinkInstruction());
  exitInstruction.setSink(getSinkInstruction());
  int index=0;
  for (  Instruction instruction : mutableInstructionList) {
    processInstruction(instruction,index);
    index++;
  }
  if (getParent() != null)   return;
  collectAndCacheReachableInstructions();
  for (  LocalFunctionDeclarationInstruction localFunctionDeclarationInstruction : getLocalDeclarations()) {
    ((PseudocodeImpl)localFunctionDeclarationInstruction.getBody()).collectAndCacheReachableInstructions();
  }
}
