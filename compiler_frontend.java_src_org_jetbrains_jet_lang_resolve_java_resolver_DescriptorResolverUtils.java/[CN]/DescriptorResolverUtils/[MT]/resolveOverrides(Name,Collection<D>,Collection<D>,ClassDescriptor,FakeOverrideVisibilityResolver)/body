{
  final Set<D> result=new HashSet<D>();
  OverrideResolver.generateOverridesInFunctionGroup(name,membersFromSupertypes,membersFromCurrent,classDescriptor,new OverrideResolver.DescriptorSink(){
    @Override @SuppressWarnings("unchecked") public void addToScope(    @NotNull CallableMemberDescriptor fakeOverride){
      visibilityResolver.resolveUnknownVisibilityForMember(fakeOverride);
      result.add((D)fakeOverride);
    }
    @Override public void conflict(    @NotNull CallableMemberDescriptor fromSuper,    @NotNull CallableMemberDescriptor fromCurrent){
    }
  }
);
  return result;
}
