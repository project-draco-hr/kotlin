{
  if (type instanceof JavaClassifierType) {
    JavaClassifier classifier=((JavaClassifierType)type).getClassifier();
    if (classifier instanceof JavaClass) {
      return ((JavaClass)classifier).getDefaultType();
    }
 else     if (classifier instanceof JavaTypeParameter) {
      JavaTypeParameter typeParameter=(JavaTypeParameter)classifier;
      return typeParameterErasure(typeParameter,new HashSet<JavaTypeParameter>(),substitutor);
    }
 else {
      return null;
    }
  }
 else   if (type instanceof JavaPrimitiveType) {
    return type;
  }
 else   if (type instanceof JavaArrayType) {
    JavaType erasure=erasure(((JavaArrayType)type).getComponentType(),substitutor);
    return erasure == null ? null : JavaElementFactory.getInstance().createArrayType(erasure);
  }
 else   if (type instanceof JavaWildcardType) {
    JavaWildcardType wildcardType=(JavaWildcardType)type;
    JavaType bound=wildcardType.getBound();
    if (bound != null && wildcardType.isExtends()) {
      return erasure(bound,substitutor);
    }
    return wildcardType.getTypeProvider().createJavaLangObjectType();
  }
 else {
    throw new IllegalStateException("Unsupported type: " + type);
  }
}
