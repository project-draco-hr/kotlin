{
  if (autoType.isError())   return autoType;
  if (JavaDescriptorResolverKt.getPLATFORM_TYPES())   return autoType;
  boolean resultNullable=typeMustBeNullable(autoType,typesFromSuper,howThisTypeIsUsed);
  ClassifierDescriptor resultClassifier=modifyTypeClassifier(autoType,typesFromSuper);
  List<TypeProjection> resultArguments=getTypeArgsOfType(autoType,resultClassifier,typesFromSuper);
  KtScope resultScope;
  if (resultClassifier instanceof ClassDescriptor) {
    resultScope=((ClassDescriptor)resultClassifier).getMemberScope(resultArguments);
  }
 else {
    resultScope=autoType.getMemberScope();
  }
  KotlinType type=KotlinTypeImpl.create(autoType.getAnnotations(),resultClassifier.getTypeConstructor(),resultNullable,resultArguments,resultScope);
  PropagationHeuristics.checkArrayInReturnType(this,type,typesFromSuper);
  return type;
}
