{
  try {
    final String testName=getTestName(false);
    type=(testName.startsWith("Smart")) ? CompletionType.SMART : CompletionType.BASIC;
    configureByFileNoComplete(testName + ".kt");
    final String fileText=getFile().getText();
    Integer completionTime=completionUtils.getExecutionTime(fileText);
    complete(completionTime == null ? 1 : completionTime);
    final String[] expected=completionUtils.itemsShouldExist(fileText);
    final String[] unexpected=completionUtils.itemsShouldAbsent(fileText);
    Integer itemsNumber=completionUtils.getExpectedNumber(fileText);
    assertTrue("Should be some assertions about completion",expected.length != 0 || unexpected.length != 0 || itemsNumber != null);
    assertContainsItems(expected);
    assertNotContainItems(unexpected);
    if (itemsNumber != null) {
      assertEquals(itemsNumber.intValue(),myItems.length);
    }
  }
 catch (  Exception e) {
    throw new AssertionError(e);
  }
}
