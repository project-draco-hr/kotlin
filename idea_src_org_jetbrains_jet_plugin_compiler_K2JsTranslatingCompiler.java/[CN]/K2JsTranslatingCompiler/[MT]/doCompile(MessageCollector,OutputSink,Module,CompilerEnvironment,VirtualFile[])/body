{
  List<File> srcFiles=ContainerUtil.map(files,new Function<VirtualFile,File>(){
    @Override public File fun(    VirtualFile file){
      return new File(file.getPath());
    }
  }
);
  List<String> libraryFiles=getLibraryFiles(module);
  File outDir=environment.getOutput();
  File outFile=new File(outDir,module.getName() + ".js");
  OutputItemsCollectorImpl outputItemsCollector=new OutputItemsCollectorImpl();
  Project project=module.getProject();
  CommonCompilerArguments commonArguments=KotlinCommonCompilerArgumentsHolder.getInstance(project).getSettings();
  K2JSCompilerArguments k2jsArguments=Kotlin2JsCompilerArgumentsHolder.getInstance(project).getSettings();
  CompilerSettings compilerSettings=KotlinCompilerSettings.getInstance(project).getSettings();
  KotlinCompilerRunner.runK2JsCompiler(commonArguments,k2jsArguments,compilerSettings,messageCollector,environment,outputItemsCollector,srcFiles,libraryFiles,outFile);
  TranslatingCompilerUtils.reportOutputs(sink,environment.getOutput(),outputItemsCollector);
}
