{
  if (!myDoNotChangeVar) {
    myVarCheckbox=new NonFocusableCheckBox("Declare variable");
    myVarCheckbox.setSelected(isVar);
    myVarCheckbox.setMnemonic('v');
    myVarCheckbox.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        new WriteCommandAction(myProject,getCommandName(),getCommandName()){
          @Override protected void run(          Result result) throws Throwable {
            PsiDocumentManager.getInstance(myProject).commitDocument(myEditor.getDocument());
            JetChangePropertyActions.declareValueOrVariable(myProject,myVarCheckbox.isSelected(),myProperty);
          }
        }
.execute();
      }
    }
);
  }
  if (myExpr != null) {
    myExprTypeCheckbox=new NonFocusableCheckBox("Add type annotation");
    myExprTypeCheckbox.setSelected(false);
    myExprTypeCheckbox.setMnemonic('t');
    myExprTypeCheckbox.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        new WriteCommandAction(myProject,getCommandName(),getCommandName()){
          @Override protected void run(          Result result) throws Throwable {
            PsiDocumentManager.getInstance(myProject).commitDocument(myEditor.getDocument());
            if (myExprTypeCheckbox.isSelected()) {
              JetChangePropertyActions.addTypeAnnotation(myProject,myProperty,myExprType);
            }
 else {
              JetChangePropertyActions.removeTypeAnnotation(myProject,myProperty);
            }
          }
        }
.execute();
      }
    }
);
  }
  final JPanel panel=new JPanel(new GridBagLayout());
  panel.setBorder(null);
  int count=1;
  if (myVarCheckbox != null) {
    panel.add(myVarCheckbox,new GridBagConstraints(0,count,1,1,1,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(5,5,5,5),0,0));
    ++count;
  }
  if (myExprTypeCheckbox != null) {
    panel.add(myExprTypeCheckbox,new GridBagConstraints(0,count,1,1,1,0,GridBagConstraints.NORTHWEST,GridBagConstraints.HORIZONTAL,new Insets(5,5,5,5),0,0));
    ++count;
  }
  panel.add(Box.createVerticalBox(),new GridBagConstraints(0,count,1,1,1,1,GridBagConstraints.NORTHWEST,GridBagConstraints.BOTH,new Insets(0,0,0,0),0,0));
  return panel;
}
