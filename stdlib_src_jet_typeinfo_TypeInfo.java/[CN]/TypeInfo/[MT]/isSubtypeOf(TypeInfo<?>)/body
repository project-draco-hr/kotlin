{
  if (!superType.theClass.isAssignableFrom(theClass)) {
    return false;
  }
  if (nullable && !superType.nullable) {
    return false;
  }
  if (projections != null) {
    if (superType.projections == null || superType.projections.length != projections.length) {
      throw new IllegalArgumentException("inconsistent type infos for the same class");
    }
    for (int i=0; i < projections.length; i++) {
      if (!projections[i].equals(superType.projections[i])) {
        return false;
      }
    }
  }
  return true;
}
