{
  Signature signature=((TypeInfoImpl)typeInfo).signature;
  if (signature.klazz.isArray() && signature.klazz.getComponentType().isPrimitive()) {
    Class componentType=signature.klazz.getComponentType();
    if (componentType == byte.class)     return (Object[])Array.newInstance(JetByteArray.class,length);
    if (componentType == short.class)     return (Object[])Array.newInstance(JetShortArray.class,length);
    if (componentType == int.class)     return (Object[])Array.newInstance(JetIntArray.class,length);
    if (componentType == long.class)     return (Object[])Array.newInstance(JetLongArray.class,length);
    if (componentType == char.class)     return (Object[])Array.newInstance(JetCharArray.class,length);
    if (componentType == boolean.class)     return (Object[])Array.newInstance(JetBoolArray.class,length);
    if (componentType == float.class)     return (Object[])Array.newInstance(JetFloatArray.class,length);
    if (componentType == double.class)     return (Object[])Array.newInstance(JetDoubleArray.class,length);
    throw new IllegalStateException();
  }
 else {
    return (Object[])Array.newInstance(signature.klazz,length);
  }
}
