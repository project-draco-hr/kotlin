{
switch (string[cur]) {
case 'L':
    String name=parseName();
  Class<?> aClass;
try {
  aClass=classLoader.loadClass(name.replace('/','.'));
}
 catch (ClassNotFoundException e) {
  throw new RuntimeException(e);
}
List<TypeProj> proj=null;
boolean nullable=false;
if (cur != string.length && string[cur] == '<') {
cur++;
while (string[cur] != '>') {
if (proj == null) proj=new LinkedList<TypeProj>();
proj.add(parseProjection());
}
cur++;
}
if (cur != string.length && string[cur] == '?') {
cur++;
nullable=true;
}
return new TypeReal(aClass,nullable,proj == null ? Collections.<TypeProj>emptyList() : proj);
case 'T':
return parseTypeVar();
default :
throw new IllegalStateException(new String(string));
}
}
