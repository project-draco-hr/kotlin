{
  Collection<DeclarationDescriptor> declarationsByLabel=context.scope.getDeclarationsByLabel(labelName);
  int size=declarationsByLabel.size();
  if (size == 1) {
    DeclarationDescriptor declarationDescriptor=declarationsByLabel.iterator().next();
    JetElement element;
    if (declarationDescriptor instanceof FunctionDescriptor || declarationDescriptor instanceof ClassDescriptor) {
      element=(JetElement)BindingContextUtils.descriptorToDeclaration(context.trace.getBindingContext(),declarationDescriptor);
    }
 else {
      throw new UnsupportedOperationException(declarationDescriptor.getClass().toString());
    }
    context.trace.record(LABEL_TARGET,labelExpression,element);
    return element;
  }
 else   if (size == 0) {
    JetElement element=resolveNamedLabel(labelName,labelExpression,context);
    if (element == null) {
      context.trace.report(UNRESOLVED_REFERENCE.on(labelExpression,labelExpression));
    }
    return element;
  }
  BindingContextUtils.reportAmbiguousLabel(context.trace,labelExpression,declarationsByLabel);
  return null;
}
