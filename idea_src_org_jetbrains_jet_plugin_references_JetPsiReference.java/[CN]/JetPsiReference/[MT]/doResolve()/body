{
  JetFile file=(JetFile)getElement().getContainingFile();
  BindingContext bindingContext=WholeProjectAnalyzerFacade.analyzeProjectWithCacheOnAFile(file).getBindingContext();
  List<PsiElement> psiElements=BindingContextUtils.resolveToDeclarationPsiElements(bindingContext,myExpression);
  if (psiElements.size() == 1) {
    return psiElements.iterator().next();
  }
  if (psiElements.size() > 1) {
    return null;
  }
  List<PsiElement> stdlibSymbols=resolveStandardLibrarySymbol(bindingContext);
  if (stdlibSymbols.size() == 1) {
    return stdlibSymbols.iterator().next();
  }
  if (stdlibSymbols.size() > 1) {
    return null;
  }
  Collection<? extends DeclarationDescriptor> declarationDescriptors=bindingContext.get(AMBIGUOUS_REFERENCE_TARGET,myExpression);
  if (declarationDescriptors != null)   return null;
  return file;
}
