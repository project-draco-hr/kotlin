{
  BindingContext context=AnalyzerFacadeWithCache.getContextForElement(myExpression);
  List<PsiElement> psiElements=BindingContextUtils.resolveToDeclarationPsiElements(context,myExpression);
  if (psiElements.size() == 1) {
    return psiElements.iterator().next();
  }
  if (psiElements.size() > 1) {
    return null;
  }
  DeclarationDescriptor referencedDescriptor=context.get(BindingContext.REFERENCE_TARGET,myExpression);
  if (referencedDescriptor != null) {
    JetDeclaration declarationInDecompiledFile=DecompiledNavigationUtils.findDeclarationForReference(myExpression.getProject(),referencedDescriptor);
    if (declarationInDecompiledFile != null) {
      return declarationInDecompiledFile;
    }
  }
  Collection<PsiElement> stdlibSymbols=resolveStandardLibrarySymbol(context);
  if (stdlibSymbols.size() == 1) {
    return stdlibSymbols.iterator().next();
  }
  return null;
}
