{
  Project project=namespace.getProject();
  BindingTraceContext bindingTraceContext=new BindingTraceContext();
  JetSemanticServices semanticServices=JetSemanticServices.createSemanticServices(project,bindingTraceContext.getErrorHandler());
  JavaSemanticServices javaSemanticServices=new JavaSemanticServices(project,semanticServices,bindingTraceContext);
  JetScope libraryScope=semanticServices.getStandardLibrary().getLibraryScope();
  WritableScope scope=semanticServices.createWritableScope(libraryScope,new ModuleDescriptor("<module>"));
  scope.importScope(new JavaPackageScope("",null,javaSemanticServices));
  scope.importScope(new JavaPackageScope("java.lang",null,javaSemanticServices));
  new TopDownAnalyzer(semanticServices,bindingTraceContext,flowDataTraceFactory).process(scope,namespace);
  return bindingTraceContext;
}
