{
  RecursiveDescriptorComparator.Configuration configuration=RecursiveDescriptorComparator.RECURSIVE_ALL.includeMethodsOfKotlinAny(false).withRenderer(DescriptorRenderer.Companion.withOptions(new Function1<DescriptorRendererOptions,Unit>(){
    @Override public Unit invoke(    DescriptorRendererOptions options){
      options.setWithDefinedIn(false);
      options.setOverrideRenderingPolicy(OverrideRenderingPolicy.RENDER_OPEN_OVERRIDE);
      options.setVerbose(true);
      options.setModifiers(DescriptorRendererModifier.ALL);
      return Unit.INSTANCE;
    }
  }
));
  PackageFragmentProvider packageFragmentProvider=createBuiltInsPackageFragmentProvider();
  List<KtFile> files=KotlinTestUtils.loadToJetFiles(getEnvironment(),ContainerUtil.concat(allFilesUnder("core/builtins/native"),allFilesUnder("core/builtins/src")));
  final ModuleDescriptor module=LazyResolveTestUtil.resolveLazily(files,getEnvironment(),false);
  for (  FqName packageFqName : CollectionsKt.listOf(BUILT_INS_PACKAGE_FQ_NAME,COLLECTIONS_PACKAGE_FQ_NAME,RANGES_PACKAGE_FQ_NAME)) {
    PackageFragmentDescriptor fromLazyResolve=CollectionsKt.single(module.getPackage(packageFqName).getFragments());
    if (fromLazyResolve instanceof LazyPackageDescriptor) {
      PackageFragmentDescriptor deserialized=CollectionsKt.single(packageFragmentProvider.getPackageFragments(packageFqName));
      RecursiveDescriptorComparator.validateAndCompareDescriptors(fromLazyResolve,deserialized,configuration,new File("compiler/testData/builtin-classes/default/" + packageFqName.asString().replace('.','-') + ".txt"));
    }
  }
}
