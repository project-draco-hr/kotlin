{
  RecursiveDescriptorComparator.Configuration configuration=RecursiveDescriptorComparator.RECURSIVE_ALL.includeMethodsOfKotlinAny(false).withRenderer(DescriptorRenderer.Companion.withOptions(new Function1<DescriptorRendererOptions,Unit>(){
    @Override public Unit invoke(    DescriptorRendererOptions options){
      options.setWithDefinedIn(false);
      options.setOverrideRenderingPolicy(OverrideRenderingPolicy.RENDER_OPEN_OVERRIDE);
      options.setVerbose(true);
      options.setPrettyFunctionTypes(false);
      options.setModifiers(DescriptorRendererModifier.ALL);
      return Unit.INSTANCE$;
    }
  }
));
  PackageFragmentDescriptor deserialized=createBuiltInsPackageFragment();
  List<KtFile> files=KotlinTestUtils.loadToJetFiles(getEnvironment(),ContainerUtil.concat(allFilesUnder("core/builtins/native"),allFilesUnder("core/builtins/src")));
  ModuleDescriptor module=LazyResolveTestUtil.resolveLazily(files,getEnvironment(),false);
  List<PackageFragmentDescriptor> fragments=module.getPackage(BUILT_INS_PACKAGE_FQ_NAME).getFragments();
  for (  PackageFragmentDescriptor fromLazyResolve : fragments) {
    if (fromLazyResolve instanceof LazyPackageDescriptor) {
      RecursiveDescriptorComparator.validateAndCompareDescriptors(fromLazyResolve,deserialized,configuration,new File("compiler/testData/builtin-classes.txt"));
      break;
    }
  }
}
