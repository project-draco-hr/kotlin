{
  JetElement codeFragmentExpression=codeFragment.getContentElement();
  if (!(codeFragmentExpression instanceof JetExpression))   return;
  PsiElement contextElement=codeFragment.getContext();
  JetScope scopeForContextElement;
  DataFlowInfo dataFlowInfoForContextElement;
  if (contextElement instanceof JetClassOrObject) {
    LazyClassDescriptor descriptor=(LazyClassDescriptor)resolveSession.resolveToDescriptor((JetClassOrObject)contextElement);
    scopeForContextElement=descriptor.getScopeForMemberDeclarationResolution();
    dataFlowInfoForContextElement=DataFlowInfo.EMPTY;
  }
 else   if (contextElement instanceof JetBlockExpression) {
    JetElement newContextElement=KotlinPackage.lastOrNull(((JetBlockExpression)contextElement).getStatements());
    if (!(newContextElement instanceof JetExpression))     return;
    BindingContext contextForElement=resolveToElement((JetElement)contextElement,BodyResolveMode.FULL);
    scopeForContextElement=contextForElement.get(BindingContext.RESOLUTION_SCOPE,((JetExpression)newContextElement));
    dataFlowInfoForContextElement=getDataFlowInfo(contextForElement,(JetExpression)newContextElement);
  }
 else {
    if (!(contextElement instanceof JetExpression))     return;
    JetExpression contextExpression=(JetExpression)contextElement;
    BindingContext contextForElement=resolveToElement((JetElement)contextElement,bodyResolveMode);
    scopeForContextElement=contextForElement.get(BindingContext.RESOLUTION_SCOPE,contextExpression);
    dataFlowInfoForContextElement=getDataFlowInfo(contextForElement,contextExpression);
  }
  if (scopeForContextElement == null)   return;
  JetScope codeFragmentScope=resolveSession.getScopeProvider().getFileScope(codeFragment);
  ChainedScope chainedScope=new ChainedScope(scopeForContextElement.getContainingDeclaration(),"Scope for resolve code fragment",scopeForContextElement,codeFragmentScope);
  AnalyzerPackage.computeTypeInContext((JetExpression)codeFragmentExpression,chainedScope,trace,dataFlowInfoForContextElement,TypeUtils.NO_EXPECTED_TYPE,resolveSession.getModuleDescriptor());
}
