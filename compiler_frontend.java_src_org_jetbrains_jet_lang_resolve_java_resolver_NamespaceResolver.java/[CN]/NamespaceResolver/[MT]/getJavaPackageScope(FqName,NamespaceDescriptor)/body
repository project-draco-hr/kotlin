{
  JavaDescriptorResolveData.ResolverNamespaceData resolverNamespaceData=namespaceDescriptorCacheByFqn.get(fqName);
  if (resolverNamespaceData == null) {
    resolverNamespaceData=createNamespaceResolverScopeData(fqName,ns);
  }
  if (resolverNamespaceData == null) {
    return null;
  }
  if (resolverNamespaceData == JavaDescriptorResolveData.ResolverNamespaceData.NEGATIVE) {
    throw new IllegalStateException("This means that we are trying to create a Java package, but have a package with the same FQN defined in Kotlin: " + fqName);
  }
  JavaPackageScope scope=resolverNamespaceData.getMemberScope();
  if (scope == null) {
    throw new IllegalStateException("fqn: " + fqName);
  }
  return scope;
}
