{
  StringBuilder builder=new StringBuilder();
  JavaSemanticServices jss=new JavaSemanticServices(project,JetSemanticServices.createSemanticServices(project),new BindingTraceContext());
  PsiJavaFileStub js=getJavaStub(project,file);
  if (js != null) {
    if (js.getPackageName() != null && js.getPackageName().length() > 0) {
      builder.append("package ").append(js.getPackageName()).append(";\n\n");
    }
    PsiClass psiClass=js.getClasses()[0];
    JavaDescriptorResolver jdr=jss.getDescriptorResolver();
    ClassDescriptor cd=jdr.resolveClass(psiClass);
    builder.append(DescriptorRenderer.TEXT.render(cd));
  }
  return builder.toString();
}
