{
  CachedValue<BindingContext> bindingContextCachedValue=file.getUserData(BINDING_CONTEXT);
  if (bindingContextCachedValue == null) {
    bindingContextCachedValue=CachedValuesManager.getManager(file.getProject()).createCachedValue(new CachedValueProvider<BindingContext>(){
      @Override public Result<BindingContext> compute(){
synchronized (lock) {
          final Project project=file.getProject();
          final Set<JetDeclaration> namespaces=Sets.newLinkedHashSet();
          ProjectRootManager rootManager=ProjectRootManager.getInstance(project);
          if (rootManager != null && !ApplicationManager.getApplication().isUnitTestMode()) {
            VirtualFile[] contentRoots=rootManager.getContentRoots();
            CompilerPathsEx.visitFiles(contentRoots,new CompilerPathsEx.FileVisitor(){
              @Override protected void acceptFile(              VirtualFile file,              String fileRoot,              String filePath){
                if (!(file.getName().endsWith(".kt") || file.getName().endsWith(".kts")))                 return;
                PsiFile psiFile=PsiManager.getInstance(project).findFile(file);
                if (psiFile instanceof JetFile) {
                  namespaces.add(((JetFile)psiFile).getRootNamespace());
                }
              }
            }
);
          }
 else {
            namespaces.add(file.getRootNamespace());
          }
          try {
            BindingContext bindingContext=analyzingUtils.analyzeNamespaces(project,namespaces,JetControlFlowDataTraceFactory.EMPTY);
            return new Result<BindingContext>(bindingContext,PsiModificationTracker.MODIFICATION_COUNT);
          }
 catch (          ProcessCanceledException e) {
            throw e;
          }
catch (          Throwable e) {
            e.printStackTrace();
            BindingTraceContext bindingTraceContext=new BindingTraceContext();
            bindingTraceContext.report(Errors.EXCEPTION_WHILE_ANALYZING.on(file,e));
            return new Result<BindingContext>(bindingTraceContext.getBindingContext(),PsiModificationTracker.MODIFICATION_COUNT);
          }
        }
      }
    }
,false);
    file.putUserData(BINDING_CONTEXT,bindingContextCachedValue);
  }
  return bindingContextCachedValue.getValue();
}
