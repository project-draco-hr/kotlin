{
  final Collection<JetNamedFunction> jetNamedFunctions=JetShortFunctionNameIndex.getInstance().get(name,project,scope);
  final BindingContext context=getResolutionContext(scope);
  final HashSet<SimpleFunctionDescriptor> result=new HashSet<SimpleFunctionDescriptor>();
  for (  JetNamedFunction jetNamedFunction : jetNamedFunctions) {
    final SimpleFunctionDescriptor functionDescriptor=context.get(BindingContext.FUNCTION,jetNamedFunction);
    if (functionDescriptor != null) {
      if (functionDescriptor.getContainingDeclaration() instanceof NamespaceDescriptor) {
        if (functionDescriptor.getExpectedThisObject() != ReceiverDescriptor.NO_RECEIVER) {
          result.add(functionDescriptor);
        }
      }
    }
  }
  return result;
}
