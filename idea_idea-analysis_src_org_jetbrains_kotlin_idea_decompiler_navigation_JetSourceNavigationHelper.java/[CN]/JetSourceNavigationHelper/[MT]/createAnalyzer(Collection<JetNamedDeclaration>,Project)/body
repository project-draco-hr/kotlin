{
  ModuleDescriptorImpl moduleDescriptor=new ModuleDescriptorImpl(Name.special("<library module>"),TopDownAnalyzerFacadeForJVM.DEFAULT_IMPORTS,PlatformToKotlinClassMap.EMPTY);
  ModuleContext moduleContext=ContextPackage.ModuleContext(moduleDescriptor,project);
  FileBasedDeclarationProviderFactory providerFactory=new FileBasedDeclarationProviderFactory(moduleContext.getStorageManager(),getContainingFiles(candidates));
  moduleDescriptor.addDependencyOnModule(moduleDescriptor);
  moduleDescriptor.addDependencyOnModule(KotlinBuiltIns.getInstance().getBuiltInsModule());
  moduleDescriptor.seal();
  ResolveSession resolveSession=new InjectorForLazyResolve(moduleContext,providerFactory,new BindingTraceContext(),AdditionalCheckerProvider.DefaultProvider.INSTANCE$,new DynamicTypesSettings()).getResolveSession();
  moduleDescriptor.initialize(resolveSession.getPackageFragmentProvider());
  return resolveSession;
}
