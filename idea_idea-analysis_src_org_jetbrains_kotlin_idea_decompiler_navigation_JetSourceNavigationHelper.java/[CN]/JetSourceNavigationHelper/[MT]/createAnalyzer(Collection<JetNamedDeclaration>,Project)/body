{
  MutableModuleContext newModuleContext=ContextPackage.ContextForNewModule(project,Name.special("<library module>"),ModuleParameters(TopDownAnalyzerFacadeForJVM.DEFAULT_IMPORTS,PlatformToKotlinClassMap.EMPTY));
  newModuleContext.setDependencies(newModuleContext.getModule(),KotlinBuiltIns.getInstance().getBuiltInsModule());
  FileBasedDeclarationProviderFactory providerFactory=new FileBasedDeclarationProviderFactory(newModuleContext.getStorageManager(),getContainingFiles(candidates));
  ResolveSession resolveSession=DiPackage.createLazyResolveSession(newModuleContext,providerFactory,new BindingTraceContext(),AdditionalCheckerProvider.DefaultProvider.INSTANCE$,new DynamicTypesSettings());
  newModuleContext.initializeModuleContents(resolveSession.getPackageFragmentProvider());
  return resolveSession;
}
