{
  KtFile containingFile=declaration.getContainingJetFile();
  VirtualFile libraryFile=containingFile.getVirtualFile();
  if (libraryFile == null)   return GlobalSearchScope.EMPTY_SCOPE;
  boolean includeLibrarySources=navigationKind == NavigationKind.CLASS_FILES_TO_SOURCES;
  if (ProjectRootsUtil.isInContent(declaration,false,includeLibrarySources,!includeLibrarySources)) {
    return GlobalSearchScope.EMPTY_SCOPE;
  }
  Project project=declaration.getProject();
  return includeLibrarySources ? JetSourceFilterScope.kotlinLibrarySources(GlobalSearchScope.allScope(project),project) : JetSourceFilterScope.kotlinLibraryClassFiles(GlobalSearchScope.allScope(project),project);
}
