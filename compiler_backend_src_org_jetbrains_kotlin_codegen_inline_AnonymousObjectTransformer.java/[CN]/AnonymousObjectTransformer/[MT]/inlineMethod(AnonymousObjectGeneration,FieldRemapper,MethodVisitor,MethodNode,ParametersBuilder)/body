{
  ReifiedTypeParametersUsages typeParametersToReify=inliningContext.reifedTypeInliner.reifyInstructions(sourceNode.instructions);
  Parameters parameters=getMethodParametersWithCaptured(capturedBuilder,sourceNode);
  RegeneratedLambdaFieldRemapper remapper=new RegeneratedLambdaFieldRemapper(oldObjectType.getInternalName(),newLambdaType.getInternalName(),parameters,anonymousObjectGen.getCapturedLambdasToInline(),parentRemapper);
  MethodInliner inliner=new MethodInliner(sourceNode,parameters,inliningContext.subInline(inliningContext.nameGenerator.subGenerator("lambda")),remapper,isSameModule,"Transformer for " + anonymousObjectGen.getOwnerInternalName(),null);
  InlineResult result=inliner.doInline(resultVisitor,new LocalVarRemapper(parameters,0),false,LabelOwner.NOT_APPLICABLE);
  result.getReifiedTypeParametersUsages().mergeAll(typeParametersToReify);
  resultVisitor.visitMaxs(-1,-1);
  resultVisitor.visitEnd();
  return result;
}
