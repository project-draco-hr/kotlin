{
  String newSignature=editor.getDocument().getText();
  if (!previousSignature.equals(newSignature)) {
    final PsiNameValuePair[] nameValuePairs=JavaPsiFacade.getElementFactory(project).createAnnotationFromText("@" + KotlinSignatureInJavaMarkerProvider.KOTLIN_SIGNATURE_ANNOTATION + "(value=\""+ newSignature+ "\")",null).getParameterList().getAttributes();
    new WriteCommandAction(project){
      @Override protected void run(      final Result result) throws Throwable {
        ExternalAnnotationsManager.getInstance(project).deannotate(method,KotlinSignatureInJavaMarkerProvider.KOTLIN_SIGNATURE_ANNOTATION);
        ExternalAnnotationsManager.getInstance(project).annotateExternally(method,KotlinSignatureInJavaMarkerProvider.KOTLIN_SIGNATURE_ANNOTATION,method.getContainingFile(),nameValuePairs);
      }
    }
.execute();
  }
  balloon.hide();
}
