{
  List<JetElement> block=expression.getStatements();
  DeclarationDescriptor containingDescriptor=outerScope.getContainingDeclaration();
  if (containingDescriptor instanceof ScriptDescriptor) {
    if (!(expression.getParent() instanceof JetScript)) {
      containingDescriptor=((ScriptDescriptor)containingDescriptor).getScriptCodeDescriptor();
    }
  }
  WritableScope scope=new WritableScopeImpl(outerScope,containingDescriptor,new TraceBasedRedeclarationHandler(context.trace),"getBlockReturnedType");
  scope.changeLockLevel(WritableScope.LockLevel.BOTH);
  JetTypeInfo r;
  if (block.isEmpty()) {
    r=DataFlowUtils.checkType(KotlinBuiltIns.getInstance().getUnitType(),expression,context,context.dataFlowInfo);
  }
 else {
    r=getBlockReturnedTypeWithWritableScope(scope,block,coercionStrategyForLastExpression,context,trace);
  }
  scope.changeLockLevel(WritableScope.LockLevel.READING);
  if (containingDescriptor instanceof ScriptDescriptor) {
    trace.record(BindingContext.SCRIPT_SCOPE,(ScriptDescriptor)containingDescriptor,scope);
  }
  return r;
}
