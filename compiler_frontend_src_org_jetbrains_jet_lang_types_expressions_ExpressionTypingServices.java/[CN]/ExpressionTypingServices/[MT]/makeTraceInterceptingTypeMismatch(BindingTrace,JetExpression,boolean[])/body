{
  return new ObservableBindingTrace(trace){
    @Override public void report(    @NotNull Diagnostic diagnostic){
      if (diagnostic.getFactory() == TYPE_MISMATCH && diagnostic.getPsiElement() == expressionToWatch) {
        mismatchFound[0]=true;
      }
      if (TYPE_INFERENCE_ERRORS.contains(diagnostic.getFactory()) && PsiTreeUtil.getParentOfType(diagnostic.getPsiElement(),JetQualifiedExpression.class,false) == expressionToWatch) {
        mismatchFound[0]=true;
      }
      super.report(diagnostic);
    }
  }
;
}
