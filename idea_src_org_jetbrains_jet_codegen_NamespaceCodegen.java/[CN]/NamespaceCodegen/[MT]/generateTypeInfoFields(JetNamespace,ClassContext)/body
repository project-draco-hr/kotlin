{
  if (context.typeInfoConstants != null) {
    String jvmClassName=getJVMClassName(namespace.getName());
    for (    Map.Entry<JetType,Integer> e : (context.typeInfoConstants != null ? context.typeInfoConstants : Collections.<JetType,Integer>emptyMap()).entrySet()) {
      String fieldName="$typeInfoCache$" + e.getValue();
      v.visitField(ACC_PRIVATE | ACC_STATIC | ACC_SYNTHETIC,fieldName,"Ljet/typeinfo/TypeInfo;",null,null);
      MethodVisitor mmv=v.visitMethod(ACC_PUBLIC | ACC_STATIC | ACC_SYNTHETIC,"$getCachedTypeInfo$" + e.getValue(),"()Ljet/typeinfo/TypeInfo;",null,null);
      InstructionAdapterEx v=new InstructionAdapterEx(mmv);
      v.visitFieldInsn(GETSTATIC,jvmClassName,fieldName,"Ljet/typeinfo/TypeInfo;");
      v.visitInsn(DUP);
      Label end=new Label();
      v.visitJumpInsn(IFNONNULL,end);
      v.pop();
      generateTypeInfo(context,v,e.getKey(),state.getTypeMapper(),e.getKey());
      v.dup();
      v.visitFieldInsn(PUTSTATIC,jvmClassName,fieldName,"Ljet/typeinfo/TypeInfo;");
      v.visitLabel(end);
      v.visitInsn(ARETURN);
      v.visitMaxs(0,0);
      v.visitEnd();
    }
  }
}
