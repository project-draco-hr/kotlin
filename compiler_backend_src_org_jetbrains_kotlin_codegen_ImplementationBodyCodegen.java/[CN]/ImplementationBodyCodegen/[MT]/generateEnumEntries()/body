{
  if (descriptor.getKind() != ClassKind.ENUM_CLASS)   return;
  List<KtEnumEntry> enumEntries=CollectionsKt.filterIsInstance(element.getDeclarations(),KtEnumEntry.class);
  for (  KtEnumEntry enumEntry : enumEntries) {
    ClassDescriptor descriptor=getNotNull(bindingContext,BindingContext.CLASS,enumEntry);
    int isDeprecated=KotlinBuiltIns.isDeprecated(descriptor) ? ACC_DEPRECATED : 0;
    FieldVisitor fv=v.newField(JvmDeclarationOriginKt.OtherOrigin(enumEntry,descriptor),ACC_PUBLIC | ACC_ENUM | ACC_STATIC| ACC_FINAL| isDeprecated,descriptor.getName().asString(),classAsmType.getDescriptor(),null,null);
    AnnotationCodegen.forField(fv,typeMapper).genAnnotations(descriptor,null);
  }
  initializeEnumConstants(enumEntries);
}
