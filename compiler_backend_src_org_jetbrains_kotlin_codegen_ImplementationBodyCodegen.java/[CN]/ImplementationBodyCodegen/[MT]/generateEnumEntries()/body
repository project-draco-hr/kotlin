{
  if (descriptor.getKind() != ClassKind.ENUM_CLASS)   return;
  List<JetEnumEntry> enumEntries=KotlinPackage.filterIsInstance(element.getDeclarations(),JetEnumEntry.class);
  for (  JetEnumEntry enumEntry : enumEntries) {
    ClassDescriptor descriptor=getNotNull(bindingContext,BindingContext.CLASS,enumEntry);
    FieldVisitor fv=v.newField(OtherOrigin(enumEntry,descriptor),ACC_PUBLIC | ACC_ENUM | ACC_STATIC| ACC_FINAL,descriptor.getName().asString(),classAsmType.getDescriptor(),null,null);
    AnnotationCodegen.forField(fv,typeMapper).genAnnotations(descriptor,null);
  }
  initializeEnumConstants(enumEntries);
}
