{
  boolean isConstructor=functionDescriptor instanceof ConstructorDescriptor;
  boolean bridgeIsAccessorConstructor=bridgeDescriptor instanceof AccessorForConstructorDescriptor;
  boolean callFromAccessor=bridgeIsAccessorConstructor || (bridgeDescriptor != null && JetTypeMapper.isAccessor(bridgeDescriptor));
  CallableMethod callableMethod=isConstructor ? typeMapper.mapToCallableMethod((ConstructorDescriptor)functionDescriptor) : typeMapper.mapToCallableMethod(functionDescriptor,callFromAccessor,context);
  int reg=1;
  if (isConstructor && !bridgeIsAccessorConstructor) {
    iv.anew(callableMethod.getOwner());
    iv.dup();
    reg=0;
  }
 else   if (callFromAccessor) {
    if (!AnnotationsPackage.isPlatformStaticInObjectOrClass(functionDescriptor)) {
      iv.load(0,OBJECT_TYPE);
    }
  }
  for (  Type argType : callableMethod.getParameterTypes()) {
    if (AsmTypes.DEFAULT_CONSTRUCTOR_MARKER.equals(argType)) {
      iv.aconst(null);
    }
 else {
      iv.load(reg,argType);
      reg+=argType.getSize();
    }
  }
  callableMethod.genInvokeInstruction(iv);
}
