{
  if (state.getClassBuilderMode() != ClassBuilderMode.FULL)   return;
  ExpressionCodegen codegen=createOrGetClInitCodegen();
  InstructionAdapter iv=codegen.v;
  Type arrayAsmType=typeMapper.mapType(DescriptorUtilsKt.getBuiltIns(descriptor).getArrayType(INVARIANT,descriptor.getDefaultType()));
  v.newField(JvmDeclarationOriginKt.OtherOrigin(myClass),ACC_PRIVATE | ACC_STATIC | ACC_FINAL| ACC_SYNTHETIC,ENUM_VALUES_FIELD_NAME,arrayAsmType.getDescriptor(),null,null);
  iv.iconst(enumEntries.size());
  iv.newarray(classAsmType);
  if (!enumEntries.isEmpty()) {
    iv.dup();
    for (int ordinal=0, size=enumEntries.size(); ordinal < size; ordinal++) {
      initializeEnumConstant(enumEntries,ordinal);
    }
  }
  iv.putstatic(classAsmType.getInternalName(),ENUM_VALUES_FIELD_NAME,arrayAsmType.getDescriptor());
}
