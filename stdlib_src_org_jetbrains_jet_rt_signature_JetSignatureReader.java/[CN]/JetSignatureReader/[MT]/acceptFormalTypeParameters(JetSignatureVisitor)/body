{
  int pos;
  char c;
  if (signature.length() > 0 && signature.charAt(0) == '<') {
    pos=1;
    do {
      TypeInfoVariance variance;
      if (signature.substring(pos).startsWith("in ")) {
        variance=TypeInfoVariance.IN;
        pos+="in ".length();
      }
 else       if (signature.substring(pos).startsWith("out ")) {
        variance=TypeInfoVariance.OUT;
        pos+="out ".length();
      }
 else {
        variance=TypeInfoVariance.INVARIANT;
        pos+="".length();
      }
      int end=signature.indexOf(':',pos);
      if (end < 0) {
        throw new IllegalStateException();
      }
      JetSignatureVisitor parameterVisitor=v.visitFormalTypeParameter(signature.substring(pos,end),variance);
      pos=end + 1;
      c=signature.charAt(pos);
      if (c == 'L' || c == '[' || c == 'T' || c == '?') {
        pos=parseType(signature,pos,parameterVisitor.visitClassBound());
      }
      while ((c=signature.charAt(pos++)) == ':') {
        pos=parseType(signature,pos,parameterVisitor.visitInterfaceBound());
      }
      parameterVisitor.visitFormalTypeParameterEnd();
    }
 while (c != '>');
  }
 else {
    pos=0;
  }
  return pos;
}
