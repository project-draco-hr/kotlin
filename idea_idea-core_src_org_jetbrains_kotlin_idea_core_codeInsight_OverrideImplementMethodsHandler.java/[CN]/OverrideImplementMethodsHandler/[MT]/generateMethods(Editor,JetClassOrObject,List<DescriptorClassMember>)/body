{
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      JetClassBody body=classOrObject.getBody();
      if (body == null) {
        JetPsiFactory psiFactory=JetPsiFactory(classOrObject);
        classOrObject.add(psiFactory.createWhiteSpace());
        body=(JetClassBody)classOrObject.add(psiFactory.createEmptyClassBody());
      }
      PsiElement afterAnchor=findInsertAfterAnchor(editor,body);
      if (afterAnchor == null)       return;
      PsiElement firstGenerated=null;
      List<JetElement> elementsToCompact=new ArrayList<JetElement>();
      for (      JetElement element : generateOverridingMembers(selectedElements,classOrObject)) {
        PsiElement added=body.addAfter(element,afterAnchor);
        if (firstGenerated == null) {
          firstGenerated=added;
        }
        afterAnchor=added;
        elementsToCompact.add((JetElement)added);
      }
      ShortenReferences.DEFAULT.process(elementsToCompact);
      if (firstGenerated == null)       return;
      Project project=classOrObject.getProject();
      SmartPsiElementPointer<PsiElement> pointer=SmartPointerManager.getInstance(project).createSmartPsiElementPointer(firstGenerated);
      PsiDocumentManager.getInstance(project).doPostponedOperationsAndUnblockDocument(editor.getDocument());
      PsiElement element=pointer.getElement();
      if (element != null) {
        QuickfixPackage.moveCaretIntoGeneratedElement(editor,element);
      }
    }
  }
);
}
