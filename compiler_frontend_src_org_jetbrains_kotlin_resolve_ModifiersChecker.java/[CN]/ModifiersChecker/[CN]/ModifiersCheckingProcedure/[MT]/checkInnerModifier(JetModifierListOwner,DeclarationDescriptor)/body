{
  if (modifierListOwner.hasModifier(INNER_KEYWORD)) {
switch (checkIllegalInner(descriptor)) {
case ALLOWED:
      break;
case ILLEGAL_POSITION:
    reportIllegalModifiers(modifierListOwner,Collections.singletonList(INNER_KEYWORD));
  break;
case IN_TRAIT:
trace.report(INNER_CLASS_IN_TRAIT.on(modifierListOwner));
break;
case IN_OBJECT:
trace.report(INNER_CLASS_IN_OBJECT.on(modifierListOwner));
break;
}
return;
}
if (modifierListOwner instanceof JetClass && !(modifierListOwner instanceof JetEnumEntry)) {
JetClass aClass=(JetClass)modifierListOwner;
boolean localEnumError=aClass.isLocal() && aClass.isEnum();
if (!localEnumError && isIllegalNestedClass(descriptor)) {
trace.report(NESTED_CLASS_NOT_ALLOWED.on(aClass));
}
}
}
