{
  for (  AnnotationWithTarget annotationWithTarget : descriptor.getAnnotations().getUseSiteTargetedAnnotations()) {
    AnnotationDescriptor annotation=annotationWithTarget.getAnnotation();
    AnnotationUseSiteTarget target=annotationWithTarget.getTarget();
    if (target == null)     return;
switch (target) {
case FIELD:
      checkFieldTargetApplicability(modifierListOwner,descriptor,annotation);
    break;
case FILE:
  throw new IllegalArgumentException("@file annotations are not allowed here");
case PROPERTY:
reportIfNotPropertyDescriptor(descriptor,annotation,INAPPLICABLE_PROPERTY_TARGET);
break;
case PROPERTY_GETTER:
reportIfNotPropertyDescriptor(descriptor,annotation,INAPPLICABLE_GET_TARGET);
break;
case PROPERTY_SETTER:
{
reportIfNotMutableProperty(descriptor,annotation,INAPPLICABLE_SET_TARGET);
break;
}
case RECEIVER:
{
if (!(descriptor instanceof FunctionDescriptor) && !(descriptor instanceof PropertyDescriptor)) {
reportAnnotationTargetNotApplicable(annotation,INAPPLICABLE_RECEIVER_TARGET);
break;
}
if (((CallableMemberDescriptor)descriptor).getExtensionReceiverParameter() == null) {
reportAnnotationTargetNotApplicable(annotation,INAPPLICABLE_RECEIVER_TARGET);
}
break;
}
case SETTER_PARAMETER:
{
reportIfNotMutableProperty(descriptor,annotation,INAPPLICABLE_SPARAM_TARGET);
break;
}
}
}
}
