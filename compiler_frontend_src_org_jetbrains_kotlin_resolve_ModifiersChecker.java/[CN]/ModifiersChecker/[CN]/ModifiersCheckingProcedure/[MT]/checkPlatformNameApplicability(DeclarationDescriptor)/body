{
  AnnotationDescriptor annotation=descriptor.getAnnotations().findAnnotation(new FqName("kotlin.platform.platformName"));
  if (annotation == null)   return;
  JetAnnotationEntry annotationEntry=DescriptorToSourceUtils.getSourceFromAnnotation(annotation);
  if (annotationEntry == null)   return;
  if (descriptor instanceof FunctionDescriptor && !isRenamableFunction((FunctionDescriptor)descriptor)) {
    trace.report(INAPPLICABLE_PLATFORM_NAME.on(annotationEntry));
  }
  String value=null;
  Collection<ConstantValue<?>> values=annotation.getAllValueArguments().values();
  if (!values.isEmpty()) {
    ConstantValue<?> name=values.iterator().next();
    if (name instanceof StringValue) {
      value=((StringValue)name).getValue();
    }
  }
  if (value == null || !Name.isValidIdentifier(value)) {
    trace.report(ILLEGAL_PLATFORM_NAME.on(annotationEntry,String.valueOf(value)));
  }
  if (descriptor instanceof CallableMemberDescriptor) {
    CallableMemberDescriptor callableMemberDescriptor=(CallableMemberDescriptor)descriptor;
    if (DescriptorUtils.isOverride(callableMemberDescriptor) || callableMemberDescriptor.getModality().isOverridable()) {
      trace.report(INAPPLICABLE_PLATFORM_NAME.on(annotationEntry));
    }
  }
}
