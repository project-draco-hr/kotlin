{
  JsExpression leftExpression=Translation.translateAsExpression(leftKtExpression,context());
  JsBlock rightBlock=new JsBlock();
  JsExpression rightExpression=Translation.translateAsExpression(rightKtExpression,context(),rightBlock);
  if (rightBlock.isEmpty()) {
    return TranslationUtils.notNullConditional(leftExpression,rightExpression,context());
  }
  JsExpression result;
  JsIf ifStatement;
  if (BindingContextUtilsKt.isUsedAsExpression(expression,context().bindingContext())) {
    if (TranslationUtils.isCacheNeeded(leftExpression)) {
      TemporaryVariable resultVar=context().declareTemporary(leftExpression);
      result=resultVar.reference();
      context().addStatementToCurrentBlock(asSyntheticStatement(resultVar.assignmentExpression()));
    }
 else {
      result=leftExpression;
    }
    JsExpression testExpression=TranslationUtils.isNullCheck(result);
    rightBlock.getStatements().add(JsAstUtils.assignment(result,rightExpression).makeStmt());
    ifStatement=JsAstUtils.newJsIf(testExpression,rightBlock);
  }
 else {
    result=JsLiteral.NULL;
    JsExpression testExpression=TranslationUtils.isNullCheck(leftExpression);
    ifStatement=JsAstUtils.newJsIf(testExpression,rightBlock);
  }
  context().addStatementToCurrentBlock(ifStatement);
  return result;
}
