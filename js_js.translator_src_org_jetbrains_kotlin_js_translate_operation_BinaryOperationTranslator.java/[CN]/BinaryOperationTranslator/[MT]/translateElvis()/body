{
  JsExpression leftExpression=Translation.translateAsExpression(leftJetExpression,context());
  if (JsAstUtils.isEmptyExpression(leftExpression)) {
    return leftExpression;
  }
  JsBlock rightBlock=new JsBlock();
  JsExpression rightExpression=Translation.translateAsExpression(rightJetExpression,context(),rightBlock);
  if (rightBlock.isEmpty()) {
    return TranslationUtils.notNullConditional(leftExpression,rightExpression,context());
  }
  JsExpression result;
  JsIf ifStatement;
  if (BindingContextUtilsKt.isUsedAsExpression(expression,context().bindingContext())) {
    if (TranslationUtils.isCacheNeeded(leftExpression)) {
      TemporaryVariable resultVar=context().declareTemporary(leftExpression);
      result=resultVar.reference();
      context().addStatementToCurrentBlock(resultVar.assignmentExpression().makeStmt());
    }
 else {
      result=leftExpression;
    }
    JsExpression testExpression=TranslationUtils.isNullCheck(result);
    if (!JsAstUtils.isEmptyExpression(rightExpression)) {
      rightBlock.getStatements().add(JsAstUtils.assignment(result,rightExpression).makeStmt());
    }
    ifStatement=JsAstUtils.newJsIf(testExpression,rightBlock);
  }
 else {
    result=context().getEmptyExpression();
    JsExpression testExpression=TranslationUtils.isNullCheck(leftExpression);
    ifStatement=JsAstUtils.newJsIf(testExpression,rightBlock);
  }
  context().addStatementToCurrentBlock(ifStatement);
  return result;
}
