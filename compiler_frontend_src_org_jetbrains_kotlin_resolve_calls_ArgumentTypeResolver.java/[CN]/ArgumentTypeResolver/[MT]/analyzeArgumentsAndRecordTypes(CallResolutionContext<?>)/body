{
  MutableDataFlowInfoForArguments infoForArguments=context.dataFlowInfoForArguments;
  Call call=context.call;
  infoForArguments.setInitialDataFlowInfo(context.dataFlowInfo);
  for (  ValueArgument argument : call.getValueArguments()) {
    KtExpression expression=argument.getArgumentExpression();
    if (expression == null)     continue;
    CallResolutionContext<?> newContext=context.replaceDataFlowInfo(infoForArguments.getInfo(argument));
    KotlinTypeInfo typeInfoForCall=getArgumentTypeInfo(expression,newContext,SHAPE_FUNCTION_ARGUMENTS);
    infoForArguments.updateInfo(argument,typeInfoForCall.getDataFlowInfo());
  }
}
