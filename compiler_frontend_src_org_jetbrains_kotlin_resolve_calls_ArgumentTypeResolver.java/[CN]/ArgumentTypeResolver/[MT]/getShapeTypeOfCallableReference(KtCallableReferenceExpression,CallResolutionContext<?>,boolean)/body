{
  KotlinType receiverType=CallableReferencesResolutionUtilsKt.resolveCallableReferenceReceiverType(callableReferenceExpression,context,typeResolver);
  OverloadResolutionResults<CallableDescriptor> overloadResolutionResults=CallableReferencesResolutionUtilsKt.resolvePossiblyAmbiguousCallableReference(callableReferenceExpression,receiverType,context,ResolveArgumentsMode.SHAPE_FUNCTION_ARGUMENTS,callResolver);
  return CallableReferencesResolutionUtilsKt.getResolvedCallableReferenceShapeType(callableReferenceExpression,receiverType,overloadResolutionResults,context,expectedTypeIsUnknown,reflectionTypes,builtIns,functionPlaceholders);
}
