{
  return new JetSingleIntentionActionFactory(){
    @Nullable @Override public IntentionAction createAction(    Diagnostic diagnostic){
      JetMultiDeclarationEntry entry=getMultiDeclarationEntryThatTypeMismatchComponentFunction(diagnostic);
      BindingContext context=ResolvePackage.getAnalysisResults((JetFile)entry.getContainingFile().getContainingFile()).getBindingContext();
      ResolvedCall<FunctionDescriptor> resolvedCall=context.get(BindingContext.COMPONENT_RESOLVED_CALL,entry);
      if (resolvedCall == null)       return null;
      JetFunction componentFunction=(JetFunction)BindingContextUtils.descriptorToDeclaration(context,resolvedCall.getCandidateDescriptor());
      JetType expectedType=context.get(BindingContext.TYPE,entry.getTypeRef());
      if (componentFunction != null && expectedType != null) {
        return new ChangeFunctionReturnTypeFix(componentFunction,expectedType);
      }
 else       return null;
    }
  }
;
}
