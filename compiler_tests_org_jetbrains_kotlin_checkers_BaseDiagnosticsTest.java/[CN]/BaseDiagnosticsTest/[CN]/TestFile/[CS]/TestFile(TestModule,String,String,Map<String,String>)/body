{
  this.module=module;
  this.whatDiagnosticsToConsider=parseDiagnosticFilterDirective(directives);
  this.customLanguageFeatureSettings=parseLanguageFeatureSettingsDirective(directives);
  this.checkLazyLog=directives.containsKey(CHECK_LAZY_LOG_DIRECTIVE) || CHECK_LAZY_LOG_DEFAULT;
  this.declareCheckType=directives.containsKey(CHECK_TYPE_DIRECTIVE);
  this.declareFlexibleType=directives.containsKey(EXPLICIT_FLEXIBLE_TYPES_DIRECTIVE);
  this.markDynamicCalls=directives.containsKey(MARK_DYNAMIC_CALLS_DIRECTIVE);
  if (fileName.endsWith(".java")) {
    PsiFileFactory.getInstance(getProject()).createFileFromText(fileName,JavaLanguage.INSTANCE,textWithMarkers);
    this.jetFile=null;
    this.expectedText=this.clearText=textWithMarkers;
  }
 else {
    this.expectedText=textWithMarkers;
    String textWithExtras=addExtras(expectedText);
    this.clearText=CheckerTestUtil.parseDiagnosedRanges(textWithExtras,diagnosedRanges);
    this.jetFile=TestCheckerUtil.createCheckAndReturnPsiFile(fileName,clearText,getProject());
    for (    CheckerTestUtil.DiagnosedRange diagnosedRange : diagnosedRanges) {
      diagnosedRange.setFile(jetFile);
    }
  }
}
