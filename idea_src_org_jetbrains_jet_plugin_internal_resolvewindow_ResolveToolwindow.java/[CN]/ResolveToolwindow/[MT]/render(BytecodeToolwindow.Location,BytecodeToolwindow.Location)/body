{
  Editor editor=location.getEditor();
  if (editor == null) {
    setText(DEFAULT_TEXT);
  }
 else {
    VirtualFile vFile=((EditorEx)editor).getVirtualFile();
    if (vFile == null) {
      setText(DEFAULT_TEXT);
      return;
    }
    PsiFile psiFile=PsiManager.getInstance(myProject).findFile(vFile);
    if (!(psiFile instanceof JetFile)) {
      setText(DEFAULT_TEXT);
      return;
    }
    int startOffset=location.getStartOffset();
    int endOffset=location.getEndOffset();
    if (oldLocation == null || !Comparing.equal(oldLocation.getEditor(),location.getEditor()) || oldLocation.getStartOffset() != startOffset || oldLocation.getEndOffset() != endOffset) {
      BindingContext bindingContext=WholeProjectAnalyzerFacade.analyzeProjectWithCacheOnAFile((JetFile)psiFile).getBindingContext();
      PsiElement elementAtOffset;
      if (startOffset == endOffset) {
        elementAtOffset=PsiUtilCore.getElementAtOffset(psiFile,startOffset);
      }
 else {
        PsiElement start=PsiUtilCore.getElementAtOffset(psiFile,startOffset);
        PsiElement end=PsiUtilCore.getElementAtOffset(psiFile,endOffset - 1);
        elementAtOffset=PsiTreeUtil.findCommonParent(start,end);
      }
      PsiElement currentElement=elementAtOffset;
      boolean callFound=false;
      PsiElement elementWithDebugInfo=findData(bindingContext,currentElement,RESOLUTION_DEBUG_INFO);
      if (elementWithDebugInfo != null) {
        callFound=true;
        setText(renderDebugInfo(elementWithDebugInfo,bindingContext.get(RESOLUTION_DEBUG_INFO,elementWithDebugInfo),null));
      }
 else {
        PsiElement elementWithResolvedCall=findData(bindingContext,currentElement,(WritableSlice)RESOLVED_CALL);
        if (elementWithResolvedCall instanceof JetElement) {
          callFound=true;
          setText(renderDebugInfo(elementWithResolvedCall,null,bindingContext.get(RESOLVED_CALL,(JetElement)elementWithResolvedCall)));
        }
      }
      if (!callFound) {
        JetExpression parentExpression=(elementAtOffset instanceof JetExpression) ? (JetExpression)elementAtOffset : PsiTreeUtil.getParentOfType(elementAtOffset,JetExpression.class);
        if (parentExpression != null) {
          JetType type=bindingContext.get(EXPRESSION_TYPE,parentExpression);
          String text=parentExpression + "|" + parentExpression.getText()+ "| : "+ type;
          if (parentExpression instanceof JetReferenceExpression) {
            JetReferenceExpression referenceExpression=(JetReferenceExpression)parentExpression;
            DeclarationDescriptor target=bindingContext.get(REFERENCE_TARGET,referenceExpression);
            text+="\nReference target: \n" + target;
          }
          setText(text);
        }
      }
    }
  }
}
