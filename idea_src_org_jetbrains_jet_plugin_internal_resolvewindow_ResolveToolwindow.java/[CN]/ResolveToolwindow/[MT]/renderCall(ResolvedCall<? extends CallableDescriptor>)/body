{
  StringBuilder builder=new StringBuilder();
  CallableDescriptor resultingDescriptor=resolvedCall.getResultingDescriptor();
  ReceiverDescriptor receiverArgument=resolvedCall.getReceiverArgument();
  ReceiverDescriptor thisObject=resolvedCall.getThisObject();
  Map<TypeParameterDescriptor,JetType> typeArguments=resolvedCall.getTypeArguments();
  Map<ValueParameterDescriptor,ResolvedValueArgument> valueArguments=resolvedCall.getValueArguments();
  renderReceiver(receiverArgument,thisObject,builder);
  builder.append(resultingDescriptor.getName());
  renderTypeArguments(typeArguments,builder);
  if (resultingDescriptor instanceof FunctionDescriptor) {
    renderValueArguments(valueArguments,builder);
  }
  builder.append(" : ").append(resultingDescriptor.getReturnType());
  builder.append("\n");
  builder.append("\n");
  CallableDescriptor candidateDescriptor=resolvedCall.getCandidateDescriptor();
  builder.append("Candidate: \n").append(candidateDescriptor).append("\n");
  if (resultingDescriptor != candidateDescriptor) {
    builder.append("Result: \n").append(resultingDescriptor).append("\n");
  }
  builder.append("Receiver: \n").append(receiverArgument).append("\n");
  builder.append("This object: \n").append(thisObject).append("\n");
  builder.append("Type args: \n").append(typeArguments).append("\n");
  builder.append("Value args: \n").append(valueArguments).append("\n");
  return builder.toString();
}
