{
  List<JetType> result=new ArrayList<JetType>();
  String context="class " + psiClass.getQualifiedName();
  TypeVariableResolver typeVariableResolverForSupertypes=TypeVariableResolvers.typeVariableResolverFromTypeParameters(typeParameters,classDescriptor,context);
  transformSupertypeList(result,psiClass.getPsiClass().getExtendsListTypes(),typeVariableResolverForSupertypes);
  transformSupertypeList(result,psiClass.getPsiClass().getImplementsListTypes(),typeVariableResolverForSupertypes);
  reportIncompleteHierarchyForErrorTypes(classDescriptor,result);
  if (result.isEmpty()) {
    addBaseClass(psiClass,classDescriptor,result);
  }
  return result;
}
