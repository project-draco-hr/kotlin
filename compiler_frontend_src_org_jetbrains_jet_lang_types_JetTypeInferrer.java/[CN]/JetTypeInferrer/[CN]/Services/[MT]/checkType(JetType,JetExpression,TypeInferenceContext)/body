{
  if (expressionType == null || context.expectedType == null || context.expectedType == NO_EXPECTED_TYPE || semanticServices.getTypeChecker().isSubtypeOf(expressionType,context.expectedType)) {
    return expressionType;
  }
  if (AutoCastUtils.castExpression(expression,context.expectedType,context.dataFlowInfo,context.trace) == null) {
    context.trace.report(TYPE_MISMATCH.on(expression,context.expectedType,expressionType));
    return expressionType;
  }
  return context.expectedType;
}
