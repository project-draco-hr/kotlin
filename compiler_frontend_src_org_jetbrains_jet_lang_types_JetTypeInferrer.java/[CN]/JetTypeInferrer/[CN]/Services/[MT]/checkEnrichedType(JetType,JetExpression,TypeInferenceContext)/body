{
  if (expressionType == null || context.expectedType == null || context.expectedType == NO_EXPECTED_TYPE || semanticServices.getTypeChecker().isSubtypeOf(expressionType,context.expectedType)) {
    return expressionType;
  }
  VariableDescriptor variableDescriptor=getVariableDescriptorFromSimpleName(expression,context);
  boolean appropriateTypeFound=false;
  if (variableDescriptor != null) {
    List<JetType> possibleTypes=Lists.newArrayList(context.dataFlowInfo.getPossibleTypes(variableDescriptor));
    Collections.reverse(possibleTypes);
    for (    JetType possibleType : possibleTypes) {
      if (semanticServices.getTypeChecker().isSubtypeOf(possibleType,context.expectedType)) {
        appropriateTypeFound=true;
        break;
      }
    }
    if (!appropriateTypeFound) {
      JetType notnullType=context.dataFlowInfo.getOutType(variableDescriptor);
      if (notnullType != null && semanticServices.getTypeChecker().isSubtypeOf(notnullType,context.expectedType)) {
        appropriateTypeFound=true;
      }
    }
  }
  if (!appropriateTypeFound) {
    context.trace.getErrorHandler().typeMismatch(expression,context.expectedType,expressionType);
    return expressionType;
  }
  checkAutoCast(expression,context.expectedType,variableDescriptor,context.trace);
  return context.expectedType;
}
