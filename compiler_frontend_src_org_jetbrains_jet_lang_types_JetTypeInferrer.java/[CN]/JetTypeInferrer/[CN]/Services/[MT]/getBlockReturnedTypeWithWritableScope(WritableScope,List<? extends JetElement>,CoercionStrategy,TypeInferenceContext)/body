{
  if (block.isEmpty()) {
    return JetStandardClasses.getUnitType();
  }
  TypeInferrerVisitorWithWritableScope blockLevelVisitor=newTypeInferrerVisitorWithWritableScope(scope);
  TypeInferenceContext newContext=newContext(trace,scope,context.dataFlowInfo,NO_EXPECTED_TYPE,context.expectedReturnType);
  JetType result=null;
  for (Iterator<? extends JetElement> iterator=block.iterator(); iterator.hasNext(); ) {
    final JetElement statement=iterator.next();
    trace.record(STATEMENT,statement);
    final JetExpression statementExpression=(JetExpression)statement;
    if (!iterator.hasNext() && context.expectedType != NO_EXPECTED_TYPE) {
      if (coercionStrategyForLastExpression == CoercionStrategy.COERCION_TO_UNIT && JetStandardClasses.isUnit(context.expectedType)) {
        TemporaryBindingTrace temporaryTraceExpectingUnit=TemporaryBindingTrace.create(trace);
        final boolean[] mismatch=new boolean[1];
        ObservableBindingTrace errorInterceptingTrace=makeTraceInterceptingTypeMismatch(temporaryTraceExpectingUnit,statementExpression,mismatch);
        newContext=newContext(errorInterceptingTrace,scope,newContext.dataFlowInfo,context.expectedType,context.expectedReturnType);
        result=blockLevelVisitor.getType(statementExpression,newContext);
        if (mismatch[0]) {
          TemporaryBindingTrace temporaryTraceNoExpectedType=TemporaryBindingTrace.create(trace);
          mismatch[0]=false;
          ObservableBindingTrace interceptingTrace=makeTraceInterceptingTypeMismatch(temporaryTraceNoExpectedType,statementExpression,mismatch);
          newContext=newContext(interceptingTrace,scope,newContext.dataFlowInfo,NO_EXPECTED_TYPE,context.expectedReturnType);
          result=blockLevelVisitor.getType(statementExpression,newContext);
          if (mismatch[0]) {
            temporaryTraceExpectingUnit.commit();
          }
 else {
            temporaryTraceNoExpectedType.commit();
          }
        }
 else {
          temporaryTraceExpectingUnit.commit();
        }
      }
 else {
        newContext=newContext(trace,scope,newContext.dataFlowInfo,context.expectedType,context.expectedReturnType);
        result=blockLevelVisitor.getType(statementExpression,newContext);
      }
    }
 else {
      result=blockLevelVisitor.getType(statementExpression,newContext);
    }
    DataFlowInfo newDataFlowInfo=blockLevelVisitor.getResultingDataFlowInfo();
    if (newDataFlowInfo == null) {
      newDataFlowInfo=context.dataFlowInfo;
    }
    if (newDataFlowInfo != context.dataFlowInfo) {
      newContext=newContext(trace,scope,newDataFlowInfo,NO_EXPECTED_TYPE,context.expectedReturnType);
    }
    blockLevelVisitor.resetResult();
  }
  return result;
}
