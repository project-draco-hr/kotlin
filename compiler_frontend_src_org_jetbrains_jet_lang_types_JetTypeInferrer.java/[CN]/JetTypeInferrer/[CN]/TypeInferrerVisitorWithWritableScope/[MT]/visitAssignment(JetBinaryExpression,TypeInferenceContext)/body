{
  JetExpression left=expression.getLeft();
  JetExpression deparenthesized=JetPsiUtil.deparenthesize(left);
  JetExpression right=expression.getRight();
  if (deparenthesized instanceof JetArrayAccessExpression) {
    JetArrayAccessExpression arrayAccessExpression=(JetArrayAccessExpression)deparenthesized;
    return resolveArrayAccessToLValue(arrayAccessExpression,right,expression.getOperationReference(),context);
  }
  JetType leftType=getType(left,context.replaceExpectedType(NO_EXPECTED_TYPE).replaceScope(scope));
  if (right != null) {
    JetType rightType=getType(right,context.replaceExpectedType(leftType).replaceScope(scope));
  }
  if (left instanceof JetSimpleNameExpression) {
    JetSimpleNameExpression variable=(JetSimpleNameExpression)left;
    String referencedName=variable.getReferencedName();
    if (variable.getReferencedNameElementType() == JetTokens.FIELD_IDENTIFIER && referencedName != null) {
      PropertyDescriptor property=context.scope.getPropertyByFieldReference(referencedName);
      if (property != null) {
        context.trace.record(BindingContext.VARIABLE_ASSIGNMENT,variable,property);
      }
    }
  }
  return checkExpectedType(expression,context);
}
