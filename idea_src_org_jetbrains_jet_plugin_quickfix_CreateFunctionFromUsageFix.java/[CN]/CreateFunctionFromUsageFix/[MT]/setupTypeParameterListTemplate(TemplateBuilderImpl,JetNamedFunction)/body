{
  Map<String,String[]> typeParameterMap=new HashMap<String,String[]>();
  String[] receiverTypeParameterNames=selectedReceiverType.getTypeParameterNames();
  for (  Parameter parameter : parameters) {
    for (    TypeCandidate parameterTypeCandidate : parameter.getType().getTypeCandidates()) {
      typeParameterMap.put(parameterTypeCandidate.getRenderedType(),parameterTypeCandidate.getTypeParameterNames());
    }
  }
  JetTypeReference returnTypeRef=func.getReturnTypeRef();
  if (returnTypeRef != null) {
    for (    TypeCandidate returnTypeCandidate : returnType.getTypeCandidates()) {
      typeParameterMap.put(returnTypeCandidate.getRenderedType(),returnTypeCandidate.getTypeParameterNames());
    }
  }
  builder.replaceElement(func,TextRange.create(3,3),TYPE_PARAMETER_LIST_VARIABLE_NAME,null,false);
  return new TypeParameterListExpression(receiverTypeParameterNames,typeParameterMap);
}
