{
  Set<JetType> expectedTypes=new HashSet<JetType>();
  SearchScope scope=declaration.getContainingFile().getUseScope();
  for (  PsiReference ref : SearchUtils.findAllReferences(declaration,scope)) {
    if (ref instanceof JetSimpleNameReference) {
      JetSimpleNameReference simpleNameRef=(JetSimpleNameReference)ref;
      JetType expectedType=context.get(BindingContext.EXPECTED_EXPRESSION_TYPE,simpleNameRef.getExpression());
      if (expectedType != null) {
        expectedTypes.add(expectedType);
      }
    }
  }
  if (expectedTypes.isEmpty()) {
    return new JetType[0];
  }
 else {
    for (    JetType expectedType : expectedTypes) {
      if (ErrorUtils.containsErrorType(expectedType)) {
        return new JetType[0];
      }
    }
  }
  JetType type=TypeUtils.intersect(JetTypeChecker.INSTANCE,expectedTypes);
  if (type != null) {
    return new JetType[]{type};
  }
 else {
    return expectedTypes.toArray(new JetType[expectedTypes.size()]);
  }
}
