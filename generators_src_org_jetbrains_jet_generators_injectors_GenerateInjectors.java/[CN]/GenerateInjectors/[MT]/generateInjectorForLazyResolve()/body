{
  DependencyInjectorGenerator generator=new DependencyInjectorGenerator();
  generator.addParameter(Project.class);
  generator.addParameter(ResolveSession.class);
  generator.addParameter(ModuleDescriptor.class);
  generator.addPublicField(DescriptorResolver.class);
  generator.addPublicField(ExpressionTypingServices.class);
  generator.addPublicField(TypeResolver.class);
  generator.addPublicField(ScopeProvider.class);
  generator.addPublicField(AnnotationResolver.class);
  generator.addPublicField(QualifiedExpressionResolver.class);
  generator.addPublicField(JetImportsFactory.class);
  generator.addField(CallResolverExtensionProvider.class);
  generator.addField(false,PlatformToKotlinClassMap.class,null,new GivenExpression("moduleDescriptor.getPlatformToKotlinClassMap()"));
  generator.configure("compiler/frontend/src","org.jetbrains.jet.di","InjectorForLazyResolve",GenerateInjectors.class);
  return generator;
}
