{
  DependencyInjectorGenerator generator=new DependencyInjectorGenerator();
  generator.addParameter(Project.class);
  generator.addParameter(GlobalContextImpl.class);
  generator.addParameter(ModuleDescriptorImpl.class);
  generator.addParameter(DeclarationProviderFactory.class);
  generator.addParameter(BindingTrace.class);
  generator.addPublicField(ResolveSession.class);
  generator.addField(CallResolverExtensionProvider.class);
  generator.addField(false,StorageManager.class,null,new GivenExpression("resolveSession.getStorageManager()"));
  generator.addField(false,PlatformToKotlinClassMap.class,null,new GivenExpression("moduleDescriptor.getPlatformToKotlinClassMap()"));
  generator.configure("compiler/frontend/src","org.jetbrains.jet.di","InjectorForLazyResolve",GenerateInjectors.class);
  return generator;
}
