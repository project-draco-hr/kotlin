{
  DeclarationDescriptorWithVisibility parent=(DeclarationDescriptorWithVisibility)what.getOriginal();
  while (parent != null && parent.getVisibility() != LOCAL) {
    if (!parent.getVisibility().isVisible(receiver,parent,from)) {
      return parent;
    }
    parent=DescriptorUtils.getParentOfType(parent,DeclarationDescriptorWithVisibility.class);
  }
  if (what instanceof TypeAliasConstructorDescriptor) {
    DeclarationDescriptorWithVisibility invisibleMember=findInvisibleMember(receiver,((TypeAliasConstructorDescriptor)what).getTypeAliasDescriptor(),from);
    if (invisibleMember != null)     return invisibleMember;
  }
  return null;
}
