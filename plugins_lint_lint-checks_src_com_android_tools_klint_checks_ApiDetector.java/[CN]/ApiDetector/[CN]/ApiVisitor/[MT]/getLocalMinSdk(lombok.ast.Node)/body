{
  while (scope != null) {
    Class<? extends lombok.ast.Node> type=scope.getClass();
    if (type == VariableDefinition.class) {
      VariableDefinition declaration=(VariableDefinition)scope;
      int targetApi=getTargetApi(declaration.astModifiers());
      if (targetApi != -1) {
        return targetApi;
      }
    }
 else     if (type == MethodDeclaration.class) {
      MethodDeclaration declaration=(MethodDeclaration)scope;
      int targetApi=getTargetApi(declaration.astModifiers());
      if (targetApi != -1) {
        return targetApi;
      }
    }
 else     if (type == ConstructorDeclaration.class) {
      ConstructorDeclaration declaration=(ConstructorDeclaration)scope;
      int targetApi=getTargetApi(declaration.astModifiers());
      if (targetApi != -1) {
        return targetApi;
      }
    }
 else     if (type == ClassDeclaration.class) {
      ClassDeclaration declaration=(ClassDeclaration)scope;
      int targetApi=getTargetApi(declaration.astModifiers());
      if (targetApi != -1) {
        return targetApi;
      }
    }
    scope=scope.getParent();
  }
  return -1;
}
