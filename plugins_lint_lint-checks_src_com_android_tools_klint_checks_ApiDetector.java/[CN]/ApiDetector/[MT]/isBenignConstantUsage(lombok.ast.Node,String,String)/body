{
  if (owner.equals("android/os/Build$VERSION_CODES")) {
    return true;
  }
  if (owner.equals("android/view/ViewGroup$LayoutParams") && name.equals("MATCH_PARENT")) {
    return true;
  }
  if (owner.equals("android/widget/AbsListView") && ((name.equals("CHOICE_MODE_NONE") || name.equals("CHOICE_MODE_MULTIPLE") || name.equals("CHOICE_MODE_SINGLE")))) {
    return true;
  }
  if ("android/view/Gravity".equals(owner) && ("START".equals(name) || "END".equals(name))) {
    return true;
  }
  if (node == null) {
    return false;
  }
  lombok.ast.Node curr=node.getParent();
  while (curr != null) {
    Class<? extends lombok.ast.Node> nodeType=curr.getClass();
    if (nodeType == Case.class) {
      Case caseStatement=(Case)curr;
      Expression condition=caseStatement.astCondition();
      return condition != null && isAncestor(condition,node);
    }
 else     if (nodeType == If.class) {
      If ifStatement=(If)curr;
      Expression condition=ifStatement.astCondition();
      return condition != null && isAncestor(condition,node);
    }
 else     if (nodeType == InlineIfExpression.class) {
      InlineIfExpression ifStatement=(InlineIfExpression)curr;
      Expression condition=ifStatement.astCondition();
      return condition != null && isAncestor(condition,node);
    }
    curr=curr.getParent();
  }
  return false;
}
