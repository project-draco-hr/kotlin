{
  final List<JetFile> files=Lists.newArrayList();
  final List<Breakpoint> breakpoints=Lists.newArrayList();
  for (  String filename : filenames) {
    File file=new File(filename);
    String fileContent;
    try {
      fileContent=FileUtil.loadFile(file);
    }
 catch (    IOException e) {
      throw ExceptionUtils.rethrow(e);
    }
    final JetFile jetFile=(JetFile)JetTestUtils.createFile(file.getAbsolutePath(),fileContent,getProject());
    files.add(jetFile);
    breakpoints.addAll(extractBreakpointsInfo(jetFile,fileContent));
  }
  GenerationState state=GenerationUtils.compileManyFilesGetGenerationStateForTest(getProject(),files);
  Map<String,ReferenceType> referencesByName=getReferenceMap(state.getFactory());
  final DebugProcess debugProcess=createDebugProcess(referencesByName);
  final PositionManager positionManager=createPositionManager(debugProcess,files,state);
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    public void run(){
      try {
        for (        Breakpoint breakpoint : breakpoints) {
          SourcePosition position=SourcePosition.createFromLine(breakpoint.file,breakpoint.lineNumber);
          assertPositionIsValid(position,breakpoint.className,positionManager);
        }
      }
 catch (      NoDataException e) {
        ExceptionUtils.rethrow(e);
      }
    }
  }
);
}
