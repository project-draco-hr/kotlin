{
  Map<TypeParameterDescriptor,TypeProjection> substitutionContext=UtilsPackage.newHashMapWithExpectedSize(typeParameterBounds.size());
  for (  Map.Entry<TypeParameterDescriptor,TypeBoundsImpl> entry : typeParameterBounds.entrySet()) {
    TypeParameterDescriptor typeParameter=entry.getKey();
    TypeBounds typeBounds=entry.getValue();
    TypeProjection typeProjection;
    JetType value=typeBounds.getValue();
    if (value != null && !TypeUtils.containsSpecialType(value,TypeUtils.DONT_CARE)) {
      typeProjection=new TypeProjectionImpl(value);
    }
 else {
      typeProjection=getDefaultTypeProjection.invoke(typeParameter);
    }
    substitutionContext.put(typeParameter,typeProjection);
  }
  return substitutionContext;
}
