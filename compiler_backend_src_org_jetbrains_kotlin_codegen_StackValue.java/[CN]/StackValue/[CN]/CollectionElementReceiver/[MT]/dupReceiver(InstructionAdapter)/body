{
  if (CollectionElement.isStandardStack(codegen.typeMapper,resolvedGetCall,1) && CollectionElement.isStandardStack(codegen.typeMapper,resolvedSetCall,2)) {
    v.dup2();
    return;
  }
  FrameMap.Mark mark=frame.mark();
  List<ValueParameterDescriptor> valueParameters=resolvedGetCall.getResultingDescriptor().getValueParameters();
  int firstParamIndex=-1;
  for (int i=valueParameters.size() - 1; i >= 0; --i) {
    Type type=codegen.typeMapper.mapType(valueParameters.get(i).getType());
    firstParamIndex=frame.enterTemp(type);
    v.store(firstParamIndex,type);
  }
  ReceiverValue receiverParameter=(ReceiverValue)resolvedGetCall.getExtensionReceiver();
  int receiverIndex=-1;
  if (receiverParameter != null) {
    Type type=codegen.typeMapper.mapType(receiverParameter.getType());
    receiverIndex=frame.enterTemp(type);
    v.store(receiverIndex,type);
  }
  ReceiverValue dispatchReceiver=resolvedGetCall.getDispatchReceiver();
  int thisIndex=-1;
  if (dispatchReceiver != null) {
    thisIndex=frame.enterTemp(OBJECT_TYPE);
    v.store(thisIndex,OBJECT_TYPE);
  }
  int realReceiverIndex;
  Type realReceiverType;
  if (receiverIndex != -1) {
    realReceiverType=codegen.typeMapper.mapType(receiverParameter.getType());
    realReceiverIndex=receiverIndex;
  }
 else   if (thisIndex != -1) {
    realReceiverType=OBJECT_TYPE;
    realReceiverIndex=thisIndex;
  }
 else {
    throw new UnsupportedOperationException();
  }
  if (resolvedSetCall.getDispatchReceiver() != null) {
    if (resolvedSetCall.getExtensionReceiver() != null) {
      codegen.generateReceiverValue(resolvedSetCall.getDispatchReceiver(),false).put(OBJECT_TYPE,v);
    }
    v.load(realReceiverIndex,realReceiverType);
  }
 else {
    if (resolvedSetCall.getExtensionReceiver() != null) {
      v.load(realReceiverIndex,realReceiverType);
    }
 else {
      throw new UnsupportedOperationException();
    }
  }
  int index=firstParamIndex;
  for (  ValueParameterDescriptor valueParameter : valueParameters) {
    Type type=codegen.typeMapper.mapType(valueParameter.getType());
    v.load(index,type);
    index-=type.getSize();
  }
  if (thisIndex != -1) {
    v.load(thisIndex,OBJECT_TYPE);
  }
  if (receiverIndex != -1) {
    v.load(receiverIndex,realReceiverType);
  }
  index=firstParamIndex;
  for (  ValueParameterDescriptor valueParameter : valueParameters) {
    Type type=codegen.typeMapper.mapType(valueParameter.getType());
    v.load(index,type);
    index-=type.getSize();
  }
  mark.dropTo();
}
