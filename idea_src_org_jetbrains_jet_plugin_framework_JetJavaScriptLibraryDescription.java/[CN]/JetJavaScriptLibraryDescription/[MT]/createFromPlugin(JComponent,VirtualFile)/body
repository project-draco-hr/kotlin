{
  File runtimePath=PathUtil.getKotlinPathsForIdeaPlugin().getJsLibJarPath();
  if (!runtimePath.exists()) {
    Messages.showErrorDialog("JavaScript standard library was not found. Make sure plugin is installed properly.",JAVA_SCRIPT_LIBRARY_CREATION);
    return null;
  }
  final VirtualFile directory=FileUIUtils.selectCopyToDirectory("Select folder where Kotlin JavaScript header should be copied",parentComponent,contextDirectory);
  if (directory == null) {
    return null;
  }
  final File targetFile;
  try {
    targetFile=FileUIUtils.copyWithOverwriteDialog(directory,runtimePath);
  }
 catch (  IOException e) {
    Messages.showErrorDialog("Error during file copy",JAVA_SCRIPT_LIBRARY_CREATION);
    return null;
  }
  return new NewLibraryConfiguration(PathUtil.JS_LIB_JAR_NAME,getDownloadableLibraryType(),new LibraryVersionProperties()){
    @Override public void addRoots(    @NotNull LibraryEditor editor){
      editor.addRoot(VfsUtil.getUrlForLibraryRoot(targetFile),OrderRootType.SOURCES);
    }
  }
;
}
