{
  List<Type> types=callableMethod.getValueParameterTypes();
  for (  ValueParameterDescriptor parameterDescriptor : Lists.reverse(fd.getValueParameters())) {
    ResolvedValueArgument arg=valueArguments.get(parameterDescriptor.getIndex());
    Type type=types.get(parameterDescriptor.getIndex());
    if (arg instanceof ExpressionValueArgument) {
      ExpressionValueArgument ev=(ExpressionValueArgument)arg;
      ValueArgument argument=ev.getValueArgument();
      JetExpression argumentExpression=argument == null ? null : argument.getArgumentExpression();
      if (argumentExpression instanceof JetSimpleNameExpression) {
        ResolvedCall<? extends CallableDescriptor> resolvedCall=state.getBindingContext().get(RESOLVED_CALL,argumentExpression);
        if (resolvedCall != null && resolvedCall.getResultingDescriptor().equals(parameterDescriptor.getOriginal())) {
          AsmUtil.pop(v,type);
          continue;
        }
      }
    }
 else     if (arg instanceof DefaultValueArgument) {
      AsmUtil.pop(v,type);
      DefaultParameterValueLoader.DEFAULT.putValueOnStack(parameterDescriptor,codegen);
    }
 else     if (arg instanceof VarargValueArgument) {
    }
 else {
      throw new UnsupportedOperationException("Unknown argument type: " + arg + " in "+ fd);
    }
    store(parameterDescriptor,type);
  }
}
