{
  return new KotlinJavaFileStubProvider<KotlinPackageLightClassData>(project,false,new StubGenerationStrategy.NoDeclaredClasses<KotlinPackageLightClassData>(){
    @NotNull @Override public LightClassConstructionContext getContext(    @NotNull Collection<JetFile> files){
      return LightClassGenerationSupport.getInstance(project).getContextForPackage(files);
    }
    @NotNull @Override public Collection<JetFile> getFiles(){
      return LightClassGenerationSupport.getInstance(project).findFilesForPackage(packageFqName,searchScope);
    }
    @NotNull @Override public KotlinPackageLightClassData createLightClassData(    PsiJavaFileStub javaFileStub,    BindingContext bindingContext){
      return new KotlinPackageLightClassData(javaFileStub);
    }
    @NotNull @Override public FqName getPackageFqName(){
      return packageFqName;
    }
    @Override public void generate(    @NotNull GenerationState state,    @NotNull Collection<JetFile> files){
      PackageCodegen codegen=state.getFactory().forPackage(packageFqName,files);
      codegen.generate(CompilationErrorHandler.THROW_EXCEPTION);
      state.getFactory().asList();
    }
  }
);
}
