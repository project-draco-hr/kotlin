{
  WritableFunctionGroup writableFunctionGroup=new WritableFunctionGroup(methodName);
  final Collection<HierarchicalMethodSignature> signatures=psiClass.getVisibleSignatures();
  TypeSubstitutor typeSubstitutor=createSubstitutorForGenericSupertypes(classDescriptor);
  for (  HierarchicalMethodSignature signature : signatures) {
    PsiMethod method=signature.getMethod();
    if (method.hasModifierProperty(PsiModifier.STATIC) != staticMembers) {
      continue;
    }
    if (!methodName.equals(method.getName())) {
      continue;
    }
    FunctionDescriptor substitutedFunctionDescriptor=resolveMethodToFunctionDescriptor(owner,psiClass,typeSubstitutor,method);
    if (substitutedFunctionDescriptor != null) {
      writableFunctionGroup.addFunction(substitutedFunctionDescriptor);
    }
  }
  return writableFunctionGroup;
}
