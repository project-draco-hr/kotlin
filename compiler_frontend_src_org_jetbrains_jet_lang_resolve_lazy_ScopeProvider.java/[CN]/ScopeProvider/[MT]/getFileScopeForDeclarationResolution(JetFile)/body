{
  if (!fileScopeCache.containsKey(file)) {
    JetNamespaceHeader header=file.getNamespaceHeader();
    if (header == null) {
      throw new IllegalArgumentException("Scripts are not supported: " + file.getName());
    }
    FqName fqName=new FqName(header.getQualifiedName());
    NamespaceDescriptor packageDescriptor=resolveSession.getPackageDescriptorByFqName(fqName);
    if (packageDescriptor == null) {
      throw new IllegalStateException("Package not found: " + fqName + " maybe the file is not in scope of this resolve session: "+ file.getName());
    }
    WritableScope fileScope=new WritableScopeImpl(JetScope.EMPTY,packageDescriptor,RedeclarationHandler.DO_NOTHING,"File scope for declaration resolution");
    fileScope.changeLockLevel(WritableScope.LockLevel.BOTH);
    NamespaceDescriptor rootPackageDescriptor=resolveSession.getPackageDescriptorByFqName(FqName.ROOT);
    if (rootPackageDescriptor == null) {
      throw new IllegalStateException("Root package not found");
    }
    if (!packageDescriptor.getQualifiedName().equals(FqName.ROOT)) {
      fileScope.importScope(rootPackageDescriptor.getMemberScope());
    }
    ImportsResolver.processImportsInFile(true,fileScope,Lists.newArrayList(file.getImportDirectives()),rootPackageDescriptor.getMemberScope(),resolveSession.getModuleConfiguration(),resolveSession.getTrace(),resolveSession.getInjector().getQualifiedExpressionResolver());
    fileScope.changeLockLevel(WritableScope.LockLevel.READING);
    fileScopeCache.put(file,new ChainedScope(packageDescriptor,packageDescriptor.getMemberScope(),fileScope));
  }
  return fileScopeCache.get(file);
}
