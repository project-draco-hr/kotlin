{
  PsiElement immediateParent=jetDeclaration.getParent();
  if (immediateParent instanceof JetFile) {
    return getFileScopeForDeclarationResolution((JetFile)immediateParent);
  }
  JetDeclaration parentDeclaration=PsiTreeUtil.getParentOfType(jetDeclaration,JetDeclaration.class);
  if (parentDeclaration instanceof JetClassOrObject) {
    JetClassOrObject classOrObject=(JetClassOrObject)parentDeclaration;
    LazyClassDescriptor classDescriptor=(LazyClassDescriptor)resolveSession.getClassDescriptor(classOrObject);
    return classDescriptor.getScopeForMemberDeclarationResolution();
  }
 else   if (parentDeclaration instanceof JetClassObject) {
    JetClassObject classObject=(JetClassObject)parentDeclaration;
    LazyClassDescriptor classObjectDescriptor=resolveSession.getClassObjectDescriptor(classObject);
    return classObjectDescriptor.getScopeForMemberDeclarationResolution();
  }
 else {
    throw new IllegalStateException("Don't call this method for local declarations: " + jetDeclaration + " "+ jetDeclaration.getText());
  }
}
