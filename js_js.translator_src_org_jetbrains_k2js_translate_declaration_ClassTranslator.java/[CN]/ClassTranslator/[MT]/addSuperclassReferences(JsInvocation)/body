{
  List<JsExpression> superClassReferences=getSupertypesNameReferences();
  if (superClassReferences.isEmpty()) {
    if (!isTrait() || context().isEcma5()) {
      jsClassDeclaration.getArguments().add(JsLiteral.NULL);
    }
    return;
  }
  List<JsExpression> expressions;
  if (superClassReferences.size() > 1) {
    JsArrayLiteral arrayLiteral=new JsArrayLiteral();
    jsClassDeclaration.getArguments().add(arrayLiteral);
    expressions=arrayLiteral.getExpressions();
  }
 else {
    expressions=jsClassDeclaration.getArguments();
  }
  for (  JsExpression superClassReference : superClassReferences) {
    expressions.add(superClassReference);
  }
}
