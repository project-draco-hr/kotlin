{
  analysisResult.throwIfError();
  GenerationState state=new GenerationState(project,ClassBuilderFactories.TEST,analysisResult.getModuleDescriptor(),analysisResult.getBindingContext(),files,getConfigurationValueOrDefault(configuration,JVMConfigurationKeys.DISABLE_CALL_ASSERTIONS,false),getConfigurationValueOrDefault(configuration,JVMConfigurationKeys.DISABLE_PARAM_ASSERTIONS,false),GenerationState.GenerateClassFilter.GENERATE_ALL,getConfigurationValueOrDefault(configuration,JVMConfigurationKeys.DISABLE_INLINE,false),getConfigurationValueOrDefault(configuration,JVMConfigurationKeys.DISABLE_OPTIMIZATION,false),useTypeTableInSerializer,getConfigurationValueOrDefault(configuration,JVMConfigurationKeys.INHERIT_MULTIFILE_PARTS,false));
  KotlinCodegenFacade.compileCorrectFiles(state,CompilationErrorHandler.THROW_EXCEPTION);
  return state;
}
