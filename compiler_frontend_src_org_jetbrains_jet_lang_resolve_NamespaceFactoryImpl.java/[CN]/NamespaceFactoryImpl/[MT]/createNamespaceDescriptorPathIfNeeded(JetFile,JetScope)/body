{
  JetNamespaceHeader namespaceHeader=file.getNamespaceHeader();
  if (moduleDescriptor.getRootNs() == null) {
    createNamespaceDescriptorIfNeeded(null,moduleDescriptor,"<root>",true);
  }
  NamespaceDescriptorParent currentOwner=moduleDescriptor.getRootNs();
  if (currentOwner == null) {
    throw new IllegalStateException("must be initialized 5 lines above");
  }
  for (  JetSimpleNameExpression nameExpression : namespaceHeader.getParentNamespaceNames()) {
    String namespaceName=JetPsiUtil.safeName(nameExpression.getReferencedName());
    NamespaceDescriptorImpl namespaceDescriptor=createNamespaceDescriptorIfNeeded(null,currentOwner,namespaceName,false);
    trace.record(BindingContext.NAMESPACE_IS_SRC,namespaceDescriptor,true);
    currentOwner=namespaceDescriptor;
    trace.record(REFERENCE_TARGET,nameExpression,currentOwner);
    trace.record(RESOLUTION_SCOPE,nameExpression,outerScope);
    outerScope=namespaceDescriptor.getMemberScope();
  }
  String name=JetPsiUtil.safeName(namespaceHeader.getName());
  trace.record(RESOLUTION_SCOPE,namespaceHeader,outerScope);
  NamespaceDescriptorImpl namespaceDescriptor=createNamespaceDescriptorIfNeeded(file,currentOwner,name,false);
  trace.record(BindingContext.NAMESPACE_IS_SRC,namespaceDescriptor,true);
  return namespaceDescriptor;
}
