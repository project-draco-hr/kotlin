{
  this.reflectionTypes=reflectionTypes;
  ModuleDescriptor fakeModule=new ModuleDescriptorImpl(Name.special("<fake module for functions impl>"),Collections.<ImportPath>emptyList(),JavaToKotlinClassMap.getInstance());
  PackageFragmentDescriptor kotlinJvmInternal=new MutablePackageFragmentDescriptor(fakeModule,new FqName("kotlin.jvm.internal"));
  PackageFragmentDescriptor kotlinReflectJvmInternal=new MutablePackageFragmentDescriptor(fakeModule,new FqName("kotlin.reflect.jvm.internal"));
  this.functionImpl=createClass(kotlinJvmInternal,"FunctionImpl","out R");
  this.extensionFunctionImpl=createClass(kotlinJvmInternal,"ExtensionFunctionImpl","in T","out R");
  this.kFunctionImpl=createClass(kotlinReflectJvmInternal,"KFunctionImpl","out R");
  this.kExtensionFunctionImpl=createClass(kotlinReflectJvmInternal,"KExtensionFunctionImpl","in T","out R");
  this.kMemberFunctionImpl=createClass(kotlinReflectJvmInternal,"KMemberFunctionImpl","in T","out R");
}
