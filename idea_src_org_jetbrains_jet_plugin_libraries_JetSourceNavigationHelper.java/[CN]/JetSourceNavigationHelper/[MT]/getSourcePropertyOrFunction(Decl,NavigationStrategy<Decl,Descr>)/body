{
  String entityName=decompiledDeclaration.getName();
  if (entityName == null) {
    return null;
  }
  Name entityNameAsName=Name.identifier(entityName);
  JetTypeReference receiverType=navigationStrategy.getReceiverType(decompiledDeclaration);
  PsiElement declarationContainer=decompiledDeclaration.getParent();
  if (declarationContainer instanceof JetFile) {
    Pair<BindingContext,NamespaceDescriptor> bindingContextAndNamespaceDescriptor=getBindingContextAndNamespaceDescriptor(decompiledDeclaration);
    if (bindingContextAndNamespaceDescriptor == null)     return null;
    BindingContext bindingContext=bindingContextAndNamespaceDescriptor.first;
    NamespaceDescriptor namespaceDescriptor=bindingContextAndNamespaceDescriptor.second;
    for (    Descr candidate : navigationStrategy.getCandidateDescriptors(namespaceDescriptor.getMemberScope(),entityNameAsName)) {
      if (receiversMatch(receiverType,candidate.getReceiverParameter()) && navigationStrategy.declarationAndDescriptorMatch(decompiledDeclaration,candidate)) {
        return (JetDeclaration)BindingContextUtils.descriptorToDeclaration(bindingContext,candidate);
      }
    }
  }
 else   if (declarationContainer instanceof JetClassBody) {
    JetClassOrObject parent=(JetClassOrObject)declarationContainer.getParent();
    boolean isClassObject=parent instanceof JetObjectDeclaration && parent.getParent() instanceof JetClassObject;
    JetClassOrObject classOrObject=isClassObject ? PsiTreeUtil.getParentOfType(parent,JetClass.class) : parent;
    if (classOrObject == null) {
      return null;
    }
    Pair<BindingContext,ClassDescriptor> bindingContextAndClassDescriptor=getBindingContextAndClassDescriptor(classOrObject);
    if (bindingContextAndClassDescriptor != null) {
      BindingContext bindingContext=bindingContextAndClassDescriptor.first;
      ClassDescriptor classDescriptor=bindingContextAndClassDescriptor.second;
      JetScope memberScope=classDescriptor.getDefaultType().getMemberScope();
      if (isClassObject) {
        JetType classObjectType=classDescriptor.getClassObjectType();
        if (classObjectType == null) {
          return null;
        }
        memberScope=classObjectType.getMemberScope();
      }
      ClassDescriptor expectedContainer=isClassObject ? classDescriptor.getClassObjectDescriptor() : classDescriptor;
      for (      Descr candidate : navigationStrategy.getCandidateDescriptors(memberScope,entityNameAsName)) {
        if (candidate.getContainingDeclaration() == expectedContainer) {
          JetDeclaration property=(JetDeclaration)BindingContextUtils.descriptorToDeclaration(bindingContext,candidate);
          if (property != null) {
            return property;
          }
        }
      }
    }
  }
  return null;
}
