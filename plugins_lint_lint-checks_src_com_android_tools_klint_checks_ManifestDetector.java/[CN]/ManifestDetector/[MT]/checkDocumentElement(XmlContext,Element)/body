{
  Attr codeNode=element.getAttributeNodeNS(ANDROID_URI,ATTR_VERSION_CODE);
  if (codeNode != null && codeNode.getValue().startsWith(PREFIX_RESOURCE_REF) && context.isEnabled(ILLEGAL_REFERENCE)) {
    context.report(ILLEGAL_REFERENCE,element,context.getLocation(codeNode),"The `android:versionCode` cannot be a resource url, it must be " + "a literal integer");
  }
 else   if (codeNode == null && context.isEnabled(SET_VERSION) && !context.getMainProject().isGradleProject()) {
    context.report(SET_VERSION,element,context.getLocation(element),"Should set `android:versionCode` to specify the application version");
  }
  Attr nameNode=element.getAttributeNodeNS(ANDROID_URI,ATTR_VERSION_NAME);
  if (nameNode == null && context.isEnabled(SET_VERSION) && !context.getMainProject().isGradleProject()) {
    context.report(SET_VERSION,element,context.getLocation(element),"Should set `android:versionName` to specify the application version");
  }
  checkOverride(context,element,ATTR_VERSION_CODE);
  checkOverride(context,element,ATTR_VERSION_NAME);
  Attr pkgNode=element.getAttributeNode(ATTR_PACKAGE);
  if (pkgNode != null) {
    String pkg=pkgNode.getValue();
    if (pkg.contains("${") && context.getMainProject().isGradleProject()) {
      context.report(GRADLE_OVERRIDES,pkgNode,context.getLocation(pkgNode),"Cannot use placeholder for the package in the manifest; " + "set `applicationId` in `build.gradle` instead");
    }
  }
}
