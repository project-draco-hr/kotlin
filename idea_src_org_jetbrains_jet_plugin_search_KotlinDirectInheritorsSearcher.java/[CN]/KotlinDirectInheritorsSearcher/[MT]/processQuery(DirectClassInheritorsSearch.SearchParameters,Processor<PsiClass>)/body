{
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    @Override public void run(){
      PsiClass clazz=queryParameters.getClassToProcess();
      String qualifiedName=clazz.getQualifiedName();
      if (qualifiedName == null) {
        return;
      }
      String name=clazz.getName();
      if (name == null || !(queryParameters.getScope() instanceof GlobalSearchScope))       return;
      GlobalSearchScope scope=(GlobalSearchScope)queryParameters.getScope();
      Collection<JetClassOrObject> candidates=JetSuperClassIndex.getInstance().get(name,clazz.getProject(),scope);
      for (      JetClassOrObject candidate : candidates) {
        if (!(candidate instanceof JetClass))         continue;
        List<JetDelegationSpecifier> specifiers=candidate.getDelegationSpecifiers();
        for (        JetDelegationSpecifier specifier : specifiers) {
          JetUserType type=specifier.getTypeAsUserType();
          if (type != null) {
            JetSimpleNameExpression referenceExpression=type.getReferenceExpression();
            if (referenceExpression != null) {
              PsiReference reference=referenceExpression.getReference();
              PsiElement resolved=reference != null ? reference.resolve() : null;
              String resolvedFQName=null;
              if (resolved instanceof PsiClass) {
                resolvedFQName=((PsiClass)resolved).getQualifiedName();
              }
 else               if (resolved instanceof JetClass) {
                FqName fqName=JetPsiUtil.getFQName((JetClass)resolved);
                if (fqName != null) {
                  resolvedFQName=fqName.getFqName();
                }
              }
              if (qualifiedName.equals(resolvedFQName)) {
                consumer.process(JetLightClass.wrapDelegate((JetClass)candidate));
              }
            }
          }
        }
      }
    }
  }
);
}
