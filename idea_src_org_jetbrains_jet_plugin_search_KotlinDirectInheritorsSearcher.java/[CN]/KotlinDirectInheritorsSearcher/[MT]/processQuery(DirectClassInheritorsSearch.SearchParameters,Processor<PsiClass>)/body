{
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    @Override public void run(){
      PsiClass clazz=queryParameters.getClassToProcess();
      String qualifiedName=clazz.getQualifiedName();
      if (qualifiedName == null) {
        return;
      }
      String name=clazz.getName();
      if (name == null || !(queryParameters.getScope() instanceof GlobalSearchScope))       return;
      GlobalSearchScope scope=(GlobalSearchScope)queryParameters.getScope();
      Collection<JetClassOrObject> candidates=JetSuperClassIndex.getInstance().get(name,clazz.getProject(),scope);
      for (      JetClassOrObject candidate : candidates) {
        ClassDescriptor classDescriptor=(ClassDescriptor)UsagesSearchPackage.getDescriptor(candidate);
        if (classDescriptor == null)         continue;
        for (        JetType type : classDescriptor.getTypeConstructor().getSupertypes()) {
          ClassifierDescriptor declarationDescriptor=type.getConstructor().getDeclarationDescriptor();
          if (declarationDescriptor != null) {
            String fqName=DescriptorUtils.getFQName(declarationDescriptor).asString();
            if (qualifiedName.equals(fqName)) {
              PsiClass psiClass=JetSourceNavigationHelper.getOriginalPsiClassOrCreateLightClass(candidate);
              if (psiClass != null) {
                consumer.process(psiClass);
              }
            }
          }
        }
      }
    }
  }
);
}
