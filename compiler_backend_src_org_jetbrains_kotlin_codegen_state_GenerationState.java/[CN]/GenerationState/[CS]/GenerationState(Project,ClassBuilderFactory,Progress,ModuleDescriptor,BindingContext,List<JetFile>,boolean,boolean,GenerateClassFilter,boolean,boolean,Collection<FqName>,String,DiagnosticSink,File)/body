{
  this.project=project;
  this.progress=progress;
  this.module=module;
  this.files=files;
  this.moduleId=moduleId;
  this.packagesWithObsoleteParts=packagesWithObsoleteParts == null ? Collections.<FqName>emptySet() : packagesWithObsoleteParts;
  this.classBuilderMode=builderFactory.getClassBuilderMode();
  this.disableInline=disableInline;
  this.bindingTrace=new DelegatingBindingTrace(bindingContext,"trace in GenerationState");
  this.bindingContext=bindingTrace.getBindingContext();
  this.outDirectory=outDirectory;
  this.typeMapper=new JetTypeMapperWithOutDirectory(this.bindingContext,classBuilderMode,outDirectory);
  this.intrinsics=new IntrinsicMethods();
  if (!disableOptimization) {
    builderFactory=new OptimizationClassBuilderFactory(builderFactory);
  }
  this.classFileFactory=new ClassFileFactory(this,new BuilderFactoryForDuplicateSignatureDiagnostics(builderFactory,this.bindingContext,diagnostics));
  this.disableCallAssertions=disableCallAssertions;
  this.disableParamAssertions=disableParamAssertions;
  this.generateClassFilter=generateClassFilter;
  ReflectionTypes reflectionTypes=new ReflectionTypes(module);
  this.runtimeTypes=new JvmRuntimeTypes(reflectionTypes);
}
