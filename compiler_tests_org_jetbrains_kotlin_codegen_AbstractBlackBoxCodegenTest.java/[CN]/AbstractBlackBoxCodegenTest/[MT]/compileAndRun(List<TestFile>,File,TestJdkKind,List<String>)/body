{
  CompilerConfiguration configuration=compilerConfigurationForTests(ConfigurationKind.ALL,jdkKind,Collections.singletonList(getAnnotationsJar()),ArraysKt.filterNotNull(new File[]{javaSourceDir}));
  myEnvironment=KotlinCoreEnvironment.createForTests(getTestRootDisposable(),configuration,EnvironmentConfigFiles.JVM_CONFIG_FILES);
  loadMultiFiles(files);
  classFileFactory=GenerationUtils.compileManyFilesGetGenerationStateForTest(myEnvironment.getProject(),myFiles.getPsiFiles(),new JvmPackagePartProvider(myEnvironment)).getFactory();
  File kotlinOut;
  try {
    kotlinOut=KotlinTestUtils.tmpDir(toString());
  }
 catch (  IOException e) {
    throw ExceptionUtilsKt.rethrow(e);
  }
  OutputUtilsKt.writeAllTo(classFileFactory,kotlinOut);
  if (javaSourceDir != null) {
    File output=compileJava(findJavaSourcesInDirectory(javaSourceDir),Collections.singletonList(kotlinOut.getPath()),javacOptions);
    JvmContentRootsKt.addJvmClasspathRoot(configuration,output);
  }
  blackBox();
}
