{
  CompilerConfiguration configuration=createCompilerConfigurationForTests(configurationKind,jdkKind,Collections.singletonList(getAnnotationsJar()),ArraysKt.filterNotNull(new File[]{javaSourceDir}),files);
  myEnvironment=KotlinCoreEnvironment.createForTests(getTestRootDisposable(),configuration,EnvironmentConfigFiles.JVM_CONFIG_FILES);
  loadMultiFiles(files);
  classFileFactory=GenerationUtils.compileManyFilesGetGenerationStateForTest(myEnvironment.getProject(),myFiles.getPsiFiles(),new JvmPackagePartProvider(myEnvironment),myEnvironment.getConfiguration()).getFactory();
  if (javaSourceDir != null) {
    File kotlinOut;
    try {
      kotlinOut=KotlinTestUtils.tmpDir(toString());
    }
 catch (    IOException e) {
      throw ExceptionUtilsKt.rethrow(e);
    }
    OutputUtilsKt.writeAllTo(classFileFactory,kotlinOut);
    File output=CodegenTestUtil.compileJava(findJavaSourcesInDirectory(javaSourceDir),Collections.singletonList(kotlinOut.getPath()),javacOptions);
    JvmContentRootsKt.addJvmClasspathRoot(configuration,output);
  }
  blackBox();
}
