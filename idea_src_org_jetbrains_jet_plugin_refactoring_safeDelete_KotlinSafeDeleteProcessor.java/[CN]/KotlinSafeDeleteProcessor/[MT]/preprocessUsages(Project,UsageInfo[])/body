{
  ArrayList<UsageInfo> result=new ArrayList<UsageInfo>();
  ArrayList<UsageInfo> overridingMethodUsages=new ArrayList<UsageInfo>();
  for (  UsageInfo usage : usages) {
    if (usage instanceof KotlinSafeDeleteOverridingUsageInfo) {
      overridingMethodUsages.add(usage);
    }
 else {
      result.add(usage);
    }
  }
  if (!overridingMethodUsages.isEmpty()) {
    if (ApplicationManager.getApplication().isUnitTestMode()) {
      result.addAll(overridingMethodUsages);
    }
 else {
      KotlinOverridingMethodsDialog dialog=new KotlinOverridingMethodsDialog(project,overridingMethodUsages);
      dialog.show();
      if (!dialog.isOK())       return null;
      result.addAll(dialog.getSelected());
    }
  }
  return result.toArray(new UsageInfo[result.size()]);
}
