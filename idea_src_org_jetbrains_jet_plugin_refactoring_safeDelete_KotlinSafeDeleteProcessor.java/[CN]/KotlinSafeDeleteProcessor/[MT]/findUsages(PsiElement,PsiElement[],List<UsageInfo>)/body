{
  if (element instanceof JetClassOrObject) {
    return delegateToJavaProcessor(LightClassUtil.getPsiClass((JetClassOrObject)element),allElementsToDelete,result);
  }
  if (element instanceof JetNamedFunction) {
    JetNamedFunction function=(JetNamedFunction)element;
    if (function.isLocal()) {
      return findKotlinDeclarationUsages(function,allElementsToDelete,result);
    }
    PsiMethod method=LightClassUtil.getLightClassMethod((JetNamedFunction)element);
    if (method != null)     return delegateToJavaProcessor(method,allElementsToDelete,result);
    return getSearchInfo(element,allElementsToDelete);
  }
  if (element instanceof PsiMethod) {
    return delegateToJavaProcessor(element,allElementsToDelete,result);
  }
  if (element instanceof JetProperty) {
    JetProperty property=(JetProperty)element;
    if (property.isLocal())     return findKotlinDeclarationUsages(property,allElementsToDelete,result);
    return delegateToJavaProcessor(property,allElementsToDelete,result);
  }
  if (element instanceof JetTypeParameter) {
    JetTypeParameter typeParameter=(JetTypeParameter)element;
    findTypeParameterUsages(typeParameter,result);
    return delegateToJavaProcessor(typeParameter,allElementsToDelete,result);
  }
  if (element instanceof JetParameter) {
    JetParameter jetParameter=(JetParameter)element;
    PsiParameter psiParameter=getPsiParameter(jetParameter);
    if (psiParameter != null) {
      super.findUsages(psiParameter,allElementsToDelete,result);
    }
    return findParameterUsages(jetParameter,allElementsToDelete,result);
  }
  return getSearchInfo(element,allElementsToDelete);
}
