{
  Collection<PsiMethod> superMethods=Arrays.asList(method.findSuperMethods(true));
  Collection<PsiMethod> overridingMethods=OverridingMethodsSearch.search(method,true).findAll();
  overrideLoop:   for (  PsiMethod overridingMethod : overridingMethods) {
    PsiElement overridingElement=overridingMethod instanceof JetClsMethod ? ((JetClsMethod)overridingMethod).getOrigin() : overridingMethod;
    Collection<PsiMethod> currentSuperMethods=new ArrayList<PsiMethod>();
    ContainerUtil.addAll(currentSuperMethods,overridingMethod.findSuperMethods(true));
    currentSuperMethods.addAll(superMethods);
    for (    PsiMethod superMethod : currentSuperMethods) {
      if (!checkPsiMethodEquality(superMethod,method))       continue overrideLoop;
    }
    removeOverrideModifier(overridingElement);
  }
}
