{
  PsiMethod lightMethod=LightClassUtil.getLightClassMethod(function);
  if (lightMethod == null) {
    return getSearchInfo(function,allElementsToDelete);
  }
  Collection<PsiReference> references=ReferencesSearch.search(function).findAll();
  List<PsiMethod> overridingMethods=difference(OverridingMethodsSearch.search(lightMethod,true).findAll(),allElementsToDelete);
  processDeclarationUsages(function,allElementsToDelete,result,references,overridingMethods);
  Map<PsiMethod,Collection<PsiReference>> methodToReferences=getOverridingUsagesMap(overridingMethods);
  Set<PsiMethod> safeOverriding=filterSafeOverridingMethods(lightMethod,references,overridingMethods,methodToReferences,result,allElementsToDelete);
  List<PsiElement> ignoredElements=new ArrayList<PsiElement>(safeOverriding);
  ContainerUtil.addAll(ignoredElements,allElementsToDelete);
  return getSearchInfo(function,ignoredElements);
}
