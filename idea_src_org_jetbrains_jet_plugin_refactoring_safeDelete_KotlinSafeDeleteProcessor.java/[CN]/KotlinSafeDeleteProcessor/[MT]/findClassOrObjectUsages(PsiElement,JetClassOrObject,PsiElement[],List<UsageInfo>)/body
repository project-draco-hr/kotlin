{
  ReferencesSearch.search(referencedElement).forEach(new Processor<PsiReference>(){
    @Override public boolean process(    PsiReference reference){
      PsiElement element=reference.getElement();
      if (!isInside(element,allElementsToDelete)) {
        JetImportDirective importDirective=PsiTreeUtil.getParentOfType(element,JetImportDirective.class,false);
        if (importDirective != null) {
          result.add(new SafeDeleteImportDirectiveUsageInfo(importDirective,classOrObject));
          return true;
        }
        result.add(new SafeDeleteReferenceSimpleDeleteUsageInfo(element,classOrObject,false));
      }
      return true;
    }
  }
);
  return getSearchInfo(referencedElement,allElementsToDelete);
}
