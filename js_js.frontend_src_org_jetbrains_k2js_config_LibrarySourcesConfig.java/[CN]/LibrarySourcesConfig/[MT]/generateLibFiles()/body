{
  if (files.isEmpty()) {
    return Collections.emptyList();
  }
  List<JetFile> jetFiles=new ArrayList<JetFile>();
  String moduleName=UNKNOWN_EXTERNAL_MODULE_NAME;
  VirtualFileSystem fileSystem=VirtualFileManager.getInstance().getFileSystem(StandardFileSystems.FILE_PROTOCOL);
  VirtualFileSystem jarFileSystem=VirtualFileManager.getInstance().getFileSystem(StandardFileSystems.JAR_PROTOCOL);
  PsiManager psiManager=PsiManager.getInstance(getProject());
  for (  String path : files) {
    if (path.charAt(0) == '@') {
      moduleName=path.substring(1);
      continue;
    }
    VirtualFile file;
    String actualModuleName=moduleName;
    if (path.endsWith(".jar") || path.endsWith(".zip")) {
      file=jarFileSystem.findFileByPath(path + URLUtil.JAR_SEPARATOR);
      if (isJsRuntimeLibrary(new File(path))) {
        actualModuleName=STDLIB_JS_MODULE_NAME;
      }
    }
 else {
      file=fileSystem.findFileByPath(path);
    }
    if (file == null) {
      LOG.error("File '" + path + "not found.'");
    }
 else {
      JetFileCollector jetFileCollector=new JetFileCollector(jetFiles,actualModuleName,psiManager);
      VfsUtilCore.visitChildrenRecursively(file,jetFileCollector);
    }
  }
  return jetFiles;
}
