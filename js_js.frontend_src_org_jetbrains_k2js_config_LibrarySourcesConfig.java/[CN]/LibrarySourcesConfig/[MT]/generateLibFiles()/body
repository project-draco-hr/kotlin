{
  if (files.isEmpty()) {
    return Collections.emptyList();
  }
  List<JetFile> jetFiles=new ArrayList<JetFile>();
  String moduleName=UNKNOWN_EXTERNAL_MODULE_NAME;
  VirtualFileSystem fileSystem=VirtualFileManager.getInstance().getFileSystem(StandardFileSystems.FILE_PROTOCOL);
  PsiManager psiManager=PsiManager.getInstance(getProject());
  for (  String path : files) {
    if (path.charAt(0) == '@') {
      moduleName=path.substring(1);
    }
 else     if (path.endsWith(".jar") || path.endsWith(".zip")) {
      String actualModuleName=isJsRuntimeLibrary(new File(path)) ? STDLIB_JS_MODULE_NAME : moduleName;
      try {
        jetFiles.addAll(readZip(path,actualModuleName));
      }
 catch (      IOException e) {
        LOG.error(e);
      }
    }
 else {
      VirtualFile file=fileSystem.findFileByPath(path);
      if (file == null) {
        LOG.error("File '" + path + "not found.'");
      }
 else       if (file.isDirectory()) {
        JetFileCollector jetFileCollector=new JetFileCollector(jetFiles,moduleName,psiManager);
        VfsUtilCore.visitChildrenRecursively(file,jetFileCollector);
      }
 else {
        jetFiles.add(getJetFileByVirtualFile(file,moduleName,psiManager));
      }
    }
  }
  return jetFiles;
}
