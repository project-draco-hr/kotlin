{
  if (path.isRoot()) {
    return Collections.emptyList();
  }
  Collection<JetScope> scopes=Arrays.asList(packageDescriptor.getMemberScope());
  List<Name> names=path.pathSegments();
  if (names.size() > 1) {
    for (    Name subName : path.pathSegments().subList(0,names.size() - 1)) {
      Collection<JetScope> tempScopes=Lists.newArrayList();
      for (      JetScope scope : scopes) {
        ClassifierDescriptor classifier=scope.getClassifier(subName);
        if (classifier instanceof ClassDescriptorBase) {
          ClassDescriptorBase classDescriptor=(ClassDescriptorBase)classifier;
          tempScopes.add(classDescriptor.getUnsubstitutedInnerClassesScope());
        }
      }
      scopes=tempScopes;
    }
  }
  Name shortName=path.shortName();
  Collection<ClassDescriptor> resultClassifierDescriptors=Lists.newArrayList();
  for (  JetScope scope : scopes) {
    ClassifierDescriptor classifier=scope.getClassifier(shortName);
    if (classifier instanceof ClassDescriptor) {
      resultClassifierDescriptors.add((ClassDescriptor)classifier);
    }
    if (includeObjectDeclarations) {
      ClassDescriptor objectDescriptor=scope.getObjectDescriptor(shortName);
      if (objectDescriptor != null) {
        resultClassifierDescriptors.add(objectDescriptor);
      }
    }
  }
  return resultClassifierDescriptors;
}
