{
  if (declaration instanceof JetTypeParameter && skipParameters) {
    declaration=PsiTreeUtil.getParentOfType(declaration,JetNamedDeclaration.class);
  }
 else   if (declaration instanceof JetParameter) {
    PsiElement parent=declaration.getParent();
    if (((JetParameter)declaration).hasValOrVar() && parent != null && parent.getParent() instanceof JetPrimaryConstructor) {
      return null;
    }
 else     if (skipParameters && parent != null && parent.getParent() instanceof JetNamedFunction) {
      declaration=(JetNamedFunction)parent.getParent();
    }
  }
  PsiElement current=PsiTreeUtil.getStubOrPsiParent(declaration);
  while (current != null) {
    PsiElement parent=PsiTreeUtil.getStubOrPsiParent(current);
    if (parent instanceof JetScript)     return null;
    if (current instanceof JetClassInitializer) {
      return ((JetClassInitializer)current).getBody();
    }
    if (current instanceof JetProperty || current instanceof JetFunction) {
      if (parent instanceof JetFile || (parent instanceof JetClassBody && !isMemberOfObjectExpression((JetCallableDeclaration)current))) {
        return (JetElement)current;
      }
    }
    if (current instanceof JetBlockExpression || current instanceof JetParameter) {
      return (JetElement)current;
    }
    current=parent;
  }
  return null;
}
