{
  if (parentExpression instanceof JetParenthesizedExpression || innerExpression instanceof JetParenthesizedExpression) {
    return false;
  }
  if (parentExpression instanceof JetPackageDirective)   return false;
  if (parentExpression instanceof JetWhenExpression || innerExpression instanceof JetWhenExpression) {
    return false;
  }
  if (innerExpression instanceof JetIfExpression) {
    PsiElement current=parentExpression;
    while (!(current instanceof JetBlockExpression || current instanceof JetDeclaration || current instanceof JetStatementExpression)) {
      if (current.getTextRange().getEndOffset() != currentInner.getTextRange().getEndOffset()) {
        return current.getText().charAt(current.getTextLength() - 1) != ')';
      }
      current=current.getParent();
    }
  }
  if (parentExpression instanceof JetCallExpression && currentInner == ((JetCallExpression)parentExpression).getCalleeExpression()) {
    if (innerExpression instanceof JetSimpleNameExpression)     return false;
    if (PsiUtilPackage.getQualifiedExpressionForSelector(parentExpression) != null)     return true;
    return !(innerExpression instanceof JetThisExpression || innerExpression instanceof JetArrayAccessExpression || innerExpression instanceof JetConstantExpression|| innerExpression instanceof JetStringTemplateExpression|| innerExpression instanceof JetCallExpression);
  }
  IElementType innerOperation=getOperation(innerExpression);
  IElementType parentOperation=getOperation(parentExpression);
  if (parentExpression instanceof JetReturnExpression && (innerExpression instanceof JetLabeledExpression || innerExpression instanceof JetAnnotatedExpression))   return true;
  if (innerExpression instanceof JetBinaryExpressionWithTypeRHS && parentOperation == JetTokens.LT) {
    return true;
  }
  if (parentExpression instanceof JetLabeledExpression)   return false;
  if (parentExpression instanceof JetBinaryExpression && parentOperation == JetTokens.ELVIS && currentInner == ((JetBinaryExpression)parentExpression).getRight()) {
    return false;
  }
  int innerPriority=getPriority(innerExpression);
  int parentPriority=getPriority(parentExpression);
  if (innerPriority == parentPriority) {
    if (parentExpression instanceof JetBinaryExpression) {
      if (innerOperation == JetTokens.ANDAND || innerOperation == JetTokens.OROR) {
        return false;
      }
      return ((JetBinaryExpression)parentExpression).getRight() == currentInner;
    }
    if (parentExpression instanceof JetPrefixExpression && innerExpression instanceof JetPrefixExpression) {
      return innerOperation == parentOperation && (innerOperation == JetTokens.PLUS || innerOperation == JetTokens.MINUS);
    }
    return false;
  }
  return innerPriority < parentPriority;
}
