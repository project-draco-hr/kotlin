{
  getSerializedSize();
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeInt32(1,flags_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeBytes(2,getExtraVisibilityBytes());
  }
  for (int i=0; i < annotations_.size(); i++) {
    output.writeMessage(3,annotations_.get(i));
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeInt32(4,name_);
  }
  for (int i=0; i < typeParameters_.size(); i++) {
    output.writeMessage(5,typeParameters_.get(i));
  }
  for (int i=0; i < supertypes_.size(); i++) {
    output.writeMessage(6,supertypes_.get(i));
  }
  for (int i=0; i < nestedClassNames_.size(); i++) {
    output.writeInt32(7,nestedClassNames_.get(i));
  }
  for (int i=0; i < nestedObjectNames_.size(); i++) {
    output.writeInt32(8,nestedObjectNames_.get(i));
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    output.writeBool(9,classObjectPresent_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    output.writeMessage(10,primaryConstructor_);
  }
  for (int i=0; i < members_.size(); i++) {
    output.writeMessage(11,members_.get(i));
  }
}
