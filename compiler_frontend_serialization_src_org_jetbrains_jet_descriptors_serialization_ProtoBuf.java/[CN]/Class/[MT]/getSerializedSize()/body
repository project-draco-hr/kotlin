{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(1,flags_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(2,getExtraVisibilityBytes());
  }
  for (int i=0; i < annotations_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(3,annotations_.get(i));
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(4,name_);
  }
  for (int i=0; i < typeParameters_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,typeParameters_.get(i));
  }
  for (int i=0; i < supertypes_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(6,supertypes_.get(i));
  }
{
    int dataSize=0;
    for (int i=0; i < nestedClassNames_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(nestedClassNames_.get(i));
    }
    size+=dataSize;
    size+=1 * getNestedClassNamesList().size();
  }
{
    int dataSize=0;
    for (int i=0; i < nestedObjectNames_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(nestedObjectNames_.get(i));
    }
    size+=dataSize;
    size+=1 * getNestedObjectNamesList().size();
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(9,classObjectPresent_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(10,primaryConstructor_);
  }
  for (int i=0; i < members_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(11,members_.get(i));
  }
  memoizedSerializedSize=size;
  return size;
}
