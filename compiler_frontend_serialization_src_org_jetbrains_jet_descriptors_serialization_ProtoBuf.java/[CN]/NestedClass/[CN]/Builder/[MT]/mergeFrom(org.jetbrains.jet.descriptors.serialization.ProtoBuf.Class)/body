{
  if (other == org.jetbrains.jet.descriptors.serialization.ProtoBuf.Class.getDefaultInstance())   return this;
  if (other.hasFlags()) {
    setFlags(other.getFlags());
  }
  if (other.hasExtraVisibility()) {
    setExtraVisibility(other.getExtraVisibility());
  }
  if (!other.annotations_.isEmpty()) {
    if (annotations_.isEmpty()) {
      annotations_=other.annotations_;
      bitField0_=(bitField0_ & ~0x00000004);
    }
 else {
      ensureAnnotationsIsMutable();
      annotations_.addAll(other.annotations_);
    }
  }
  if (other.hasName()) {
    setName(other.getName());
  }
  if (!other.typeParameters_.isEmpty()) {
    if (typeParameters_.isEmpty()) {
      typeParameters_=other.typeParameters_;
      bitField0_=(bitField0_ & ~0x00000010);
    }
 else {
      ensureTypeParametersIsMutable();
      typeParameters_.addAll(other.typeParameters_);
    }
  }
  if (!other.supertypes_.isEmpty()) {
    if (supertypes_.isEmpty()) {
      supertypes_=other.supertypes_;
      bitField0_=(bitField0_ & ~0x00000020);
    }
 else {
      ensureSupertypesIsMutable();
      supertypes_.addAll(other.supertypes_);
    }
  }
  if (!other.nestedClasses_.isEmpty()) {
    if (nestedClasses_.isEmpty()) {
      nestedClasses_=other.nestedClasses_;
      bitField0_=(bitField0_ & ~0x00000040);
    }
 else {
      ensureNestedClassesIsMutable();
      nestedClasses_.addAll(other.nestedClasses_);
    }
  }
  if (other.hasPrimaryConstructor()) {
    mergePrimaryConstructor(other.getPrimaryConstructor());
  }
  if (!other.members_.isEmpty()) {
    if (members_.isEmpty()) {
      members_=other.members_;
      bitField0_=(bitField0_ & ~0x00000100);
    }
 else {
      ensureMembersIsMutable();
      members_.addAll(other.members_);
    }
  }
  if (other.hasClassObject()) {
    mergeClassObject(other.getClassObject());
  }
  return this;
}
