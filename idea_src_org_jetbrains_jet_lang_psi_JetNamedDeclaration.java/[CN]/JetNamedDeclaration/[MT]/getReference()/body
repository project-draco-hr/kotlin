{
  return new PsiReference(){
    @Override public PsiElement getElement(){
      return getNameIdentifier();
    }
    @Override public TextRange getRangeInElement(){
      PsiElement element=getElement();
      if (element == null)       return null;
      return element.getTextRange().shiftRight(element.getTextOffset());
    }
    @Override public PsiElement resolve(){
      return PsiTreeUtil.getParentOfType(JetNamedDeclaration.this,JetFile.class);
    }
    @NotNull @Override public String getCanonicalText(){
      return "<TBD>";
    }
    @Override public PsiElement handleElementRename(    String newElementName) throws IncorrectOperationException {
      throw new IncorrectOperationException();
    }
    @Override public PsiElement bindToElement(    @NotNull PsiElement element) throws IncorrectOperationException {
      throw new IncorrectOperationException();
    }
    @Override public boolean isReferenceTo(    PsiElement element){
      return resolve() == element;
    }
    @NotNull @Override public Object[] getVariants(){
      return EMPTY_ARRAY;
    }
    @Override public boolean isSoft(){
      return false;
    }
  }
;
}
