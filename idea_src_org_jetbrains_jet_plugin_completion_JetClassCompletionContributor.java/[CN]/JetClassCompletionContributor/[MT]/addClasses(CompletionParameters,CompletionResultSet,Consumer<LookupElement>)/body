{
  CompletionResultSet tempResult=result.withPrefixMatcher(CompletionUtil.findReferenceOrAlphanumericPrefix(parameters));
  Project project=parameters.getPosition().getProject();
  JetShortNamesCache namesCache=JetCacheManager.getInstance(project).getNamesCache();
  Collection<DeclarationDescriptor> jetOnlyClasses=JetShortNamesCache.getJetOnlyTypes();
  BindingContext bindingContext=namesCache.getResolutionContext(GlobalSearchScope.allScope(project));
  for (  DeclarationDescriptor jetOnlyClass : jetOnlyClasses) {
    consumer.consume(DescriptorLookupConverter.createLookupElement(bindingContext,jetOnlyClass));
  }
  JavaClassNameCompletionContributor.addAllClasses(parameters,false,JavaCompletionSorting.addJavaSorting(parameters,tempResult).getPrefixMatcher(),new Consumer<LookupElement>(){
    @Override public void consume(    LookupElement lookupElement){
      if (lookupElement instanceof JavaPsiClassReferenceElement) {
        JavaPsiClassReferenceElement javaPsiReferenceElement=(JavaPsiClassReferenceElement)lookupElement;
        javaPsiReferenceElement.setInsertHandler(JetJavaClassInsertHandler.JAVA_CLASS_INSERT_HANDLER);
      }
      consumer.consume(lookupElement);
    }
  }
);
}
