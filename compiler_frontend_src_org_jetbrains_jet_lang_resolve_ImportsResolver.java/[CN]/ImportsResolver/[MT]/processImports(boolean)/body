{
  ImportResolver importResolver=new ImportResolver(context.getTrace(),firstPhase);
  for (  JetFile file : context.getNamespaceDescriptors().keySet()) {
    WritableScope namespaceScope=context.getNamespaceScopes().get(file);
    Importer.DelayedImporter delayedImporter=new Importer.DelayedImporter(namespaceScope,firstPhase);
    if (!firstPhase) {
      namespaceScope.clearImports();
    }
    context.getConfiguration().addDefaultImports(context.getTrace(),namespaceScope,delayedImporter);
    Map<JetImportDirective,DeclarationDescriptor> resolvedDirectives=Maps.newHashMap();
    List<JetImportDirective> importDirectives=file.getImportDirectives();
    for (    JetImportDirective importDirective : importDirectives) {
      Collection<? extends DeclarationDescriptor> descriptors=importResolver.processImportReference(importDirective,namespaceScope,delayedImporter);
      if (descriptors != null && descriptors.size() == 1) {
        resolvedDirectives.put(importDirective,descriptors.iterator().next());
      }
    }
    delayedImporter.processImports();
    if (firstPhase)     continue;
    for (    JetImportDirective importDirective : importDirectives) {
      reportUselessImport(importDirective,namespaceScope,resolvedDirectives);
    }
  }
}
