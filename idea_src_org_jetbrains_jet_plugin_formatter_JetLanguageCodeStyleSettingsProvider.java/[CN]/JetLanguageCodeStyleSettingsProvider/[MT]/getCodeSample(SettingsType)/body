{
switch (settingsType) {
case WRAPPING_AND_BRACES_SETTINGS:
    return "public class ThisIsASampleClass {\n" + "    private fun foo1(i1: Int,\n" + "                     i2: Int,\n"+ "                     i3: Int) : Int {\n"+ "        when (i1) {\n"+ "            is Number -> 0\n"+ "            else -> 1\n"+ "        }\n"+ "        return 0\n"+ "    }\n"+ "    private fun foo2():Int {\n"+ "        return foo1(12,\n"+ "                13,\n"+ "                14\n"+ "        )\n"+ "    }\n"+ "    private val f = {(a: Int)->a*2}\n"+ "}";
default :
  return "open class Some {\n" + "  private val f = {(a: Int)->a*2}\n" + "  fun foo() : Int {\n"+ "    val test : Int = 12\n"+ "    return test\n"+ "  }\n"+ "  private fun <T>foo2():Int where T : List<T> {\n"+ "    return 0\n"+ "  }\n"+ "}\n\n"+ "class AnotherClass<T:Any>: Some";
}
}
