{
  final LexicalScopeVariableInfo lexicalScopeVariableInfo=pseudocodeVariableDataCollector.getLexicalScopeVariableInfo();
  return pseudocodeVariableDataCollector.collectData(FORWARD,true,new InstructionDataMergeStrategy<VariableControlFlowState>(){
    @NotNull @Override public Edges<Map<VariableDescriptor,VariableControlFlowState>> invoke(    @NotNull Instruction instruction,    @NotNull Collection<? extends Map<VariableDescriptor,VariableControlFlowState>> incomingEdgesData){
      Map<VariableDescriptor,VariableControlFlowState> enterInstructionData=mergeIncomingEdgesDataForInitializers(incomingEdgesData);
      Map<VariableDescriptor,VariableControlFlowState> exitInstructionData=addVariableInitStateFromCurrentInstructionIfAny(instruction,enterInstructionData,lexicalScopeVariableInfo);
      return new Edges<Map<VariableDescriptor,VariableControlFlowState>>(enterInstructionData,exitInstructionData);
    }
  }
);
}
