{
  org.jetbrains.kotlin.serialization.ProtoBuf.Class result=new org.jetbrains.kotlin.serialization.ProtoBuf.Class(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.flags_=flags_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.fqName_=fqName_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.companionObjectName_=companionObjectName_;
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    typeParameter_=java.util.Collections.unmodifiableList(typeParameter_);
    bitField0_=(bitField0_ & ~0x00000008);
  }
  result.typeParameter_=typeParameter_;
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    supertype_=java.util.Collections.unmodifiableList(supertype_);
    bitField0_=(bitField0_ & ~0x00000010);
  }
  result.supertype_=supertype_;
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    nestedClassName_=java.util.Collections.unmodifiableList(nestedClassName_);
    bitField0_=(bitField0_ & ~0x00000020);
  }
  result.nestedClassName_=nestedClassName_;
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    constructor_=java.util.Collections.unmodifiableList(constructor_);
    bitField0_=(bitField0_ & ~0x00000040);
  }
  result.constructor_=constructor_;
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    function_=java.util.Collections.unmodifiableList(function_);
    bitField0_=(bitField0_ & ~0x00000080);
  }
  result.function_=function_;
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    property_=java.util.Collections.unmodifiableList(property_);
    bitField0_=(bitField0_ & ~0x00000100);
  }
  result.property_=property_;
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    enumEntry_=java.util.Collections.unmodifiableList(enumEntry_);
    bitField0_=(bitField0_ & ~0x00000200);
  }
  result.enumEntry_=enumEntry_;
  result.bitField0_=to_bitField0_;
  return result;
}
