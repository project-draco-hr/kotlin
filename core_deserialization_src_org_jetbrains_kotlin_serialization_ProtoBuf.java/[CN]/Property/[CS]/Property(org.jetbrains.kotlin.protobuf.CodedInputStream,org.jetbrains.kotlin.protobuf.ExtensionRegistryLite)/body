{
  initFields();
  int mutable_bitField0_=0;
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 8:
{
    bitField0_|=0x00000002;
    oldFlags_=input.readInt32();
    break;
  }
case 16:
{
  bitField0_|=0x00000004;
  name_=input.readInt32();
  break;
}
case 26:
{
org.jetbrains.kotlin.serialization.ProtoBuf.Type.Builder subBuilder=null;
if (((bitField0_ & 0x00000008) == 0x00000008)) {
  subBuilder=returnType_.toBuilder();
}
returnType_=input.readMessage(org.jetbrains.kotlin.serialization.ProtoBuf.Type.PARSER,extensionRegistry);
if (subBuilder != null) {
  subBuilder.mergeFrom(returnType_);
  returnType_=subBuilder.buildPartial();
}
bitField0_|=0x00000008;
break;
}
case 34:
{
if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
typeParameter_=new java.util.ArrayList<org.jetbrains.kotlin.serialization.ProtoBuf.TypeParameter>();
mutable_bitField0_|=0x00000020;
}
typeParameter_.add(input.readMessage(org.jetbrains.kotlin.serialization.ProtoBuf.TypeParameter.PARSER,extensionRegistry));
break;
}
case 42:
{
org.jetbrains.kotlin.serialization.ProtoBuf.Type.Builder subBuilder=null;
if (((bitField0_ & 0x00000020) == 0x00000020)) {
subBuilder=receiverType_.toBuilder();
}
receiverType_=input.readMessage(org.jetbrains.kotlin.serialization.ProtoBuf.Type.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(receiverType_);
receiverType_=subBuilder.buildPartial();
}
bitField0_|=0x00000020;
break;
}
case 50:
{
org.jetbrains.kotlin.serialization.ProtoBuf.ValueParameter.Builder subBuilder=null;
if (((bitField0_ & 0x00000080) == 0x00000080)) {
subBuilder=setterValueParameter_.toBuilder();
}
setterValueParameter_=input.readMessage(org.jetbrains.kotlin.serialization.ProtoBuf.ValueParameter.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(setterValueParameter_);
setterValueParameter_=subBuilder.buildPartial();
}
bitField0_|=0x00000080;
break;
}
case 56:
{
bitField0_|=0x00000100;
getterFlags_=input.readInt32();
break;
}
case 64:
{
bitField0_|=0x00000200;
setterFlags_=input.readInt32();
break;
}
case 72:
{
bitField0_|=0x00000010;
returnTypeId_=input.readInt32();
break;
}
case 80:
{
bitField0_|=0x00000040;
receiverTypeId_=input.readInt32();
break;
}
case 88:
{
bitField0_|=0x00000001;
flags_=input.readInt32();
break;
}
}
}
}
 catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
typeParameter_=java.util.Collections.unmodifiableList(typeParameter_);
}
makeExtensionsImmutable();
}
}
