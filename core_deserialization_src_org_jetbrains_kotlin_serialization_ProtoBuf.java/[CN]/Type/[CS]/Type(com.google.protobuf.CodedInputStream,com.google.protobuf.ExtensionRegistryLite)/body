{
  initFields();
  int mutable_bitField0_=0;
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 18:
{
    if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
      argument_=new java.util.ArrayList<org.jetbrains.kotlin.serialization.ProtoBuf.Type.Argument>();
      mutable_bitField0_|=0x00000001;
    }
    argument_.add(input.readMessage(org.jetbrains.kotlin.serialization.ProtoBuf.Type.Argument.PARSER,extensionRegistry));
    break;
  }
case 24:
{
  bitField0_|=0x00000001;
  nullable_=input.readBool();
  break;
}
case 32:
{
bitField0_|=0x00000002;
flexibleTypeCapabilitiesId_=input.readInt32();
break;
}
case 42:
{
org.jetbrains.kotlin.serialization.ProtoBuf.Type.Builder subBuilder=null;
if (((bitField0_ & 0x00000004) == 0x00000004)) {
subBuilder=flexibleUpperBound_.toBuilder();
}
flexibleUpperBound_=input.readMessage(org.jetbrains.kotlin.serialization.ProtoBuf.Type.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(flexibleUpperBound_);
flexibleUpperBound_=subBuilder.buildPartial();
}
bitField0_|=0x00000004;
break;
}
case 48:
{
bitField0_|=0x00000010;
className_=input.readInt32();
break;
}
case 56:
{
bitField0_|=0x00000020;
typeParameter_=input.readInt32();
break;
}
case 64:
{
bitField0_|=0x00000008;
flexibleUpperBoundId_=input.readInt32();
break;
}
case 72:
{
bitField0_|=0x00000040;
typeParameterName_=input.readInt32();
break;
}
case 82:
{
org.jetbrains.kotlin.serialization.ProtoBuf.Type.Builder subBuilder=null;
if (((bitField0_ & 0x00000100) == 0x00000100)) {
subBuilder=outerType_.toBuilder();
}
outerType_=input.readMessage(org.jetbrains.kotlin.serialization.ProtoBuf.Type.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(outerType_);
outerType_=subBuilder.buildPartial();
}
bitField0_|=0x00000100;
break;
}
case 88:
{
bitField0_|=0x00000200;
outerTypeId_=input.readInt32();
break;
}
case 96:
{
bitField0_|=0x00000080;
typeAliasName_=input.readInt32();
break;
}
case 106:
{
org.jetbrains.kotlin.serialization.ProtoBuf.Type.Builder subBuilder=null;
if (((bitField0_ & 0x00000400) == 0x00000400)) {
subBuilder=abbreviatedType_.toBuilder();
}
abbreviatedType_=input.readMessage(org.jetbrains.kotlin.serialization.ProtoBuf.Type.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(abbreviatedType_);
abbreviatedType_=subBuilder.buildPartial();
}
bitField0_|=0x00000400;
break;
}
case 112:
{
bitField0_|=0x00000800;
abbreviatedTypeId_=input.readInt32();
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
argument_=java.util.Collections.unmodifiableList(argument_);
}
makeExtensionsImmutable();
}
}
