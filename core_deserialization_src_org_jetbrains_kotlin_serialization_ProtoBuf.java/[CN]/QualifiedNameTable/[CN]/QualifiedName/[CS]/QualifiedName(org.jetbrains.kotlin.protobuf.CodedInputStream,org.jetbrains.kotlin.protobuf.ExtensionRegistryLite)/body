{
  initFields();
  int mutable_bitField0_=0;
  org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput=org.jetbrains.kotlin.protobuf.ByteString.newOutput();
  org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput=org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(unknownFieldsOutput);
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFieldsCodedOutput,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 8:
{
    bitField0_|=0x00000001;
    parentQualifiedName_=input.readInt32();
    break;
  }
case 16:
{
  bitField0_|=0x00000002;
  shortName_=input.readInt32();
  break;
}
case 24:
{
int rawValue=input.readEnum();
org.jetbrains.kotlin.serialization.ProtoBuf.QualifiedNameTable.QualifiedName.Kind value=org.jetbrains.kotlin.serialization.ProtoBuf.QualifiedNameTable.QualifiedName.Kind.valueOf(rawValue);
if (value == null) {
  unknownFieldsCodedOutput.writeRawVarint32(tag);
  unknownFieldsCodedOutput.writeRawVarint32(rawValue);
}
 else {
  bitField0_|=0x00000004;
  kind_=value;
}
break;
}
}
}
}
 catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
try {
unknownFieldsCodedOutput.flush();
}
 catch (java.io.IOException e) {
}
 finally {
unknownFields=unknownFieldsOutput.toByteString();
}
makeExtensionsImmutable();
}
}
