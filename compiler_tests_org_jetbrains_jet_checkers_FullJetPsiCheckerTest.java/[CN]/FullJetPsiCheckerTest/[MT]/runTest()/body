{
  String fileName=myName + ".jet";
  String fullPath=myDataPath + "/" + fileName;
  String expectedText=loadFile(fullPath);
  List<CheckerTestUtil.DiagnosedRange> diagnosedRanges=Lists.newArrayList();
  String clearText=CheckerTestUtil.parseDiagnosedRanges(expectedText,diagnosedRanges);
  myFile=createPsiFile(myName,clearText);
  BindingContext bindingContext=AnalyzerFacade.analyzeFileWithCache(myFile);
  CheckerTestUtil.diagnosticsDiff(diagnosedRanges,bindingContext.getDiagnostics(),new CheckerTestUtil.DiagnosticDiffCallbacks(){
    @Override public void missingDiagnostic(    String type,    int expectedStart,    int expectedEnd){
      String message="Missing " + type + DiagnosticUtils.atLocation(myFile,new TextRange(expectedStart,expectedEnd));
      System.err.println(message);
    }
    @Override public void unexpectedDiagnostic(    String type,    int actualStart,    int actualEnd){
      String message="Unexpected " + type + DiagnosticUtils.atLocation(myFile,new TextRange(actualStart,actualEnd));
      System.err.println(message);
    }
  }
);
  String actualText=CheckerTestUtil.addDiagnosticMarkersToText(myFile,bindingContext).toString();
  assertEquals(expectedText,actualText);
}
