{
  this.project=project;
  this.modules=ConfigureKotlinInProjectUtilsKt.getNonConfiguredModules(project,configurator);
  this.modulesWithKtFiles=ConfigureKotlinInProjectUtilsKt.getNonConfiguredModulesWithKotlinFiles(project,configurator);
  DefaultComboBoxModel comboBoxModel=new DefaultComboBoxModel();
  for (  Module module : modules) {
    comboBoxModel.addElement(module.getName());
  }
  if (modulesWithKtFiles.isEmpty()) {
    allModulesWithKtRadioButton.setVisible(false);
    allModulesWithKtNames.setVisible(false);
  }
  singleModuleComboBox.setModel(comboBoxModel);
  ActionListener listener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      updateComponents();
    }
  }
;
  singleModuleRadioButton.addActionListener(listener);
  allModulesWithKtRadioButton.addActionListener(listener);
  allModulesRadioButton.addActionListener(listener);
  if (modulesWithKtFiles.size() > 2) {
    allModulesWithKtNames.setHtmlText("<html>" + XmlUtil.escape(modulesWithKtFiles.get(0).getName()) + ", "+ XmlUtil.escape(modulesWithKtFiles.get(1).getName())+ " and <a href=\"#\">"+ (modulesWithKtFiles.size() - 2)+ " other modules</a>");
    allModulesWithKtNames.addHyperlinkListener(new HyperlinkListener(){
      @Override public void hyperlinkUpdate(      HyperlinkEvent event){
        JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<Module>("Modules with Kotlin Files",modulesWithKtFiles){
          @NotNull @Override public String getTextFor(          Module value){
            return value.getName();
          }
        }
).showUnderneathOf(allModulesWithKtNames);
      }
    }
);
  }
 else {
    allModulesWithKtNames.setText(StringUtil.join(modulesWithKtFiles,new Function<Module,String>(){
      @Override public String fun(      Module module){
        return module.getName();
      }
    }
,", "));
  }
  ButtonGroup modulesGroup=new ButtonGroup();
  modulesGroup.add(allModulesRadioButton);
  modulesGroup.add(allModulesWithKtRadioButton);
  modulesGroup.add(singleModuleRadioButton);
  if (allModulesWithKtRadioButton.isVisible()) {
    allModulesWithKtRadioButton.setSelected(true);
  }
 else {
    allModulesRadioButton.setSelected(true);
  }
  updateComponents();
}
