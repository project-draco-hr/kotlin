{
  Set<JetType> newTypes=new LinkedHashSet<JetType>(Arrays.asList(cachedTypeCandidates));
  for (  TypeSubstitution substitution : substitutions) {
    List<JetType> toAdd=new ArrayList<JetType>();
    List<JetType> toRemove=new ArrayList<JetType>();
    for (    JetType type : newTypes) {
      toAdd.add(substituteType(type,substitution,variance));
      if (containsType(type,substitution.getByType())) {
        toRemove.add(type);
      }
    }
    newTypes.addAll(toAdd);
    newTypes.removeAll(toRemove);
  }
  cachedTypeCandidates=newTypes.toArray(new JetType[newTypes.size()]);
}
