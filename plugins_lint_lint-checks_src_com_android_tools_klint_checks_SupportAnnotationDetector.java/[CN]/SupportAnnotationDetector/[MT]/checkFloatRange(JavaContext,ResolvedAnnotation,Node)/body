{
  Object object=ConstantEvaluator.evaluate(context,argument);
  if (!(object instanceof Number)) {
    return;
  }
  double value=((Number)object).doubleValue();
  double from=getDoubleAttribute(annotation,ATTR_FROM,Double.NEGATIVE_INFINITY);
  double to=getDoubleAttribute(annotation,ATTR_TO,Double.POSITIVE_INFINITY);
  boolean fromInclusive=getBoolean(annotation,ATTR_FROM_INCLUSIVE,true);
  boolean toInclusive=getBoolean(annotation,ATTR_TO_INCLUSIVE,true);
  String message=getFloatRangeError(value,from,to,fromInclusive,toInclusive,argument);
  if (message != null) {
    context.report(RANGE,argument,context.getLocation(argument),message);
  }
}
