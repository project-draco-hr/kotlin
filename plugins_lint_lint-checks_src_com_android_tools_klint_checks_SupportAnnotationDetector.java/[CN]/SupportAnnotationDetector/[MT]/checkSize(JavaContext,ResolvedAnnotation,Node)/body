{
  int actual;
  if (argument instanceof StringLiteral) {
    StringLiteral literal=(StringLiteral)argument;
    String s=literal.astValue();
    actual=s.length();
  }
 else   if (argument instanceof ArrayCreation) {
    ArrayCreation literal=(ArrayCreation)argument;
    ArrayInitializer initializer=literal.astInitializer();
    if (initializer == null) {
      return;
    }
    actual=initializer.astExpressions().size();
  }
 else {
    return;
  }
  long exact=getLongAttribute(annotation,ATTR_VALUE,-1);
  long min=getLongAttribute(annotation,ATTR_MIN,Long.MIN_VALUE);
  long max=getLongAttribute(annotation,ATTR_MAX,Long.MAX_VALUE);
  long multiple=getLongAttribute(annotation,ATTR_MULTIPLE,1);
  String unit;
  boolean isString=argument instanceof StringLiteral;
  if (isString) {
    unit="length";
  }
 else {
    unit="size";
  }
  String message=getSizeError(actual,exact,min,max,multiple,unit);
  if (message != null) {
    context.report(RANGE,argument,context.getLocation(argument),message);
  }
}
