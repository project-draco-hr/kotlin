{
  if (expression instanceof IntegralLiteral) {
    return ((IntegralLiteral)expression).astIntValue();
  }
  ResolvedNode resolvedNode=context.resolve(expression);
  if (resolvedNode instanceof ResolvedField) {
    Object value=((ResolvedField)resolvedNode).getValue();
    if (value instanceof Integer) {
      return (Integer)value;
    }
  }
  if (expression instanceof BinaryExpression) {
    BinaryExpression binaryExpression=(BinaryExpression)expression;
    BinaryOperator operator=binaryExpression.astOperator();
    int leftValue=calculateValue(context,binaryExpression.astLeft());
    int rightValue=calculateValue(context,binaryExpression.astRight());
    if (operator == BinaryOperator.BITWISE_OR) {
      return leftValue | rightValue;
    }
    if (operator == BinaryOperator.BITWISE_AND) {
      return leftValue & rightValue;
    }
    if (operator == BinaryOperator.BITWISE_XOR) {
      return leftValue ^ rightValue;
    }
  }
  return 0;
}
