{
  if (!startFromName) {
    renderAnnotations(klass,builder);
    renderVisibility(klass.getVisibility(),builder);
    if (!(klass.getKind() == ClassKind.TRAIT && klass.getModality() == Modality.ABSTRACT || klass.getKind().isSingleton() && klass.getModality() == Modality.FINAL)) {
      renderModality(klass.getModality(),builder);
    }
    renderInner(klass.isInner(),builder);
    renderClassKindPrefix(klass,builder);
  }
  if (!isCompanionObject(klass)) {
    if (!startFromName)     renderSpaceIfNeeded(builder);
    renderName(klass,builder);
  }
 else {
    renderCompanionObjectName(klass,builder);
  }
  List<TypeParameterDescriptor> typeParameters=klass.getTypeConstructor().getParameters();
  renderTypeParameters(typeParameters,builder,false);
  if (!klass.getKind().isSingleton() && classWithPrimaryConstructor) {
    ConstructorDescriptor primaryConstructor=klass.getUnsubstitutedPrimaryConstructor();
    if (primaryConstructor != null) {
      builder.append(" ");
      renderAnnotations(primaryConstructor,builder,true);
      renderVisibility(primaryConstructor.getVisibility(),builder);
      renderValueParameters(primaryConstructor,builder);
    }
  }
  renderSuperTypes(klass,builder);
  renderWhereSuffix(typeParameters,builder);
}
