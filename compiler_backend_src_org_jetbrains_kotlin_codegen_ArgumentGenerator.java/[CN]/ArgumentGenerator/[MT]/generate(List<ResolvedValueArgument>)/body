{
  List<Integer> masks=new ArrayList<Integer>(1);
  int mask=0;
  int n=valueArguments.size();
  for (int i=0; i < n; i++) {
    if (i != 0 && i % Integer.SIZE == 0) {
      masks.add(mask);
      mask=0;
    }
    ResolvedValueArgument argument=valueArguments.get(i);
    if (argument instanceof ExpressionValueArgument) {
      generateExpression(i,(ExpressionValueArgument)argument);
    }
 else     if (argument instanceof DefaultValueArgument) {
      mask|=1 << (i % Integer.SIZE);
      generateDefault(i,(DefaultValueArgument)argument);
    }
 else     if (argument instanceof VarargValueArgument) {
      generateVararg(i,(VarargValueArgument)argument);
    }
 else {
      generateOther(i,argument);
    }
  }
  if (mask == 0 && masks.isEmpty()) {
    return Collections.emptyList();
  }
  masks.add(mask);
  return masks;
}
