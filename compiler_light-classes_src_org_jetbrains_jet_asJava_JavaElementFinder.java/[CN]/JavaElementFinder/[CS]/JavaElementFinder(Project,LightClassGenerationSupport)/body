{
  this.project=project;
  this.psiManager=PsiManager.getInstance(project);
  this.lightClassGenerationSupport=lightClassGenerationSupport;
  this.findClassesCache=CachedValuesManager.getManager(project).createCachedValue(new CachedValueProvider<SLRUCache<FindClassesRequest,PsiClass[]>>(){
    @Nullable @Override public Result<SLRUCache<FindClassesRequest,PsiClass[]>> compute(){
      return new Result<SLRUCache<FindClassesRequest,PsiClass[]>>(new SLRUCache<FindClassesRequest,PsiClass[]>(30,10){
        @NotNull @Override public PsiClass[] createValue(        FindClassesRequest key){
          return doFindClasses(key.fqName,key.scope);
        }
      }
,PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT);
    }
  }
,false);
}
