{
  String contents=context.getContents();
  if (contents == null) {
    return;
  }
  char prev=0;
  for (int i=0, n=contents.length(); i < n; i++) {
    char c=contents.charAt(i);
    if (c == '\r' && prev == '\r') {
      String message="Incorrect line ending: found carriage return (`\\r`) without " + "corresponding newline (`\\n`)";
      boolean blankLine=true;
      for (int index=i - 2; index < i; index++) {
        char d=contents.charAt(index);
        if (!Character.isWhitespace(d)) {
          blankLine=false;
        }
      }
      int lineBegin=i;
      for (int index=i - 2; index >= 0; index--) {
        char d=contents.charAt(index);
        if (d == '\n') {
          lineBegin=index + 1;
          if (!blankLine) {
            break;
          }
        }
 else         if (!Character.isWhitespace(d)) {
          blankLine=false;
        }
      }
      int lineEnd=Math.min(contents.length(),i + 1);
      Location location=Location.create(context.file,contents,lineBegin,lineEnd);
      context.report(ISSUE,document.getDocumentElement(),location,message);
      return;
    }
    prev=c;
  }
}
