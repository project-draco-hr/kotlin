{
  DeclarationDescriptor containing=innerClass.getContainingDeclaration();
  String outerClassInternalName=null;
  if (containing instanceof ClassDescriptor) {
    outerClassInternalName=typeMapper.mapClass((ClassDescriptor)containing).getInternalName();
  }
 else   if (containing instanceof ScriptDescriptor) {
    outerClassInternalName=asmTypeForScriptDescriptor(bindingContext,(ScriptDescriptor)containing).getInternalName();
  }
  String innerName=innerClass.getName().isSpecial() ? null : innerClass.getName().asString();
  String innerClassInternalName=typeMapper.mapClass(innerClass).getInternalName();
  v.visitInnerClass(innerClassInternalName,outerClassInternalName,innerName,calculateInnerClassAccessFlags(innerClass));
}
