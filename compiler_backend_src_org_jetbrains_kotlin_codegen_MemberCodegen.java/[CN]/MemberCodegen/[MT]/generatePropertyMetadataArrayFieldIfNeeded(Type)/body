{
  List<JetProperty> delegatedProperties=new ArrayList<JetProperty>();
  for (  JetDeclaration declaration : ((JetDeclarationContainer)element).getDeclarations()) {
    if (declaration instanceof JetProperty) {
      JetProperty property=(JetProperty)declaration;
      if (property.hasDelegate()) {
        delegatedProperties.add(property);
      }
    }
  }
  if (delegatedProperties.isEmpty())   return;
  v.newField(NO_ORIGIN,ACC_PRIVATE | ACC_STATIC | ACC_FINAL| ACC_SYNTHETIC,JvmAbi.DELEGATED_PROPERTIES_ARRAY_NAME,"[" + PROPERTY_METADATA_TYPE,null,null);
  if (state.getClassBuilderMode() == ClassBuilderMode.LIGHT_CLASSES)   return;
  InstructionAdapter iv=createOrGetClInitCodegen().v;
  iv.iconst(delegatedProperties.size());
  iv.newarray(PROPERTY_METADATA_TYPE);
  for (int i=0, size=delegatedProperties.size(); i < size; i++) {
    VariableDescriptor property=BindingContextUtils.getNotNull(bindingContext,VARIABLE,delegatedProperties.get(i));
    iv.dup();
    iv.iconst(i);
    ReceiverParameterDescriptor dispatchReceiver=property.getDispatchReceiverParameter();
    StackValue value=createOrGetClInitCodegen().generatePropertyReference(delegatedProperties.get(i).getDelegate(),property,property,dispatchReceiver != null ? new TransientReceiver(dispatchReceiver.getType()) : ReceiverValue.NO_RECEIVER);
    value.put(PROPERTY_METADATA_TYPE,iv);
    iv.astore(PROPERTY_METADATA_TYPE);
  }
  iv.putstatic(thisAsmType.getInternalName(),JvmAbi.DELEGATED_PROPERTIES_ARRAY_NAME,"[" + PROPERTY_METADATA_TYPE);
}
