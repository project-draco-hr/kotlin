{
  if (!super.checkAvailable(editor,file,info,down))   return false;
  Boolean closingBraceWin=checkForMovableClosingBrace(editor,file,info,down);
  if (closingBraceWin != null) {
    if (!closingBraceWin) {
      info.toMove2=null;
    }
    return true;
  }
  LineRange oldRange=info.toMove;
  Pair<PsiElement,PsiElement> psiRange=getElementRange(editor,file,oldRange);
  if (psiRange == null)   return false;
  PsiElement firstElement=getMovableElement(psiRange.getFirst());
  PsiElement lastElement=getMovableElement(psiRange.getSecond());
  if (firstElement == null || lastElement == null)   return false;
  Boolean forbidFirst=isForbiddenMove(firstElement,down);
  Boolean forbidLast=isForbiddenMove(lastElement,down);
  if (forbidFirst == null || forbidLast == null) {
    return true;
  }
  if (forbidFirst || forbidLast) {
    info.toMove2=null;
    return true;
  }
  LineRange sourceRange=getSourceRange(firstElement,lastElement,editor);
  if (sourceRange == null)   return false;
  PsiElement sibling=adjustWhiteSpaceSibling(editor,sourceRange,info,down);
  if (sibling == null)   return true;
  info.toMove=sourceRange;
  info.toMove2=getTargetRange(editor,sourceRange.firstElement,sibling,down);
  return true;
}
