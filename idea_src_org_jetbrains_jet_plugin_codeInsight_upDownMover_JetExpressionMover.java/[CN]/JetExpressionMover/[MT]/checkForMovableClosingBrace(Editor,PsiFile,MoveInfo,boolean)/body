{
  PsiElement closingBrace=getStandaloneClosingBrace(file,editor);
  if (closingBrace == null)   return BraceStatus.NOT_FOUND;
  PsiElement blockLikeElement=closingBrace.getParent();
  if (!(blockLikeElement instanceof JetBlockExpression))   return BraceStatus.NOT_MOVABLE;
  if (blockLikeElement.getParent() instanceof JetWhenEntry)   return BraceStatus.NOT_MOVABLE;
  PsiElement enclosingExpression=PsiTreeUtil.getParentOfType(blockLikeElement,JetExpression.class);
  if (enclosingExpression instanceof JetDoWhileExpression)   return BraceStatus.NOT_MOVABLE;
  if (enclosingExpression instanceof JetIfExpression) {
    JetIfExpression ifExpression=(JetIfExpression)enclosingExpression;
    if (blockLikeElement == ifExpression.getThen() && ifExpression.getElse() != null)     return BraceStatus.NOT_MOVABLE;
  }
  return down ? checkForMovableDownClosingBrace(closingBrace,blockLikeElement,editor,info) : checkForMovableUpClosingBrace(closingBrace,blockLikeElement,editor,info);
}
