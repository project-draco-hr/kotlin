{
  ClassifierDescriptor classifier=autoType.getConstructor().getDeclarationDescriptor();
  if (!(classifier instanceof ClassDescriptor)) {
    return classifier;
  }
  ClassDescriptor clazz=(ClassDescriptor)classifier;
  MutableReadOnlyCollectionsMap collectionsMap=MutableReadOnlyCollectionsMap.getInstance();
  if (collectionsMap.isMutableCollection(clazz)) {
    boolean someSupersMutable=false;
    boolean someSupersReadOnly=false;
    for (    JetType typeFromSuper : typesFromSuper) {
      ClassifierDescriptor classifierFromSuper=typeFromSuper.getConstructor().getDeclarationDescriptor();
      if (classifierFromSuper instanceof ClassDescriptor) {
        ClassDescriptor classFromSuper=(ClassDescriptor)classifierFromSuper;
        if (collectionsMap.isMutableCollection(classFromSuper)) {
          someSupersMutable=true;
        }
 else         if (collectionsMap.isReadOnlyCollection(classFromSuper)) {
          someSupersReadOnly=true;
        }
      }
    }
    if (someSupersReadOnly && !someSupersMutable) {
      return collectionsMap.convertMutableToReadOnly(clazz);
    }
  }
  return classifier;
}
