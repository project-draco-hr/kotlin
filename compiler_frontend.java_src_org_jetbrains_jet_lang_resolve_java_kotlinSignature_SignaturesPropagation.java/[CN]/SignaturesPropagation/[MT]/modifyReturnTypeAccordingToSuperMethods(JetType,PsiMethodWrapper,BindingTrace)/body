{
  Set<JetType> typesFromSuperMethods=Sets.newHashSet();
  for (  HierarchicalMethodSignature superSignature : method.getPsiMethod().getHierarchicalMethodSignature().getSuperSignatures()) {
    DeclarationDescriptor superFun=trace.get(BindingContext.DECLARATION_TO_DESCRIPTOR,superSignature.getMethod());
    if (superFun instanceof FunctionDescriptor) {
      typesFromSuperMethods.add(((FunctionDescriptor)superFun).getReturnType());
    }
  }
  return modifyReturnTypeAccordingToSuperMethods(autoType,typesFromSuperMethods,true);
}
