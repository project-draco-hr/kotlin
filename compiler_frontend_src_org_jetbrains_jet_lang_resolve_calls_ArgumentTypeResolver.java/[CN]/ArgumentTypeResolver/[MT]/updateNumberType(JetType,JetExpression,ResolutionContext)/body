{
  if (expression == null)   return;
  BindingContextUtils.updateRecordedType(numberType,expression,context.trace,false);
  if (!(expression instanceof JetConstantExpression)) {
    JetExpression deparenthesized=JetPsiUtil.deparenthesize(expression,false);
    if (deparenthesized != expression) {
      updateNumberType(numberType,deparenthesized,context);
    }
    if (deparenthesized instanceof JetBlockExpression) {
      JetElement lastStatement=JetPsiUtil.getLastStatementInABlock((JetBlockExpression)deparenthesized);
      if (lastStatement instanceof JetExpression) {
        updateNumberType(numberType,(JetExpression)lastStatement,context);
      }
    }
    return;
  }
  ConstantExpressionEvaluator.object$.evaluate(expression,context.trace,numberType);
}
