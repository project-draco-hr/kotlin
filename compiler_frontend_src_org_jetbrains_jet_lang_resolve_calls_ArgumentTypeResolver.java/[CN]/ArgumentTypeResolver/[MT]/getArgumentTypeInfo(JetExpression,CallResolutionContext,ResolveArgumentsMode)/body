{
  if (expression == null) {
    return TypeInfoForCall.create(null,context.dataFlowInfo);
  }
  if (expression instanceof JetFunctionLiteralExpression && resolveFunctionArgumentBodies == SKIP_FUNCTION_ARGUMENTS) {
    JetType type=getFunctionLiteralType((JetFunctionLiteralExpression)expression,context.scope,context.trace);
    return TypeInfoForCall.create(type,context.dataFlowInfo);
  }
  TypeInfoForCall cachedTypeInfo=getRecordedTypeInfoForCall(expression,context);
  if (cachedTypeInfo != null) {
    return cachedTypeInfo;
  }
  CallExpressionResolver callExpressionResolver=expressionTypingServices.getCallExpressionResolver();
  TypeInfoForCall result=null;
  if (expression instanceof JetCallExpression) {
    result=callExpressionResolver.getCallExpressionTypeInfoForCall((JetCallExpression)expression,ReceiverValue.NO_RECEIVER,null,context,ResolveMode.INTERNAL);
  }
  if (expression instanceof JetQualifiedExpression) {
    result=callExpressionResolver.getQualifiedExpressionExtendedTypeInfo((JetQualifiedExpression)expression,context,ResolveMode.INTERNAL);
  }
  if (result != null) {
    recordExpressionType(expression,context,result.getTypeInfo());
    recordContextForExpressionCall(expression,context.trace,result.getCallCandidateResolutionContext());
    return result;
  }
  return TypeInfoForCall.create(expressionTypingServices.getTypeInfo(context.scope,expression,context.expectedType,context.dataFlowInfo,context.trace));
}
