{
  if (expression == null) {
    return JetTypeInfo.create(null,context.dataFlowInfo);
  }
  if (expression instanceof JetFunctionLiteralExpression) {
    return getFunctionLiteralTypeInfo((JetFunctionLiteralExpression)expression,context,resolveArgumentsMode);
  }
  JetTypeInfo recordedTypeInfo=getRecordedTypeInfo(expression,context.trace.getBindingContext());
  if (recordedTypeInfo != null) {
    return recordedTypeInfo;
  }
  ResolutionContext newContext=context.replaceExpectedType(TypeUtils.UNKNOWN_EXPECTED_TYPE).replaceResolveMode(ResolveMode.NESTED_CALL);
  JetTypeInfo result=expressionTypingServices.getTypeInfo(expression,newContext);
  if (traceToCommitForCall != null) {
    traceToCommitForCall.commit();
  }
  return result;
}
