{
  if (expression == null) {
    return JetTypeInfo.create(null,dataFlowInfo);
  }
  if (expression instanceof JetFunctionLiteralExpression && resolveFunctionArgumentBodies == SKIP_FUNCTION_ARGUMENTS) {
    JetType type=getFunctionLiteralType((JetFunctionLiteralExpression)expression,scope,trace);
    return JetTypeInfo.create(type,dataFlowInfo);
  }
  return expressionTypingServices.getTypeInfo(scope,expression,expectedType,dataFlowInfo,trace);
}
