{
  PsiElement targetElement=getTargetElement(descriptor);
  if (targetElement instanceof PsiMethod) {
    PsiMethod psiMethod=(PsiMethod)targetElement;
    if (psiMethod.isConstructor()) {
      PsiClass psiClass=psiMethod.getContainingClass();
      PsiElement navigationElement=psiClass != null ? psiClass.getNavigationElement() : null;
      if (navigationElement instanceof JetClass) {
        return buildChildrenByKotlinTarget(descriptor,(JetElement)navigationElement);
      }
    }
  }
  if (targetElement instanceof KotlinLightMethod) {
    return buildChildrenByKotlinTarget(descriptor,((KotlinLightMethod)targetElement).getOrigin());
  }
  if (targetElement instanceof JetElement) {
    return buildChildrenByKotlinTarget(descriptor,(JetElement)targetElement);
  }
  if (javaTreeStructure != null) {
    CallHierarchyNodeDescriptor javaDescriptor=descriptor instanceof CallHierarchyNodeDescriptor ? (CallHierarchyNodeDescriptor)descriptor : ((KotlinCallHierarchyNodeDescriptor)descriptor).getJavaDelegate();
    return javaTreeStructure.getChildElements(javaDescriptor);
  }
  return ArrayUtil.EMPTY_OBJECT_ARRAY;
}
