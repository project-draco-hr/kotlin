{
  List<ValueParameterDescriptor> parameters=descriptor.getOriginal().getValueParameters();
  List<Type> parameterTypes=new ArrayList<Type>();
  ClassDescriptor classDescriptor=descriptor.getContainingDeclaration();
  final DeclarationDescriptor outerDescriptor=classDescriptor.getContainingDeclaration();
  if (outerDescriptor instanceof ClassDescriptor && classDescriptor.getKind() != ClassKind.OBJECT) {
    parameterTypes.add(jvmType((ClassDescriptor)outerDescriptor,OwnerKind.IMPLEMENTATION));
  }
  for (  ValueParameterDescriptor parameter : parameters) {
    final Type type=mapType(parameter.getOutType());
    parameterTypes.add(type);
    valueParameterTypes.add(type);
  }
  List<TypeParameterDescriptor> typeParameters=classDescriptor.getTypeConstructor().getParameters();
  for (int n=typeParameters.size(); n > 0; n--) {
    parameterTypes.add(TYPE_TYPEINFO);
  }
  return new Method("<init>",Type.VOID_TYPE,parameterTypes.toArray(new Type[parameterTypes.size()]));
}
