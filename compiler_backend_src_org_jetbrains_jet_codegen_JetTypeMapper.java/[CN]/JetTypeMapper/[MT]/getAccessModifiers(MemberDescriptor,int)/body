{
  DeclarationDescriptor containingDeclaration=p.getContainingDeclaration();
  if (CodegenUtil.isInterface(containingDeclaration)) {
    return ACC_PUBLIC;
  }
  if (p.getVisibility() == Visibilities.PUBLIC) {
    return ACC_PUBLIC;
  }
 else   if (p.getVisibility() == Visibilities.PROTECTED) {
    return ACC_PROTECTED;
  }
 else   if (p.getVisibility() == Visibilities.PRIVATE) {
    if (isClassObject(containingDeclaration)) {
      return defaultFlags;
    }
    if (p instanceof ConstructorDescriptor) {
      ClassKind kind=((ClassDescriptor)containingDeclaration).getKind();
      if (kind == ClassKind.OBJECT) {
        return ACC_PUBLIC;
      }
 else       if (kind == ClassKind.ENUM_ENTRY) {
        return 0;
      }
    }
    if (containingDeclaration instanceof NamespaceDescriptor) {
      return ACC_PUBLIC;
    }
    return ACC_PRIVATE;
  }
 else   if (p.getVisibility() == Visibilities.INTERNAL) {
    return ACC_PUBLIC;
  }
 else {
    if (p.getVisibility() == Visibilities.INHERITED) {
      throw new IllegalStateException("'inherited' visibility is unresolved on code generation stage");
    }
    return defaultFlags;
  }
}
