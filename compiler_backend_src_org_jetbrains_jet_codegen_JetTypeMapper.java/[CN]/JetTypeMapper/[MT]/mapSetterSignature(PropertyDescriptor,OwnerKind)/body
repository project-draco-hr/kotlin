{
  if (!descriptor.isVar()) {
    return null;
  }
  BothSignatureWriter signatureWriter=new BothSignatureWriter(BothSignatureWriter.Mode.METHOD,true);
  writeFormalTypeParameters(descriptor.getTypeParameters(),signatureWriter);
  JetType outType=descriptor.getType();
  signatureWriter.writeParametersStart();
  String name=PropertyCodegen.setterName(descriptor.getName());
  if (kind == OwnerKind.TRAIT_IMPL) {
    ClassDescriptor containingDeclaration=(ClassDescriptor)descriptor.getContainingDeclaration();
    signatureWriter.writeParameterType(JvmMethodParameterKind.THIS);
    mapType(containingDeclaration.getDefaultType(),signatureWriter,MapTypeMode.VALUE);
    signatureWriter.writeParameterTypeEnd();
  }
  if (descriptor.getReceiverParameter().exists()) {
    signatureWriter.writeParameterType(JvmMethodParameterKind.RECEIVER);
    mapType(descriptor.getReceiverParameter().getType(),signatureWriter,MapTypeMode.VALUE);
    signatureWriter.writeParameterTypeEnd();
  }
  signatureWriter.writeParameterType(JvmMethodParameterKind.VALUE);
  mapType(outType,signatureWriter,MapTypeMode.VALUE);
  signatureWriter.writeParameterTypeEnd();
  signatureWriter.writeParametersEnd();
  signatureWriter.writeVoidReturn();
  JvmMethodSignature jvmMethodSignature=signatureWriter.makeJvmMethodSignature(name);
  return new JvmPropertyAccessorSignature(jvmMethodSignature,jvmMethodSignature.getKotlinParameterType(jvmMethodSignature.getParameterCount() - 1));
}
