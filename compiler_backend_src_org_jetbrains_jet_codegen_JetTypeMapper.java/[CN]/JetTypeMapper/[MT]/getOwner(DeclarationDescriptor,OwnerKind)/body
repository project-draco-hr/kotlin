{
  String owner;
  DeclarationDescriptor containingDeclaration=descriptor.getContainingDeclaration();
  if (containingDeclaration instanceof JavaNamespaceDescriptor) {
    JavaNamespaceDescriptor javaNamespaceDescriptor=(JavaNamespaceDescriptor)containingDeclaration;
    owner=NamespaceCodegen.getJVMClassName(DescriptorUtils.getFQName(containingDeclaration),javaNamespaceDescriptor.isNamespace());
  }
 else   if (containingDeclaration instanceof NamespaceDescriptor) {
    owner=NamespaceCodegen.getJVMClassName(DescriptorUtils.getFQName(containingDeclaration),true);
  }
 else   if (containingDeclaration instanceof ClassDescriptor) {
    ClassDescriptor classDescriptor=(ClassDescriptor)containingDeclaration;
    if (kind instanceof OwnerKind.DelegateKind) {
      kind=OwnerKind.IMPLEMENTATION;
    }
 else {
      if (classDescriptor.getKind() == ClassKind.OBJECT) {
        kind=OwnerKind.IMPLEMENTATION;
      }
    }
    owner=mapType(classDescriptor.getDefaultType(),kind).getInternalName();
  }
 else {
    throw new UnsupportedOperationException("don't know how to generate owner for parent " + containingDeclaration);
  }
  return owner;
}
