{
  MapTypeMode mapTypeMode=ownerKindToMapTypeMode(kind);
  String owner;
  DeclarationDescriptor containingDeclaration=descriptor.getContainingDeclaration();
  if (containingDeclaration instanceof NamespaceDescriptor) {
    owner=jvmClassNameForNamespace((NamespaceDescriptor)containingDeclaration);
  }
 else   if (containingDeclaration instanceof ClassDescriptor) {
    ClassDescriptor classDescriptor=(ClassDescriptor)containingDeclaration;
    if (kind instanceof OwnerKind.DelegateKind) {
      mapTypeMode=MapTypeMode.IMPL;
    }
 else {
      if (classDescriptor.getKind() == ClassKind.OBJECT) {
        mapTypeMode=MapTypeMode.IMPL;
      }
    }
    Type asmType=mapType(classDescriptor.getDefaultType(),mapTypeMode);
    if (asmType.getSort() != Type.OBJECT) {
      throw new IllegalStateException();
    }
    owner=asmType.getInternalName();
  }
 else {
    throw new UnsupportedOperationException("don't know how to generate owner for parent " + containingDeclaration);
  }
  return owner;
}
