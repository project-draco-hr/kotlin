{
  if (jetType.equals(JetStandardClasses.getNothingType()) || jetType.equals(JetStandardClasses.getNullableNothingType())) {
    return TYPE_NOTHING;
  }
  if (jetType.equals(standardLibrary.getIntType())) {
    return Type.INT_TYPE;
  }
  if (jetType.equals(standardLibrary.getNullableIntType())) {
    return JL_INTEGER_TYPE;
  }
  if (jetType.equals(standardLibrary.getLongType())) {
    return Type.LONG_TYPE;
  }
  if (jetType.equals(standardLibrary.getNullableLongType())) {
    return JL_LONG_TYPE;
  }
  if (jetType.equals(standardLibrary.getShortType())) {
    return Type.SHORT_TYPE;
  }
  if (jetType.equals(standardLibrary.getNullableShortType())) {
    return JL_SHORT_TYPE;
  }
  if (jetType.equals(standardLibrary.getByteType())) {
    return Type.BYTE_TYPE;
  }
  if (jetType.equals(standardLibrary.getNullableByteType())) {
    return JL_BYTE_TYPE;
  }
  if (jetType.equals(standardLibrary.getCharType())) {
    return Type.CHAR_TYPE;
  }
  if (jetType.equals(standardLibrary.getNullableCharType())) {
    return JL_CHAR_TYPE;
  }
  if (jetType.equals(standardLibrary.getFloatType())) {
    return Type.FLOAT_TYPE;
  }
  if (jetType.equals(standardLibrary.getNullableFloatType())) {
    return JL_FLOAT_TYPE;
  }
  if (jetType.equals(standardLibrary.getDoubleType())) {
    return Type.DOUBLE_TYPE;
  }
  if (jetType.equals(standardLibrary.getNullableDoubleType())) {
    return JL_DOUBLE_TYPE;
  }
  if (jetType.equals(standardLibrary.getBooleanType())) {
    return Type.BOOLEAN_TYPE;
  }
  if (jetType.equals(standardLibrary.getNullableBooleanType())) {
    return JL_BOOLEAN_TYPE;
  }
  if (jetType.equals(standardLibrary.getByteArrayType())) {
    return ARRAY_BYTE_TYPE;
  }
  if (jetType.equals(standardLibrary.getShortArrayType())) {
    return ARRAY_SHORT_TYPE;
  }
  if (jetType.equals(standardLibrary.getIntArrayType())) {
    return ARRAY_INT_TYPE;
  }
  if (jetType.equals(standardLibrary.getLongArrayType())) {
    return ARRAY_LONG_TYPE;
  }
  if (jetType.equals(standardLibrary.getFloatArrayType())) {
    return ARRAY_FLOAT_TYPE;
  }
  if (jetType.equals(standardLibrary.getDoubleArrayType())) {
    return ARRAY_DOUBLE_TYPE;
  }
  if (jetType.equals(standardLibrary.getCharArrayType())) {
    return ARRAY_CHAR_TYPE;
  }
  if (jetType.equals(standardLibrary.getBooleanArrayType())) {
    return ARRAY_BOOL_TYPE;
  }
  if (jetType.equals(standardLibrary.getStringType()) || jetType.equals(standardLibrary.getNullableStringType())) {
    return Type.getType(String.class);
  }
  DeclarationDescriptor descriptor=jetType.getConstructor().getDeclarationDescriptor();
  if (standardLibrary.getArray().equals(descriptor)) {
    if (jetType.getArguments().size() != 1) {
      throw new UnsupportedOperationException("arrays must have one type argument");
    }
    JetType memberType=jetType.getArguments().get(0).getType();
    if (!isGenericsArray(jetType))     return Type.getType("[" + boxType(mapType(memberType,kind)).getDescriptor());
 else     return ARRAY_GENERIC_TYPE;
  }
  if (JetStandardClasses.getAny().equals(descriptor)) {
    return Type.getType(Object.class);
  }
  if (descriptor instanceof ClassDescriptor) {
    return Type.getObjectType(jvmName((ClassDescriptor)descriptor,kind));
  }
  if (descriptor instanceof TypeParameterDescriptor) {
    return mapType(((TypeParameterDescriptor)descriptor).getBoundsAsType(),kind);
  }
  throw new UnsupportedOperationException("Unknown type " + jetType);
}
