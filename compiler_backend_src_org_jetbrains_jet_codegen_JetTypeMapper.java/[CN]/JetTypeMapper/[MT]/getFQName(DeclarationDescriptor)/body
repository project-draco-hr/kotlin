{
  descriptor=descriptor.getOriginal();
  if (descriptor instanceof FunctionDescriptor) {
    return getFQName(descriptor.getContainingDeclaration());
  }
  if (descriptor.getContainingDeclaration() instanceof ModuleDescriptor || descriptor instanceof ScriptDescriptor) {
    return "";
  }
  if (descriptor instanceof ModuleDescriptor) {
    throw new IllegalStateException("missed something");
  }
  if (descriptor instanceof ClassDescriptor) {
    ClassDescriptor klass=(ClassDescriptor)descriptor;
    if (klass.getKind() == ClassKind.OBJECT) {
      if (klass.getContainingDeclaration() instanceof ClassDescriptor) {
        ClassDescriptor containingKlass=(ClassDescriptor)klass.getContainingDeclaration();
        if (containingKlass.getKind() == ClassKind.ENUM_CLASS) {
          return getFQName(containingKlass);
        }
      }
    }
 else     if (klass.getKind() == ClassKind.ENUM_ENTRY) {
      return getFQName(klass.getContainingDeclaration());
    }
  }
  DeclarationDescriptor container=descriptor.getContainingDeclaration();
  Name name=descriptor.getName();
  if (JetPsiUtil.NO_NAME_PROVIDED.equals(name)) {
    return closureAnnotator.classNameForAnonymousClass((JetElement)BindingContextUtils.descriptorToDeclaration(bindingContext,descriptor)).getInternalName();
  }
  if (name.getName().contains("/"))   return name.getName();
  if (container != null) {
    String baseName=getFQName(container);
    if (!baseName.isEmpty()) {
      return baseName + (container instanceof NamespaceDescriptor ? "/" : "$") + name.getIdentifier();
    }
  }
  return name.getIdentifier();
}
