{
  if (!isStatement)   return DataFlowUtils.illegalStatementType(expression,contextWithExpectedType,facade);
  ExpressionTypingContext context=contextWithExpectedType.replaceExpectedType(TypeUtils.NO_EXPECTED_TYPE);
  JetExpression loopRange=expression.getLoopRange();
  JetType expectedParameterType=null;
  if (loopRange != null) {
    ExpressionReceiver loopRangeReceiver=getExpressionReceiver(facade,loopRange,context.replaceScope(context.scope));
    if (loopRangeReceiver != null) {
      expectedParameterType=checkIterableConvention(loopRangeReceiver,context);
    }
  }
  WritableScope loopScope=newWritableScopeImpl(context,"Scope with for-loop index");
  JetParameter loopParameter=expression.getLoopParameter();
  if (loopParameter != null) {
    VariableDescriptor variableDescriptor=createLoopParameterDescriptor(loopParameter,expectedParameterType,context);
    loopScope.addVariableDescriptor(variableDescriptor);
  }
  JetExpression body=expression.getBody();
  if (body != null) {
    context.expressionTypingServices.getBlockReturnedTypeWithWritableScope(loopScope,Collections.singletonList(body),CoercionStrategy.NO_COERCION,context,context.trace);
  }
  return DataFlowUtils.checkType(JetStandardClasses.getUnitType(),expression,contextWithExpectedType,context.dataFlowInfo);
}
