{
  OverloadResolutionResults<FunctionDescriptor> nextResolutionResults=resolveFakeCall(new TransientReceiver(iteratorType),context,Name.identifier(name));
  if (nextResolutionResults.isAmbiguity()) {
    context.trace.report(ambiguity.on(loopRangeExpression));
  }
 else   if (nextResolutionResults.isNothing()) {
    context.trace.report(missing.on(loopRangeExpression));
  }
 else {
    ResolvedCall<FunctionDescriptor> resolvedCall=nextResolutionResults.getResultingCall();
    context.trace.record(resolvedCallKey,loopRangeExpression,resolvedCall);
    return resolvedCall.getResultingDescriptor().getReturnType();
  }
  return null;
}
