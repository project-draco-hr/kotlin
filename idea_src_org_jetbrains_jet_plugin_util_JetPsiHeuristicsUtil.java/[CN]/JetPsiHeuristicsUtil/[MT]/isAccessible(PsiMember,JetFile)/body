{
  if (member instanceof KotlinLightClassForPackage) {
    return false;
  }
  if (member instanceof KotlinLightClassForExplicitDeclaration) {
    KotlinLightClassForExplicitDeclaration lightClass=(KotlinLightClassForExplicitDeclaration)member;
    JetClassOrObject classOrObject=lightClass.getOrigin();
    if (isTopLevelDeclaration(classOrObject) && classOrObject.hasModifier(JetTokens.PRIVATE_KEYWORD)) {
      JetFile targetFile=(JetFile)classOrObject.getContainingFile();
      FqName targetPackage=JetPsiUtil.getFQName(targetFile);
      FqName fromPackage=JetPsiUtil.getFQName(fromFile);
      return QualifiedNamesUtil.isSubpackageOf(fromPackage,targetPackage);
    }
  }
  return member.hasModifierProperty(PsiModifier.PUBLIC) || member.hasModifierProperty(PsiModifier.PROTECTED);
}
