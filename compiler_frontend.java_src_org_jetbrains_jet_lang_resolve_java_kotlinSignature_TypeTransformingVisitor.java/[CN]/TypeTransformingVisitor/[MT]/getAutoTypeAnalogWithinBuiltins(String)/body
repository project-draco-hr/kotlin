{
  Type javaAnalog=KotlinToJavaTypesMap.getInstance().getJavaAnalog(originalType);
  if (javaAnalog == null || javaAnalog.getSort() != Type.OBJECT)   return null;
  Collection<ClassDescriptor> descriptors=JavaToKotlinClassMap.getInstance().mapPlatformClass(JvmClassName.byInternalName(javaAnalog.getInternalName()).getFqName());
  for (  ClassDescriptor descriptor : descriptors) {
    String fqName=DescriptorUtils.getFQName(descriptor).asString();
    if (isSameName(qualifiedName,fqName)) {
      return descriptor;
    }
  }
  return null;
}
