{
  if (editor.getSelectionModel().hasSelection()) {
    int selectionStart=editor.getSelectionModel().getSelectionStart();
    int selectionEnd=editor.getSelectionModel().getSelectionEnd();
    PsiElement firstElement=file.findElementAt(selectionStart);
    PsiElement lastElement=file.findElementAt(selectionEnd - 1);
    if (PsiTreeUtil.getParentOfType(firstElement,KtLiteralStringTemplateEntry.class,KtEscapeStringTemplateEntry.class) == null && PsiTreeUtil.getParentOfType(lastElement,KtLiteralStringTemplateEntry.class,KtEscapeStringTemplateEntry.class) == null) {
      firstElement=PsiUtilsKt.getNextSiblingIgnoringWhitespaceAndComments(firstElement,true);
      lastElement=PsiUtilsKt.getPrevSiblingIgnoringWhitespaceAndComments(lastElement,true);
      selectionStart=firstElement.getTextRange().getStartOffset();
      selectionEnd=lastElement.getTextRange().getEndOffset();
    }
    for (    CodeInsightUtils.ElementKind elementKind : elementKinds) {
      PsiElement element=findElement(file,selectionStart,selectionEnd,failOnEmptySuggestion,elementKind);
      if (element != null) {
        callback.run(element);
        return;
      }
    }
    callback.run(null);
  }
 else {
    int offset=editor.getCaretModel().getOffset();
    smartSelectElement(editor,file,offset,failOnEmptySuggestion,elementKinds,callback);
  }
}
