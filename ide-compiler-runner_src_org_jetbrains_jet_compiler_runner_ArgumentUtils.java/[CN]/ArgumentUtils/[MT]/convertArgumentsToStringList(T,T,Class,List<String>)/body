{
  Class superClazz=clazz.getSuperclass();
  if (superClazz != null) {
    convertArgumentsToStringList(arguments,defaultArguments,superClazz,result);
  }
  for (  Field field : clazz.getDeclaredFields()) {
    Argument argument=field.getAnnotation(Argument.class);
    if (argument == null)     continue;
    Object value;
    Object defaultValue;
    try {
      value=field.get(arguments);
      defaultValue=field.get(defaultArguments);
    }
 catch (    IllegalAccessException ignored) {
      continue;
    }
    if (ComparatorUtil.equalsNullable(value,defaultValue))     continue;
    String name=getAlias(argument);
    if (name == null) {
      name=getName(argument,field);
    }
    Class<?> fieldType=field.getType();
    if (fieldType.isArray()) {
      Object[] values=(Object[])value;
      if (values.length == 0)       continue;
      value=StringUtil.join(values,Function.TO_STRING,argument.delimiter());
    }
    result.add(argument.prefix() + name);
    if (fieldType == boolean.class || fieldType == Boolean.class)     continue;
    result.add(value.toString());
  }
}
