{
  if (expression instanceof JetFunctionLiteralExpression) {
    return genClosure(((JetFunctionLiteralExpression)expression).getFunctionLiteral(),samInterface);
  }
 else {
    Type asmType=state.getSamWrapperClasses().getSamWrapperClass(samInterface,(JetFile)expression.getContainingFile());
    v.anew(asmType);
    v.dup();
    @SuppressWarnings("ConstantConditions") Type functionType=typeMapper.mapType(samInterface.getFunctionTypeForSamInterface());
    expression.accept(visitor,StackValue.none()).put(functionType,v);
    Label ifNonNull=new Label();
    Label afterAll=new Label();
    v.dup();
    v.ifnonnull(ifNonNull);
    v.pop();
    v.pop2();
    v.aconst(null);
    v.goTo(afterAll);
    v.mark(ifNonNull);
    v.invokespecial(asmType.getInternalName(),"<init>",Type.getMethodDescriptor(Type.VOID_TYPE,functionType));
    v.mark(afterAll);
    return StackValue.onStack(asmType);
  }
}
