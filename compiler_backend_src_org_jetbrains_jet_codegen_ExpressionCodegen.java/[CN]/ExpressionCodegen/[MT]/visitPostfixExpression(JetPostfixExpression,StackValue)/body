{
  DeclarationDescriptor op=bindingContext.get(BindingContext.REFERENCE_TARGET,expression.getOperationSign());
  if (op instanceof FunctionDescriptor) {
    final Type asmType=expressionType(expression);
    DeclarationDescriptor cls=op.getContainingDeclaration();
    if (isNumberPrimitive(cls) && (op.getName().equals("inc") || op.getName().equals("dec"))) {
      receiver.put(receiver.type,v);
      JetExpression operand=expression.getBaseExpression();
      if (operand instanceof JetReferenceExpression) {
        final int index=indexOfLocal((JetReferenceExpression)operand);
        if (index >= 0 && isIntPrimitive(asmType)) {
          int increment=op.getName().equals("inc") ? 1 : -1;
          return StackValue.postIncrement(index,increment);
        }
      }
      gen(operand,asmType);
      generateIncrement(op,asmType,operand,receiver);
      return StackValue.onStack(asmType);
    }
  }
  throw new UnsupportedOperationException("Don't know how to generate this prefix expression");
}
