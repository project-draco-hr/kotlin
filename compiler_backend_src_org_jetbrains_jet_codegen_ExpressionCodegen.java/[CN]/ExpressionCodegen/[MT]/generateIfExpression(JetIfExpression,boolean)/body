{
  Type asmType=isStatement ? Type.VOID_TYPE : expressionType(expression);
  StackValue condition=gen(expression.getCondition());
  JetExpression thenExpression=expression.getThen();
  JetExpression elseExpression=expression.getElse();
  if (isEmptyExpression(thenExpression)) {
    if (isEmptyExpression(elseExpression)) {
      condition.put(asmType,v);
      return StackValue.onStack(asmType);
    }
    return generateSingleBranchIf(condition,expression,elseExpression,false,isStatement);
  }
 else {
    if (isEmptyExpression(elseExpression)) {
      return generateSingleBranchIf(condition,expression,thenExpression,true,isStatement);
    }
  }
  Label elseLabel=new Label();
  condition.condJump(elseLabel,true,v);
  Label end=new Label();
  gen(thenExpression,asmType);
  v.goTo(end);
  v.mark(elseLabel);
  gen(elseExpression,asmType);
  markLineNumber(expression,isStatement);
  v.mark(end);
  return StackValue.onStack(asmType);
}
