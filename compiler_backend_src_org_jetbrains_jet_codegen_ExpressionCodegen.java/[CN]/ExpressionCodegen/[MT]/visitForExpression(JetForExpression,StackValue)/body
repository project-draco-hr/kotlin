{
  final JetExpression loopRange=expression.getLoopRange();
  final JetType expressionType=bindingContext.get(BindingContext.EXPRESSION_TYPE,loopRange);
  Type loopRangeType=typeMapper.mapType(expressionType);
  if (loopRangeType.getSort() == Type.ARRAY) {
    new ForInArrayLoopGenerator(expression,loopRangeType).invoke();
    return StackValue.none();
  }
 else {
    final DeclarationDescriptor descriptor=expressionType.getConstructor().getDeclarationDescriptor();
    if (isClass(descriptor,"IntRange")) {
      new ForInRangeLoopGenerator(expression,loopRangeType).invoke();
      return StackValue.none();
    }
    generateForInIterable(expression,loopRangeType);
    return StackValue.none();
  }
}
