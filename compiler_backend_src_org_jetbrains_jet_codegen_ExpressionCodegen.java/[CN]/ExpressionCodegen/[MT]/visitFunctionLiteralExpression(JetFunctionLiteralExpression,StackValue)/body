{
  if (bindingContext.get(BindingContext.BLOCK,expression)) {
    return generateBlock(expression.getFunctionLiteral().getBodyExpression().getStatements());
  }
 else {
    ClosureCodegen closureCodegen=new ClosureCodegen(state,this,context);
    final GeneratedAnonymousClassDescriptor closure=closureCodegen.gen(expression);
    if (closureCodegen.isConst()) {
      v.invokestatic(closure.getClassname(),"$getInstance","()L" + closure.getClassname() + ";");
    }
 else {
      v.anew(Type.getObjectType(closure.getClassname()));
      v.dup();
      final Method cons=closure.getConstructor();
      if (closure.isCaptureThis()) {
        v.load(0,JetTypeMapper.TYPE_OBJECT);
      }
      if (closure.isCaptureReceiver() != null) {
        v.load(context.getContextDescriptor().getContainingDeclaration() instanceof NamespaceDescriptor ? 0 : 1,closure.isCaptureReceiver());
      }
      for (int i=0; i < closure.getArgs().size(); i++) {
        StackValue arg=closure.getArgs().get(i);
        arg.put(cons.getArgumentTypes()[i],v);
      }
      v.invokespecial(closure.getClassname(),"<init>",cons.getDescriptor());
    }
    return StackValue.onStack(Type.getObjectType(closure.getClassname()));
  }
}
