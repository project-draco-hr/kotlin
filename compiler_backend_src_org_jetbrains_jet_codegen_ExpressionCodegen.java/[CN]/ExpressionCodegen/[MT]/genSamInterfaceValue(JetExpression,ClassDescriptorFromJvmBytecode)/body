{
  if (argumentExpression instanceof JetFunctionLiteralExpression) {
    return genClosure(((JetFunctionLiteralExpression)argumentExpression).getFunctionLiteral(),samInterface);
  }
 else {
    JvmClassName className=state.getSamWrapperClasses().getSamWrapperClass(samInterface,(JetFile)argumentExpression.getContainingFile());
    v.anew(className.getAsmType());
    v.dup();
    JetType functionType=samInterface.getFunctionTypeForSamInterface();
    gen(argumentExpression,typeMapper.mapType(functionType));
    v.invokespecial(className.getInternalName(),"<init>",Type.getMethodDescriptor(Type.VOID_TYPE,typeMapper.mapType(functionType)));
    return StackValue.onStack(className.getAsmType());
  }
}
