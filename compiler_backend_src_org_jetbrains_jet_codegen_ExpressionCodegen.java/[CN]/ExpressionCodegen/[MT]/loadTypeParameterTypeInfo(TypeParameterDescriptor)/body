{
  final StackValue value=typeParameterExpressions.get(typeParameterDescriptor);
  if (value != null) {
    value.put(JetTypeMapper.TYPE_TYPEINFO,v);
    return;
  }
  DeclarationDescriptor containingDeclaration=typeParameterDescriptor.getContainingDeclaration();
  if (context.getContextClass() instanceof ClassDescriptor) {
    ClassDescriptor descriptor=(ClassDescriptor)context.getContextClass();
    JetType defaultType=((ClassDescriptor)containingDeclaration).getDefaultType();
    Type ownerType=typeMapper.mapType(defaultType);
    ownerType=JetTypeMapper.boxType(ownerType);
    if (containingDeclaration == context.getContextClass()) {
      if (!CodegenUtil.isInterface(descriptor)) {
        if (CodegenUtil.hasTypeInfoField(defaultType)) {
          v.load(0,JetTypeMapper.TYPE_OBJECT);
          v.getfield(ownerType.getInternalName(),"$typeInfo","Ljet/typeinfo/TypeInfo;");
        }
 else {
          v.getstatic(ownerType.getInternalName(),"$typeInfo","Ljet/typeinfo/TypeInfo;");
        }
      }
 else {
        v.load(0,JetTypeMapper.TYPE_OBJECT);
        v.invokeinterface("jet/JetObject","getTypeInfo","()Ljet/typeinfo/TypeInfo;");
      }
    }
 else {
      v.load(0,JetTypeMapper.TYPE_OBJECT);
      v.invokeinterface("jet/JetObject","getTypeInfo","()Ljet/typeinfo/TypeInfo;");
      while (descriptor != containingDeclaration) {
        descriptor=CodegenUtil.getOuterClassDescriptor(descriptor);
        v.invokevirtual("jet/typeinfo/TypeInfo","getOuterTypeInfo","()Ljet/typeinfo/TypeInfo;");
      }
    }
    v.aconst(ownerType);
    v.iconst(typeParameterDescriptor.getIndex());
    v.invokevirtual("jet/typeinfo/TypeInfo","getArgumentType","(Ljava/lang/Class;I)Ljet/typeinfo/TypeInfo;");
    return;
  }
  throw new UnsupportedOperationException("don't know what this type parameter resolves to");
}
