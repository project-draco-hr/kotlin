{
  StackValue conditionValue;
  if (condition instanceof JetWhenConditionInRange) {
    JetWhenConditionInRange conditionInRange=(JetWhenConditionInRange)condition;
    JetExpression rangeExpression=conditionInRange.getRangeExpression();
    if (isIntRangeExpr(rangeExpression)) {
      getInIntRange(new StackValue.Local(subjectLocal,subjectType),(JetBinaryExpression)rangeExpression,conditionInRange.getOperationReference().getReferencedNameElementType() == JetTokens.NOT_IN);
    }
 else {
      FunctionDescriptor op=(FunctionDescriptor)bindingContext.get(BindingContext.REFERENCE_TARGET,conditionInRange.getOperationReference());
      genToJVMStack(rangeExpression);
      new StackValue.Local(subjectLocal,subjectType).put(TYPE_OBJECT,v);
      invokeFunctionNoParams(op,Type.BOOLEAN_TYPE,v);
    }
    return StackValue.onStack(Type.BOOLEAN_TYPE);
  }
 else   if (condition instanceof JetWhenConditionIsPattern) {
    JetWhenConditionIsPattern patternCondition=(JetWhenConditionIsPattern)condition;
    JetPattern pattern=patternCondition.getPattern();
    conditionValue=generatePatternMatch(pattern,patternCondition.isNegated(),StackValue.local(subjectLocal,subjectType),nextEntry);
  }
 else {
    throw new UnsupportedOperationException("unsupported kind of when condition");
  }
  return conditionValue;
}
