{
  JetType arrayType=bindingContext.get(BindingContext.EXPRESSION_TYPE,expression);
  List<? extends ValueArgument> args=expression.getValueArguments();
  if (args.size() != 1) {
    throw new CompilationException("array constructor requires one value argument");
  }
  gen(args.get(0).getArgumentExpression(),Type.INT_TYPE);
  JetType elementType=typeMapper.getGenericsElementType(arrayType);
  if (elementType != null) {
    generateTypeInfo(elementType);
    v.invokestatic("jet/typeinfo/TypeInfo","newArray","(ILjet/typeinfo/TypeInfo;)[Ljava/lang/Object;");
    v.checkcast(type);
  }
 else {
    v.newarray(CodegenUtil.arrayElementType(type));
  }
}
