{
  ClosureCodegen closureCodegen=new ClosureCodegen(state,this,context);
  final GeneratedAnonymousClassDescriptor closure=closureCodegen.gen(expression);
  if (closureCodegen.isConst()) {
    v.invokestatic(closure.getClassname().getInternalName(),"$getInstance","()" + closure.getClassname().getDescriptor());
  }
 else {
    v.anew(closure.getClassname().getAsmType());
    v.dup();
    final Method cons=closure.getConstructor();
    int k=0;
    if (closure.isCaptureThis()) {
      k++;
      v.load(0,TYPE_OBJECT);
    }
    if (closure.isCaptureReceiver() != null) {
      k++;
      v.load(context.getContextDescriptor().getContainingDeclaration() instanceof NamespaceDescriptor ? 0 : 1,closure.isCaptureReceiver());
    }
    for (int i=0; i < closure.getArgs().size(); i++) {
      StackValue arg=closure.getArgs().get(i);
      arg.put(cons.getArgumentTypes()[i + k],v);
    }
    v.invokespecial(closure.getClassname().getInternalName(),"<init>",cons.getDescriptor());
  }
  return StackValue.onStack(closure.getClassname().getAsmType());
}
