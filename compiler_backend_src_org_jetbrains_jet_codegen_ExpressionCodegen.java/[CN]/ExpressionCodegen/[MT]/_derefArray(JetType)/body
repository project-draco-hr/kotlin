{
  if (state.getStandardLibrary().getArray().equals(type.getConstructor().getDeclarationDescriptor())) {
    JetType elementType=type.getArguments().get(0).getType();
    JetStandardLibrary standardLibrary=state.getStandardLibrary();
    if (elementType.equals(standardLibrary.getIntType())) {
      v.getfield("jet/arrays/JetIntArray","array","[I");
    }
 else     if (elementType.equals(standardLibrary.getLongType())) {
      v.getfield("jet/arrays/JetLongArray","array","[J");
    }
 else     if (elementType.equals(standardLibrary.getShortType())) {
      v.getfield("jet/arrays/JetShortArray","array","[S");
    }
 else     if (elementType.equals(standardLibrary.getByteType())) {
      v.getfield("jet/arrays/JetByteArray","array","[B");
    }
 else     if (elementType.equals(standardLibrary.getCharType())) {
      v.getfield("jet/arrays/JetCharArray","array","[C");
    }
 else     if (elementType.equals(standardLibrary.getFloatType())) {
      v.getfield("jet/arrays/JetFloatArray","array","[F");
    }
 else     if (elementType.equals(standardLibrary.getDoubleType())) {
      v.getfield("jet/arrays/JetDoubleArray","array","[D");
    }
 else     if (elementType.equals(standardLibrary.getBooleanType())) {
      v.getfield("jet/arrays/JetBooleanArray","array","[Z");
    }
 else {
      if (typeMapper.isGenericsArray(type)) {
        v.visitTypeInsn(Opcodes.CHECKCAST,"jet/arrays/JetArray");
      }
 else {
        v.getfield("jet/arrays/JetGenericArray","array","[Ljava/lang/Object;");
        v.visitTypeInsn(Opcodes.CHECKCAST,"[" + typeMapper.mapType(elementType).getDescriptor());
      }
    }
  }
}
