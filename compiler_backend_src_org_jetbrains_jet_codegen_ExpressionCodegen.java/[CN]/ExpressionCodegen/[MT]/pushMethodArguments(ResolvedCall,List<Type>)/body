{
  @SuppressWarnings("unchecked") List<ResolvedValueArgument> valueArguments=resolvedCall.getValueArgumentsByIndex();
  CallableDescriptor fd=resolvedCall.getResultingDescriptor();
  if (fd.getValueParameters().size() != valueArguments.size()) {
    throw new IllegalStateException();
  }
  int index=0;
  int mask=0;
  for (  ValueParameterDescriptor valueParameterDescriptor : fd.getValueParameters()) {
    ResolvedValueArgument resolvedValueArgument=valueArguments.get(valueParameterDescriptor.getIndex());
    if (resolvedValueArgument instanceof ExpressionValueArgument) {
      ExpressionValueArgument valueArgument=(ExpressionValueArgument)resolvedValueArgument;
      gen(valueArgument.getValueArgument().getArgumentExpression(),valueParameterTypes.get(index));
    }
 else     if (resolvedValueArgument instanceof DefaultValueArgument) {
      Type type=valueParameterTypes.get(index);
      if (type.getSort() == Type.OBJECT || type.getSort() == Type.ARRAY) {
        v.aconst(null);
      }
 else       if (type.getSort() == Type.FLOAT) {
        v.aconst(0f);
      }
 else       if (type.getSort() == Type.DOUBLE) {
        v.aconst(0d);
      }
 else       if (type.getSort() == Type.LONG) {
        v.aconst(0l);
      }
 else {
        v.iconst(0);
      }
      mask|=(1 << index);
    }
 else     if (resolvedValueArgument instanceof VarargValueArgument) {
      VarargValueArgument valueArgument=(VarargValueArgument)resolvedValueArgument;
      genVarargs(valueParameterDescriptor,valueArgument);
    }
 else {
      throw new UnsupportedOperationException();
    }
    index++;
  }
  return mask;
}
