{
  ResolvedCall<?> resolvedCall=getResolvedCallWithAssert(expression,bindingContext);
  FunctionDescriptor descriptor=(FunctionDescriptor)resolvedCall.getResultingDescriptor();
  JetExpression left=expression.getLeft();
  JetExpression right=expression.getRight();
  Callable callable=resolveToCallable(descriptor,false);
  Type type;
  StackValue leftValue;
  StackValue rightValue;
  if (callable instanceof IntrinsicMethod) {
    type=comparisonOperandType(expressionType(left),expressionType(right));
    leftValue=genLazy(left,type);
    rightValue=genLazy(right,type);
  }
 else {
    type=Type.INT_TYPE;
    leftValue=StackValue.coercion(invokeFunction(resolvedCall,receiver),type);
    rightValue=StackValue.constant(0,type);
  }
  return StackValue.cmp(expression.getOperationToken(),type,leftValue,rightValue);
}
