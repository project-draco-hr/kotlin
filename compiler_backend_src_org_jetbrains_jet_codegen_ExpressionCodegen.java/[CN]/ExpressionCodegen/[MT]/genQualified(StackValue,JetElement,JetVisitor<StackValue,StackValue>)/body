{
  if (tempVariables.containsKey(selector)) {
    throw new IllegalStateException("Inconsistent state: expression saved to a temporary variable is a selector");
  }
  if (!(selector instanceof JetBlockExpression)) {
    markLineNumber(selector);
  }
  try {
    if (selector instanceof JetExpression) {
      JetExpression expression=(JetExpression)selector;
      CompileTimeConstant<?> constant=bindingContext.get(BindingContext.COMPILE_TIME_VALUE,expression);
      if (constant != null) {
        return StackValue.constant(constant.getValue(),expressionType(expression));
      }
      JavaClassDescriptor samInterface=bindingContext.get(CodegenBinding.SAM_VALUE,expression);
      if (samInterface != null) {
        return genSamInterfaceValue(expression,samInterface,visitor);
      }
    }
    return selector.accept(visitor,receiver);
  }
 catch (  ProcessCanceledException e) {
    throw e;
  }
catch (  CompilationException e) {
    throw e;
  }
catch (  Throwable error) {
    String message=error.getMessage();
    throw new CompilationException(message != null ? message : "null",error,selector);
  }
}
