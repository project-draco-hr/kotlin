{
  JetExpression expr=expression.getLeft();
  StackValue leftValue=gen(expr);
  if (isIntRangeExpr(expression.getRight())) {
    JetBinaryExpression rangeExpression=(JetBinaryExpression)expression.getRight();
    boolean inverted=expression.getOperationReference().getReferencedNameElementType() == JetTokens.NOT_IN;
    getInIntRange(leftValue,rangeExpression,inverted);
  }
 else {
    leftValue.put(JetTypeMapper.TYPE_OBJECT,v);
    genToJVMStack(expression.getRight());
    v.swap();
    FunctionDescriptor op=(FunctionDescriptor)bindingContext.get(BindingContext.REFERENCE_TARGET,expression.getOperationReference());
    invokeFunctionNoParams(op,Type.BOOLEAN_TYPE,v);
  }
  return StackValue.onStack(Type.BOOLEAN_TYPE);
}
