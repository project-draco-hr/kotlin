{
  if (expression instanceof JetFunctionLiteralExpression) {
    return genClosure(((JetFunctionLiteralExpression)expression).getFunctionLiteral(),samInterface);
  }
 else {
    JvmClassName className=state.getSamWrapperClasses().getSamWrapperClass(samInterface,(JetFile)expression.getContainingFile());
    v.anew(className.getAsmType());
    v.dup();
    Type functionType=typeMapper.mapType(samInterface.getFunctionTypeForSamInterface());
    expression.accept(visitor,StackValue.none()).put(functionType,v);
    v.invokespecial(className.getInternalName(),"<init>",Type.getMethodDescriptor(Type.VOID_TYPE,functionType));
    return StackValue.onStack(className.getAsmType());
  }
}
