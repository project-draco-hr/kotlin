{
  CodegenContext cur=context;
  PsiElement psiElement=BindingContextUtils.classDescriptorToDeclaration(bindingContext,calleeContainingClass);
  boolean isObject=psiElement instanceof JetClassOrObject && CodegenUtil.isNonLiteralObject((JetClassOrObject)psiElement);
  cur=context;
  StackValue result=StackValue.local(0,TYPE_OBJECT);
  while (cur != null) {
    if (cur instanceof CodegenContexts.MethodContext && !(cur instanceof CodegenContexts.ConstructorContext))     cur=cur.getParentContext();
    if (DescriptorUtils.isSubclass(cur.getThisDescriptor(),calleeContainingClass)) {
      Type type=asmType(calleeContainingClass.getDefaultType());
      if (!isObject || (cur.getThisDescriptor() == calleeContainingClass)) {
        result.put(TYPE_OBJECT,v);
        return castToRequiredTypeOfInterfaceIfNeeded(StackValue.onStack(type),cur.getThisDescriptor(),calleeContainingClass);
      }
 else {
        v.getstatic(type.getInternalName(),"$instance",type.getDescriptor());
      }
    }
    result=cur.getOuterExpression(result);
    if (cur instanceof CodegenContexts.ConstructorContext) {
      cur=cur.getParentContext();
    }
    cur=cur.getParentContext();
  }
  throw new UnsupportedOperationException();
}
