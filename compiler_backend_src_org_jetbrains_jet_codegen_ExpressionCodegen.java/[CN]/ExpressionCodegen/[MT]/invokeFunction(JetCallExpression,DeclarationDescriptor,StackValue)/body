{
  boolean superCall=false;
  if (expression.getParent() instanceof JetQualifiedExpression) {
    final JetExpression receiverExpression=((JetQualifiedExpression)expression.getParent()).getReceiverExpression();
    if (receiverExpression instanceof JetSuperExpression) {
      superCall=true;
      JetSuperExpression superExpression=(JetSuperExpression)receiverExpression;
      PsiElement enclosingElement=bindingContext.get(BindingContext.LABEL_TARGET,superExpression.getTargetLabel());
      ClassDescriptor enclosed=(ClassDescriptor)bindingContext.get(BindingContext.DECLARATION_TO_DESCRIPTOR,enclosingElement);
      if (!CodegenUtil.isInterface(fd.getContainingDeclaration())) {
        if (enclosed != null && enclosed != context.getThisDescriptor()) {
          CodegenContext c=context;
          while (c.getContextDescriptor() != enclosed) {
            c=c.getParentContext();
          }
          fd=c.getAccessor(fd);
          superCall=false;
        }
      }
    }
  }
  Callable callableMethod=resolveToCallable(fd,superCall);
  return invokeCallable(fd,callableMethod,expression,receiver);
}
