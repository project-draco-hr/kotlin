{
  v.load(loopParameterVar,asmElementType);
  v.load(incrementVar,asmElementType);
  Label negativeIncrement=new Label();
  Label afterIf=new Label();
  int sort=asmElementType.getSort();
switch (sort) {
case Type.INT:
case Type.CHAR:
case Type.BYTE:
case Type.SHORT:
    v.ifle(negativeIncrement);
  v.load(endVar,asmElementType);
v.ificmpgt(loopExit);
v.goTo(afterIf);
v.visitLabel(negativeIncrement);
v.load(endVar,asmElementType);
v.ificmplt(loopExit);
v.visitLabel(afterIf);
break;
case Type.LONG:
v.lconst(0L);
v.lcmp();
v.ifle(negativeIncrement);
v.load(endVar,asmElementType);
v.lcmp();
v.ifgt(loopExit);
v.goTo(afterIf);
v.visitLabel(negativeIncrement);
v.load(endVar,asmElementType);
v.lcmp();
v.iflt(loopExit);
v.visitLabel(afterIf);
break;
case Type.DOUBLE:
case Type.FLOAT:
if (sort == Type.DOUBLE) {
v.dconst(0.0);
}
 else {
v.fconst(0.0f);
}
v.cmpl(incrementType);
v.ifle(negativeIncrement);
v.load(endVar,asmElementType);
v.cmpg(asmElementType);
v.ifgt(loopExit);
v.goTo(afterIf);
v.visitLabel(negativeIncrement);
v.load(endVar,asmElementType);
v.cmpl(asmElementType);
v.iflt(loopExit);
v.visitLabel(afterIf);
break;
default :
throw new IllegalStateException("Unexpected range element type: " + asmElementType);
}
}
