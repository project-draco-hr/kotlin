{
  String text=textNode.getNodeValue();
  for (int j=text.length() - 1; j > 0; j--) {
    char c=text.charAt(j);
    if (!Character.isWhitespace(c)) {
      if (c == 'x' && text.charAt(j - 1) == 'p') {
        text=text.trim();
        if (text.matches("\\d+px") && text.charAt(0) != '0' && !text.equals("1px")) {
          if (context.isEnabled(PX_ISSUE)) {
            context.report(PX_ISSUE,item,context.getLocation(textNode),"Avoid using `\"px\"` as units; use `\"dp\"` instead");
          }
        }
      }
 else       if (c == 'm' && text.charAt(j - 1) == 'm' || c == 'n' && text.charAt(j - 1) == 'i') {
        text=text.trim();
        String unit=text.substring(text.length() - 2);
        if (text.matches("\\d+" + unit) && text.charAt(0) != '0') {
          if (context.isEnabled(IN_MM_ISSUE)) {
            context.report(IN_MM_ISSUE,item,context.getLocation(textNode),String.format("Avoid using \"`%1$s`\" as units " + "(it does not work accurately on all devices); " + "use \"`dp`\" instead",unit));
          }
        }
      }
 else       if (c == 'p' && (text.charAt(j - 1) == 'd' || text.charAt(j - 1) == 'i')) {
        text=text.trim();
        String name=item.getAttribute(ATTR_NAME);
        if ((name.equals(ATTR_TEXT_SIZE) || name.equals("android:textSize")) && text.matches("\\d+di?p")) {
          if (context.isEnabled(DP_ISSUE)) {
            context.report(DP_ISSUE,item,context.getLocation(textNode),"Should use \"`sp`\" instead of \"`dp`\" for text sizes");
          }
        }
      }
 else       if (c == 'p' && text.charAt(j - 1) == 's') {
        String name=item.getAttribute(ATTR_NAME);
        if (ATTR_TEXT_SIZE.equals(name) || ATTR_LAYOUT_HEIGHT.equals(name)) {
          text=text.trim();
          String unit=text.substring(text.length() - 2);
          if (text.matches("\\d+" + unit)) {
            if (context.isEnabled(SMALL_SP_ISSUE)) {
              int size=getSize(text);
              if (size > 0 && size < 12) {
                context.report(SMALL_SP_ISSUE,item,context.getLocation(textNode),String.format("Avoid using sizes smaller than `12sp`: `%1$s`",text));
              }
            }
          }
        }
      }
      break;
    }
  }
}
