{
  StringBuilder sb=new StringBuilder();
  sb.append("class ");
  serialize(klass,sb);
  sb.append(" {\n");
  if (false) {
    List<TypeProjection> typeArguments=new ArrayList<TypeProjection>();
    for (    TypeParameterDescriptor param : klass.getTypeConstructor().getParameters()) {
      typeArguments.add(new TypeProjection(Variance.INVARIANT,param.getDefaultType()));
    }
    JetScope memberScope=klass.getMemberScope(typeArguments);
    for (    DeclarationDescriptor member : memberScope.getAllDescriptors()) {
      serialize(member,sb);
      sb.append("\n");
    }
  }
  sb.append("}\n");
  return sb.toString();
}
