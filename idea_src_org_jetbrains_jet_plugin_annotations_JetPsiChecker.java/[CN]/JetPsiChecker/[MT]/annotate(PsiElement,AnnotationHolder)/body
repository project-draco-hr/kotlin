{
  if (element instanceof JetFile) {
    JetFile file=(JetFile)element;
    try {
      final BindingContext bindingContext=AnalyzerFacade.analyzeFileWithCache(file);
      if (errorReportingEnabled) {
        Collection<Diagnostic> diagnostics=bindingContext.getDiagnostics();
        Set<DeclarationDescriptor> redeclarations=new HashSet<DeclarationDescriptor>();
        for (        Diagnostic diagnostic : diagnostics) {
          if (diagnostic.getSeverity() == Severity.ERROR) {
            if (diagnostic instanceof Errors.UnresolvedReferenceDiagnostic) {
              Errors.UnresolvedReferenceDiagnostic unresolvedReferenceDiagnostic=(Errors.UnresolvedReferenceDiagnostic)diagnostic;
              JetReferenceExpression referenceExpression=unresolvedReferenceDiagnostic.getPsiElement();
              PsiReference reference=referenceExpression.getReference();
              if (reference instanceof MultiRangeReference) {
                MultiRangeReference mrr=(MultiRangeReference)reference;
                for (                TextRange range : mrr.getRanges()) {
                  holder.createErrorAnnotation(range.shiftRight(referenceExpression.getTextOffset()),"Unresolved").setHighlightType(ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);
                }
              }
 else {
                holder.createErrorAnnotation(referenceExpression,"Unresolved").setHighlightType(ProblemHighlightType.LIKE_UNKNOWN_SYMBOL);
              }
            }
 else             if (diagnostic instanceof RedeclarationDiagnostic) {
              RedeclarationDiagnostic redeclarationDiagnostic=(RedeclarationDiagnostic)diagnostic;
              markRedeclaration(redeclarations,redeclarationDiagnostic.getA(),bindingContext,holder);
              markRedeclaration(redeclarations,redeclarationDiagnostic.getB(),bindingContext,holder);
            }
 else {
              holder.createErrorAnnotation(diagnostic.getFactory().getMarkerPosition(diagnostic),diagnostic.getMessage());
            }
          }
 else           if (diagnostic.getSeverity() == Severity.WARNING) {
            holder.createWarningAnnotation(diagnostic.getFactory().getMarkerPosition(diagnostic),diagnostic.getMessage());
          }
        }
      }
      highlightBackingFields(holder,file,bindingContext);
      file.acceptChildren(new JetVisitorVoid(){
        @Override public void visitExpression(        JetExpression expression){
          JetType autoCast=bindingContext.get(BindingContext.AUTOCAST,expression);
          if (autoCast != null) {
            holder.createInfoAnnotation(expression,"Automatically cast to " + autoCast).setTextAttributes(JetHighlighter.JET_AUTO_CAST_EXPRESSION);
          }
          expression.acceptChildren(this);
        }
        @Override public void visitJetElement(        JetElement element){
          element.acceptChildren(this);
        }
      }
);
    }
 catch (    ProcessCanceledException e) {
      throw e;
    }
catch (    Throwable e) {
      holder.createErrorAnnotation(element,e.getClass().getCanonicalName() + ": " + e.getMessage());
      e.printStackTrace();
    }
  }
}
