{
  ArrayList<String> sourceFilePaths=ContainerUtil.newArrayList(paths(files));
  ModuleChunk chunk=new ModuleChunk((CompileContextEx)compileContext,moduleChunk,Collections.<Module,List<VirtualFile>>emptyMap());
  String moduleName=moduleChunk.getNodes().iterator().next().getName();
  String outputDirectoryForTests=path(compileContext.getModuleOutputDirectoryForTests(module));
  String moduleOutputDirectory=path(compileContext.getModuleOutputDirectory(module));
  Set<String> outputDirectoriesToFilter=ContainerUtil.newHashSet(outputDirectoryForTests);
  if (!tests) {
    outputDirectoriesToFilter.add(moduleOutputDirectory);
  }
  CharSequence script=KotlinModuleScriptGenerator.generateModuleScript(moduleName,getDependencyProvider(chunk,tests,mainOutput),sourceFilePaths,tests,outputDirectoriesToFilter);
  File scriptFile=new File(path(outputDir),"script.kts");
  try {
    FileUtil.writeToFile(scriptFile,script.toString());
  }
 catch (  IOException e) {
    compileContext.addMessage(CompilerMessageCategory.ERROR,"[Internal Error] Cannot write script to " + scriptFile.getAbsolutePath(),"",-1,-1);
    return null;
  }
  return scriptFile;
}
