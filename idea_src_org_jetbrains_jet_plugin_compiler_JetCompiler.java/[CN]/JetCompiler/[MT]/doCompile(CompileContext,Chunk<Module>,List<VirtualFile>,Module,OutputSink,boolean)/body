{
  if (files.isEmpty())   return;
  MessageCollector messageCollector=new MessageCollectorAdapter(compileContext);
  CompilerEnvironment environment=TranslatingCompilerUtils.getEnvironmentFor(compileContext,module,tests);
  if (!environment.success()) {
    environment.reportErrorsTo(messageCollector);
    return;
  }
  File outputDir=environment.getOutput();
  File scriptFile=tryToWriteScriptFile(compileContext,moduleChunk,files,module,tests,compileContext.getModuleOutputDirectory(module),outputDir);
  if (scriptFile == null)   return;
  OutputItemsCollectorImpl collector=new OutputItemsCollectorImpl(){
    @Override public void add(    Collection<File> sourceFiles,    File outputFile){
      super.add(sourceFiles,outputFile);
      compileContext.getProgressIndicator().setText("Emitting: " + outputFile);
    }
  }
;
  runCompiler(module.getProject(),messageCollector,environment,scriptFile,collector);
  TranslatingCompilerUtils.reportOutputs(outputSink,outputDir,collector);
}
