{
  URLClassLoader loader=getOrCreateClassloader(kotlinHome,context);
  try {
    String compilerClassName="org.jetbrains.jet.cli.KotlinCompiler";
    Class<?> kompiler=Class.forName(compilerClassName,true,loader);
    Method exec=kompiler.getDeclaredMethod("exec",PrintStream.class,String[].class);
    String[] arguments={"-module",scriptFile.getAbsolutePath(),"-output",path(outputDir),"-tags","-verbose","-version"};
    context.addMessage(INFORMATION,"Using kotlinHome=" + kotlinHome,"",-1,-1);
    context.addMessage(INFORMATION,"Invoking in-process compiler " + compilerClassName + " with arguments "+ Arrays.asList(arguments),"",-1,-1);
    Object rc=exec.invoke(kompiler.newInstance(),out,arguments);
    if ("org.jetbrains.jet.cli.KotlinCompiler.ExitCode".equals(rc.getClass().getCanonicalName())) {
      return (Integer)rc.getClass().getMethod("getCode").invoke(rc);
    }
 else {
      throw new IllegalStateException("Unexpected return: " + rc);
    }
  }
 catch (  Throwable e) {
    LOG.error(e);
    return -1;
  }
}
