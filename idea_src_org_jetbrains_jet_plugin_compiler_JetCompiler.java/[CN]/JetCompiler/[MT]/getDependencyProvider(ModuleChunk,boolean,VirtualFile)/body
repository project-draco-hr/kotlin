{
  return new KotlinModuleScriptGenerator.DependencyProvider(){
    @Override public void processClassPath(    @NotNull KotlinModuleScriptGenerator.DependencyProcessor processor){
      processor.processClassPathSection("Boot classpath",paths(chunk.getCompilationBootClasspathFiles()));
      processor.processClassPathSection("Compilation classpath",paths(chunk.getCompilationClasspathFiles()));
      processor.processClassPathSection("Java classpath (for Java sources)",paths(Arrays.asList(chunk.getSourceRoots())));
      if (tests && mainOutputPath != null) {
        processor.processClassPathSection("Main output",Arrays.asList(path(mainOutputPath)));
      }
      processor.processAnnotationRoots(getAnnotationRootPaths(chunk));
    }
  }
;
}
