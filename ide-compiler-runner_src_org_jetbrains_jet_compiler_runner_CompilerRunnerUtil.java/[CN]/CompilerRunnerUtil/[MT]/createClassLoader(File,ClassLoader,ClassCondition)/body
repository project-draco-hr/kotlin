{
  List<URL> classpath=KotlinPackage.map(loadCompilerClasspathSpaceSeparated(libPath).split(" "),new Function1<String,URL>(){
    @Override public URL invoke(    String dependency){
      try {
        return new File(libPath,dependency).toURI().toURL();
      }
 catch (      MalformedURLException e) {
        throw UtilsPackage.rethrow(e);
      }
    }
  }
);
  return ClassPreloadingUtils.preloadClasses(Collections.singletonList(compilerJar(libPath)),4096,new URLClassLoader(classpath.toArray(new URL[classpath.size()]),parentClassLoader),classToLoadByParent);
}
