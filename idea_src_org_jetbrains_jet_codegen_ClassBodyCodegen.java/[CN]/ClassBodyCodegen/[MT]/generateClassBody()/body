{
  final FunctionCodegen functionCodegen=new FunctionCodegen((JetDeclaration)myClass,v,stdlib,bindingContext);
  final PropertyCodegen propertyCodegen=new PropertyCodegen(v,stdlib,bindingContext,functionCodegen);
  for (  JetDeclaration declaration : myClass.getDeclarations()) {
    if (declaration instanceof JetProperty) {
      propertyCodegen.gen((JetProperty)declaration,kind);
    }
 else     if (declaration instanceof JetFunction) {
      try {
        functionCodegen.gen((JetFunction)declaration,kind);
      }
 catch (      RuntimeException e) {
        throw new RuntimeException("Error generating method " + myClass.getName() + "."+ declaration.getName(),e);
      }
    }
  }
  generatePrimaryConstructorProperties(propertyCodegen);
}
