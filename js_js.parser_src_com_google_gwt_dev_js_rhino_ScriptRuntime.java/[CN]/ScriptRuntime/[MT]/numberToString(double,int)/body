{
  if (Double.isNaN(d))   return "NaN";
  if (d == Double.POSITIVE_INFINITY)   return "Infinity";
  if (d == Double.NEGATIVE_INFINITY)   return "-Infinity";
  if (d == 0.0)   return "0";
  if ((base < 2) || (base > 36)) {
    throw new Error(Context.getMessage1("msg.bad.radix",Integer.toString(base)));
  }
  if (base != 10) {
    return DToA.JS_dtobasestr(base,d);
  }
 else {
    StringBuffer result=new StringBuffer();
    DToA.JS_dtostr(result,DToA.DTOSTR_STANDARD,0,d);
    return result.toString();
  }
}
