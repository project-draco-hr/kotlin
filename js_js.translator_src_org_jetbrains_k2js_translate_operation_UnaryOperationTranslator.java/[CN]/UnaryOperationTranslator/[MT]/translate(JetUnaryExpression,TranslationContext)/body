{
  IElementType operationToken=expression.getOperationReference().getReferencedNameElementType();
  if (operationToken == JetTokens.EXCLEXCL) {
    JetExpression baseExpression=getBaseExpression(expression);
    JetType type=BindingContextUtils.getNotNull(context.bindingContext(),BindingContext.EXPRESSION_TYPE,baseExpression);
    JsExpression translatedExpression=translateAsExpression(baseExpression,context);
    return type.isNullable() ? sure(translatedExpression,context) : translatedExpression;
  }
  if (IncrementTranslator.isIncrement(operationToken)) {
    return IncrementTranslator.translate(expression,context);
  }
  JsExpression baseExpression=TranslationUtils.translateBaseExpression(context,expression);
  if (isExclForBinaryEqualLikeExpr(expression,baseExpression)) {
    return translateExclForBinaryEqualLikeExpr((JsBinaryOperation)baseExpression);
  }
  ResolvedCall<? extends FunctionDescriptor> resolvedCall=getFunctionResolvedCall(context.bindingContext(),expression.getOperationReference());
  return CallTranslator.instance$.translate(context,resolvedCall,baseExpression);
}
