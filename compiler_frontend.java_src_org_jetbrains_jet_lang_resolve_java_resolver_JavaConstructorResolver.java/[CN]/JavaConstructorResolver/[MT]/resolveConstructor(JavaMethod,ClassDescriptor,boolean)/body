{
  ConstructorDescriptor alreadyResolved=trace.get(BindingContext.CONSTRUCTOR,constructor.getPsi());
  if (alreadyResolved != null) {
    return alreadyResolved;
  }
  ConstructorDescriptorImpl constructorDescriptor=new ConstructorDescriptorImpl(classDescriptor,Collections.<AnnotationDescriptor>emptyList(),false);
  List<TypeParameterDescriptor> typeParameters=classDescriptor.getTypeConstructor().getParameters();
  List<ValueParameterDescriptor> valueParameters=valueParameterResolver.resolveValueParameters(constructorDescriptor,constructor,new TypeVariableResolver(typeParameters,classDescriptor));
  ExternalSignatureResolver.AlternativeMethodSignature effectiveSignature=externalSignatureResolver.resolveAlternativeMethodSignature(constructor,false,null,null,valueParameters,Collections.<TypeParameterDescriptor>emptyList());
  constructorDescriptor.initialize(typeParameters,effectiveSignature.getValueParameters(),constructor.getVisibility(),isStaticClass);
  List<String> signatureErrors=effectiveSignature.getErrors();
  if (!signatureErrors.isEmpty()) {
    externalSignatureResolver.reportSignatureErrors(constructorDescriptor,signatureErrors);
  }
  trace.record(BindingContext.CONSTRUCTOR,constructor.getPsi(),constructorDescriptor);
  return constructorDescriptor;
}
