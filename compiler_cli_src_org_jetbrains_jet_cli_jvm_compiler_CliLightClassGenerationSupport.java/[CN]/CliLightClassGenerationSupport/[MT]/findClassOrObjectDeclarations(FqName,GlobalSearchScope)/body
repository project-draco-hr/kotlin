{
  ClassDescriptor classDescriptor=getTrace().get(BindingContext.FQNAME_TO_CLASS_DESCRIPTOR,fqName);
  if (classDescriptor != null) {
    PsiElement element=BindingContextUtils.classDescriptorToDeclaration(trace.getBindingContext(),classDescriptor);
    if (element != null && PsiSearchScopeUtil.isInScope(searchScope,element)) {
      return Collections.singletonList((JetClassOrObject)element);
    }
  }
  if (JvmAbi.isClassObjectFqName(fqName)) {
    Collection<JetClassOrObject> parentClasses=findClassOrObjectDeclarations(fqName.parent(),searchScope);
    return ContainerUtil.mapNotNull(parentClasses,new Function<JetClassOrObject,JetClassOrObject>(){
      @Override public JetClassOrObject fun(      JetClassOrObject classOrObject){
        if (classOrObject instanceof JetClass) {
          JetClass jetClass=(JetClass)classOrObject;
          JetClassObject classObject=jetClass.getClassObject();
          if (classObject != null) {
            return classObject.getObjectDeclaration();
          }
        }
        return null;
      }
    }
);
  }
  return Collections.emptyList();
}
