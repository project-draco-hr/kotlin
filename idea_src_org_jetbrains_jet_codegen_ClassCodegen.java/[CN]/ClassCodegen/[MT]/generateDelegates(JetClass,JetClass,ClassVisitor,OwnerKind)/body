{
  final JetStandardLibrary standardLibrary=JetStandardLibrary.getJetStandardLibrary(project);
  final FunctionCodegen functionCodegen=new FunctionCodegen(toClass,v,standardLibrary,bindingContext);
  final PropertyCodegen propertyCodegen=new PropertyCodegen(v,standardLibrary,bindingContext,functionCodegen);
  for (  JetDeclaration declaration : toClass.getDeclarations()) {
    if (declaration instanceof JetProperty) {
      propertyCodegen.gen((JetProperty)declaration,kind);
    }
 else     if (declaration instanceof JetFunction) {
      functionCodegen.gen((JetFunction)declaration,kind);
    }
  }
  for (  JetParameter p : toClass.getPrimaryConstructorParameters()) {
    if (p.getValOrVarNode() != null) {
      PropertyDescriptor propertyDescriptor=bindingContext.getPropertyDescriptor(p);
      if (propertyDescriptor != null) {
        propertyCodegen.generateDefaultGetter(propertyDescriptor,Opcodes.ACC_PUBLIC,kind);
        if (propertyDescriptor.isVar()) {
          propertyCodegen.generateDefaultSetter(propertyDescriptor,Opcodes.ACC_PUBLIC,kind);
        }
      }
    }
  }
}
