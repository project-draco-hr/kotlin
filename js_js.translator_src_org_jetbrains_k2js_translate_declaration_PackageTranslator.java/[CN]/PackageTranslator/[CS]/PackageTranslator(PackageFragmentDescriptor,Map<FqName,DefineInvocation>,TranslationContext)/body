{
  super(context.newDeclaration(descriptor));
  this.descriptor=descriptor;
  visitor=new FileDeclarationVisitor(context());
  definitionPlace=new NotNullLazyValue<Trinity<List<JsPropertyInitializer>,LabelGenerator,JsExpression>>(){
    @Override @NotNull public Trinity<List<JsPropertyInitializer>,LabelGenerator,JsExpression> compute(){
      DefineInvocation defineInvocation=packageFqNameToDefineInvocation.get(descriptor.getFqName());
      if (defineInvocation == null) {
        defineInvocation=createDefinitionPlace(null,packageFqNameToDefineInvocation);
      }
      return createPlace(defineInvocation.getMembers(),context().getQualifiedReference(descriptor.getFqName()));
    }
  }
;
}
