{
synchronized (lock) {
    Map<String,EntryInfo> map=myRelPathsToEntries.get();
    if (map == null) {
      final ZipInputStream zip=getZip();
      map=new HashMap<String,EntryInfo>();
      if (zip != null) {
        map.put("",new EntryInfo("",null,true,new byte[0]));
        try {
          ZipEntry entry=zip.getNextEntry();
          while (entry != null) {
            final String name=entry.getName();
            final boolean isDirectory=name.endsWith("/");
            if (entry.getExtra() == null) {
              byte[] cont=new byte[(int)entry.getSize()];
              ByteArrayOutputStream byteArray=new ByteArrayOutputStream();
              InputStream stream=getZip();
              if (stream != null) {
                int tmp;
                if ((tmp=stream.read(cont)) == entry.getSize()) {
                  byteArray.write(cont,0,tmp);
                  entry.setExtra(byteArray.toByteArray());
                }
 else {
                  int readFromIS=tmp;
                  if (tmp < entry.getSize()) {
                    byteArray.write(cont,0,tmp);
                    while (((tmp=stream.read(cont)) != -1) && (tmp + readFromIS <= entry.getSize())) {
                      byteArray.write(cont,0,tmp);
                      readFromIS+=tmp;
                    }
                    entry.setExtra(byteArray.toByteArray());
                  }
                }
              }
            }
            getOrCreate(isDirectory ? name.substring(0,name.length() - 1) : name,isDirectory,map,entry.getExtra());
            entry=zip.getNextEntry();
          }
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
        myRelPathsToEntries=new SoftReference<Map<String,EntryInfo>>(map);
      }
    }
    return map;
  }
}
