{
  JetModifierList jetModifierList=classOrObject.getModifierList();
  if (jetModifierList == null) {
    return new String[0];
  }
  Collection<String> psiModifiers=Sets.newHashSet();
  List<Pair<JetKeywordToken,String>> jetTokenToPsiModifier=Lists.newArrayList(Pair.create(PUBLIC_KEYWORD,PsiModifier.PUBLIC),Pair.create(INTERNAL_KEYWORD,PsiModifier.PUBLIC),Pair.create(PROTECTED_KEYWORD,PsiModifier.PROTECTED),Pair.create(PRIVATE_KEYWORD,PsiModifier.PRIVATE),Pair.create(ABSTRACT_KEYWORD,PsiModifier.ABSTRACT),Pair.create(FINAL_KEYWORD,PsiModifier.FINAL));
  for (  Pair<JetKeywordToken,String> tokenAndModifier : jetTokenToPsiModifier) {
    if (jetModifierList.hasModifier(tokenAndModifier.first)) {
      psiModifiers.add(tokenAndModifier.second);
    }
  }
  if (!psiModifiers.contains(PsiModifier.PRIVATE) && !psiModifiers.contains(PsiModifier.PROTECTED)) {
    psiModifiers.add(PsiModifier.PUBLIC);
  }
  if (!jetModifierList.hasModifier(OPEN_KEYWORD) && !jetModifierList.hasModifier(ABSTRACT_KEYWORD)) {
    psiModifiers.add(PsiModifier.FINAL);
  }
  if (classOrObject.getParent() != classOrObject.getContainingFile()) {
    psiModifiers.add(PsiModifier.STATIC);
  }
  return psiModifiers.toArray(new String[psiModifiers.size()]);
}
