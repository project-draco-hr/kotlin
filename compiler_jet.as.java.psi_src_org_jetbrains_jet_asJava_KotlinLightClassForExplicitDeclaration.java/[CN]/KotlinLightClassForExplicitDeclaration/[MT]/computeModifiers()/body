{
  Collection<String> psiModifiers=Sets.newHashSet();
  List<Pair<JetModifierKeywordToken,String>> jetTokenToPsiModifier=Lists.newArrayList(Pair.create(PUBLIC_KEYWORD,PsiModifier.PUBLIC),Pair.create(INTERNAL_KEYWORD,PsiModifier.PUBLIC),Pair.create(PROTECTED_KEYWORD,PsiModifier.PROTECTED),Pair.create(FINAL_KEYWORD,PsiModifier.FINAL));
  for (  Pair<JetModifierKeywordToken,String> tokenAndModifier : jetTokenToPsiModifier) {
    if (classOrObject.hasModifier(tokenAndModifier.first)) {
      psiModifiers.add(tokenAndModifier.second);
    }
  }
  if (classOrObject.hasModifier(PRIVATE_KEYWORD)) {
    psiModifiers.add(classOrObject.isTopLevel() ? PsiModifier.PUBLIC : PsiModifier.PRIVATE);
  }
  if (!psiModifiers.contains(PsiModifier.PRIVATE) && !psiModifiers.contains(PsiModifier.PROTECTED)) {
    psiModifiers.add(PsiModifier.PUBLIC);
  }
  if (isAbstract(classOrObject)) {
    psiModifiers.add(PsiModifier.ABSTRACT);
  }
 else   if (!(classOrObject.hasModifier(OPEN_KEYWORD) || (classOrObject instanceof JetClass && ((JetClass)classOrObject).isEnum()))) {
    psiModifiers.add(PsiModifier.FINAL);
  }
  if (!classOrObject.isTopLevel() && !classOrObject.hasModifier(INNER_KEYWORD)) {
    psiModifiers.add(PsiModifier.STATIC);
  }
  return ArrayUtil.toStringArray(psiModifiers);
}
