{
  if (baseClass instanceof KotlinLightClassForExplicitDeclaration || (isInterface() && !baseClass.isInterface())) {
    String qualifiedName;
    if (baseClass instanceof KotlinLightClassForExplicitDeclaration) {
      ClassDescriptor baseDescriptor=((KotlinLightClassForExplicitDeclaration)baseClass).getDescriptor();
      qualifiedName=baseDescriptor != null ? DescriptorUtils.getFqName(baseDescriptor).asString() : null;
    }
 else {
      qualifiedName=baseClass.getQualifiedName();
    }
    ClassDescriptor thisDescriptor=getDescriptor();
    return qualifiedName != null && thisDescriptor != null && checkSuperTypeByFQName(thisDescriptor,qualifiedName,checkDeep);
  }
  return super.isInheritor(baseClass,checkDeep);
}
