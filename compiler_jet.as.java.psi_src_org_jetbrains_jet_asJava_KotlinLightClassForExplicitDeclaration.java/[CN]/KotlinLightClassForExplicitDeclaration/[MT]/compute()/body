{
  if (JetPsiUtil.isLocal(classOrObject)) {
    PsiElement declaration=JetPsiUtil.getTopmostParentOfTypes(classOrObject,LOCAL_CLASS_CONTAINERS);
    if (declaration instanceof JetNamedFunction) {
      JetNamedFunction function=(JetNamedFunction)declaration;
      return getParentByPsiMethod(LightClassUtil.getLightClassMethod((JetNamedFunction)declaration),function.getName());
    }
    if (declaration instanceof JetProperty) {
      JetProperty property=(JetProperty)declaration;
      return getParentByPsiMethod(LightClassUtil.getLightClassPropertyMethods(property).getGetter(),property.getName());
    }
    if (declaration instanceof JetClassInitializer) {
      PsiElement parent=declaration.getParent();
      PsiElement grandparent=parent.getParent();
      if (parent instanceof JetClassBody && grandparent instanceof JetClassOrObject) {
        return LightClassUtil.getPsiClass((JetClassOrObject)grandparent);
      }
    }
  }
  return classOrObject.getParent() == classOrObject.getContainingFile() ? getContainingFile() : getContainingClass();
}
