{
  if (LightClassUtil.belongsToKotlinBuiltIns((JetFile)classOrObject.getContainingFile())) {
    return null;
  }
  if (JetPsiUtil.getOutermostClassOrObject(classOrObject) == null) {
    return null;
  }
  String jvmInternalName=PsiCodegenPredictor.getPredefinedJvmInternalName(classOrObject);
  if (jvmInternalName == null)   return null;
  FqName fqName=JvmClassName.byInternalName(jvmInternalName).getFqNameForClassNameWithoutDollars();
  return new KotlinLightClassForExplicitDeclaration(manager,fqName,classOrObject);
}
