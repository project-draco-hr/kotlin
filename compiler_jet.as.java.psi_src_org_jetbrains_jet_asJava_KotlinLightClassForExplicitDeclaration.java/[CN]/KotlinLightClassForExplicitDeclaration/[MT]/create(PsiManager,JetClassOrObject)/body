{
  if (LightClassUtil.belongsToKotlinBuiltIns((JetFile)classOrObject.getContainingFile())) {
    return null;
  }
  String jvmInternalName=getJvmInternalName(classOrObject);
  if (jvmInternalName == null)   return null;
  FqName fqName=JvmClassName.byInternalName(jvmInternalName).getFqNameForClassNameWithoutDollars();
  if (classOrObject instanceof JetObjectDeclaration && ((JetObjectDeclaration)classOrObject).isObjectLiteral()) {
    return new KotlinLightClassForExplicitDeclaration.Anonymous(manager,fqName,classOrObject);
  }
  return new KotlinLightClassForExplicitDeclaration(manager,fqName,classOrObject);
}
