{
  if (value.getType().equals(type))   return this;
  if (getPossibleTypes(value).contains(type))   return this;
  if (!FlexibleTypesKt.isFlexible(value.getType()) && TypeUtilsKt.isSubtypeOf(value.getType(),type))   return this;
  ImmutableMap<DataFlowValue,Nullability> newNullabilityInfo=type.isMarkedNullable() ? EMPTY_NULLABILITY_INFO : ImmutableMap.of(value,NOT_NULL);
  SetMultimap<DataFlowValue,KotlinType> newTypeInfo=ImmutableSetMultimap.of(value,type);
  return new DelegatingDataFlowInfo(this,newNullabilityInfo,newTypeInfo);
}
