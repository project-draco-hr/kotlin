{
  StrictListAccessor<Expression,MethodInvocation> args=call.astArguments();
  String layout=null;
  int index=0;
  for (Iterator<Expression> iterator=args.iterator(); iterator.hasNext(); index++) {
    Expression expression=iterator.next();
    if (expression instanceof Select) {
      Select outer=(Select)expression;
      Expression operand=outer.astOperand();
      if (operand instanceof Select) {
        Select inner=(Select)operand;
        if (inner.astOperand() instanceof VariableReference) {
          VariableReference reference=(VariableReference)inner.astOperand();
          if (FN_RESOURCE_BASE.equals(reference.astIdentifier().astValue()) && "layout".equals(inner.astIdentifier().astValue())) {
            layout=LAYOUT_RESOURCE_PREFIX + outer.astIdentifier().astValue();
            break;
          }
        }
      }
    }
  }
  if (layout == null) {
    lombok.ast.Node method=StringFormatDetector.getParentMethod(call);
    if (method != null) {
      index=0;
      String name=StringFormatDetector.getResourceArg(method,call,index);
      if (name == null) {
        index=1;
        name=StringFormatDetector.getResourceArg(method,call,index);
      }
      if (name != null) {
        layout=LAYOUT_RESOURCE_PREFIX + name;
      }
    }
    if (layout == null) {
      return;
    }
  }
  int viewRootPos=index + 1;
  if (viewRootPos < args.size()) {
    int i=0;
    Iterator<Expression> iterator=args.iterator();
    while (iterator.hasNext() && i < viewRootPos) {
      iterator.next();
      i++;
    }
    if (iterator.hasNext()) {
      Expression viewRoot=iterator.next();
      if (viewRoot instanceof NullLiteral) {
        recordIncludeWidth(layout,true);
        recordIncludeHeight(layout,true);
      }
    }
  }
}
