{
  if (JavaRuntimePresentationProvider.getInstance().detect(classesRoots) != null) {
    return null;
  }
  if (JSLibraryStdPresentationProvider.isOldJSStandardLibrary(classesRoots)) {
    return new LibraryVersionProperties(null);
  }
  for (  VirtualFile file : classesRoots) {
    CommonProcessors.FindFirstProcessor<VirtualFile> findKTProcessor=new CommonProcessors.FindFirstProcessor<VirtualFile>(){
      @Override protected boolean accept(      VirtualFile file){
        String extension=file.getExtension();
        return extension != null && extension.equals(JetFileType.INSTANCE.getDefaultExtension());
      }
    }
;
    VfsUtil.processFilesRecursively(file,findKTProcessor);
    if (findKTProcessor.isFound()) {
      return new LibraryVersionProperties(null);
    }
  }
  return null;
}
