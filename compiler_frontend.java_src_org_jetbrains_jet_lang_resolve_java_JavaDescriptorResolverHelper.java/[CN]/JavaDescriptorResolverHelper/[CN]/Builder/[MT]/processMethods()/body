{
  for (  PsiMethod method : psiClass.getPsiClass().getAllMethods()) {
    getNamedMembers(method.getName());
  }
  for (  PsiMethod method0 : psiClass.getPsiClass().getMethods()) {
    PsiMethodWrapper method=new PsiMethodWrapper(method0);
    if (!includeMember(method)) {
      continue;
    }
    if (method.getName().startsWith(JvmAbi.GETTER_PREFIX)) {
      if (method.getJetMethod().kind() == JvmStdlibNames.JET_METHOD_KIND_PROPERTY) {
        if (method.getName().equals(JvmStdlibNames.JET_OBJECT_GET_TYPEINFO_METHOD)) {
          continue;
        }
        int i=0;
        TypeSource receiverType;
        if (i < method.getParameters().size() && method.getParameter(i).getJetValueParameter().receiver()) {
          PsiParameterWrapper receiverParameter=method.getParameter(i);
          receiverType=new TypeSource(receiverParameter.getJetValueParameter().type(),receiverParameter.getPsiParameter().getType());
          ++i;
        }
 else {
          receiverType=null;
        }
        while (i < method.getParameters().size() && method.getParameter(i).getJetTypeParameter().isDefined()) {
          ++i;
        }
        if (i != method.getParameters().size()) {
          throw new IllegalStateException();
        }
        String propertyName=StringUtil.decapitalize(method.getName().substring(JvmAbi.GETTER_PREFIX.length()));
        NamedMembers members=getNamedMembers(propertyName);
        TypeSource propertyType=new TypeSource(method.getJetMethod().propertyType(),method.getReturnType());
        members.addPropertyAccessor(new PropertyAccessorData(method,true,propertyType,receiverType));
      }
    }
 else     if (method.getName().startsWith(JvmAbi.SETTER_PREFIX)) {
      if (method.getJetMethod().kind() == JvmStdlibNames.JET_METHOD_KIND_PROPERTY) {
        if (method.getParameters().size() == 0) {
          throw new IllegalStateException();
        }
        int i=0;
        TypeSource receiverType=null;
        PsiParameterWrapper p1=method.getParameter(0);
        if (p1.getJetValueParameter().receiver()) {
          receiverType=new TypeSource(p1.getJetValueParameter().type(),p1.getPsiParameter().getType());
          ++i;
        }
        while (i < method.getParameters().size() && method.getParameter(i).getJetTypeParameter().isDefined()) {
          ++i;
        }
        if (i + 1 != method.getParameters().size()) {
          throw new IllegalStateException();
        }
        PsiParameterWrapper propertyTypeParameter=method.getParameter(i);
        TypeSource propertyType=new TypeSource(method.getJetMethod().propertyType(),propertyTypeParameter.getPsiParameter().getType());
        String propertyName=StringUtil.decapitalize(method.getName().substring(JvmAbi.SETTER_PREFIX.length()));
        NamedMembers members=getNamedMembers(propertyName);
        members.addPropertyAccessor(new PropertyAccessorData(method,false,propertyType,receiverType));
      }
    }
    if (method.getJetMethod().kind() != JvmStdlibNames.JET_METHOD_KIND_PROPERTY) {
      NamedMembers namedMembers=getNamedMembers(method.getName());
      namedMembers.addMethod(method);
    }
  }
}
