{
  List<TestFile> files=KotlinTestUtils.createTestFiles(firstFileName,KotlinTestUtils.doLoadFile(new File(firstFileName)),new KotlinTestUtils.TestFileFactory<Void,TestFile>(){
    @Override public TestFile createFile(    @Nullable Void module,    @NotNull String fileName,    @NotNull String text,    @NotNull Map<String,String> directives){
      return new TestFile(fileName,text);
    }
    @Override public Void createModule(    @NotNull String name,    @NotNull List<String> dependencies){
      throw new UnsupportedOperationException();
    }
  }
);
  if (files.size() == 1) {
    TestFile firstFile=files.iterator().next();
    File secondFile=new File(firstFileName.replace("1.kt","2.kt"));
    files=Arrays.asList(firstFile,new TestFile(secondFile.getName(),KotlinTestUtils.doLoadFile(secondFile)));
  }
  ClassFileFactory factory1=null;
  ClassFileFactory factory2=null;
  try {
    TestFile fileA=files.get(1);
    TestFile fileB=files.get(0);
    factory1=compileA(fileA.name,fileA.content);
    factory2=compileB(fileB.name,fileB.content);
    invokeBox(PackagePartClassUtils.getFilePartShortName(new File(fileB.name).getName()));
  }
 catch (  Throwable e) {
    String result="";
    if (factory1 != null) {
      result+="FIRST: \n\n" + factory1.createText();
    }
    if (factory2 != null) {
      result+="\n\nSECOND: \n\n" + factory2.createText();
    }
    System.out.println(result);
    throw ExceptionUtilsKt.rethrow(e);
  }
  return new Pair<ClassFileFactory,ClassFileFactory>(factory1,factory2);
}
