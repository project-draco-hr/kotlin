{
  Collection<String> localVariableNames=new HashSet<String>(getParameterNamesAsStrings(functionDescriptor));
  Map<Name,Label> labelsForSharedVars=new HashMap<Name,Label>();
  mv.visitCode();
  Label methodBegin=new Label();
  mv.visitLabel(methodBegin);
  OwnerKind kind=context.getContextKind();
  if (kind instanceof OwnerKind.StaticDelegateKind) {
    generateStaticDelegateMethodBody(mv,signature.getAsmMethod(),(OwnerKind.StaticDelegateKind)kind);
  }
 else {
    FrameMap frameMap=strategy.getFrameMap(typeMapper,context);
    for (    ValueParameterDescriptor parameter : functionDescriptor.getValueParameters()) {
      frameMap.enter(parameter,typeMapper.mapType(parameter));
    }
    labelsForSharedVars.putAll(createSharedVarsForParameters(mv,functionDescriptor,frameMap));
    if (!JetTypeMapper.isAccessor(functionDescriptor)) {
      genNotNullAssertionsForParameters(new InstructionAdapter(mv),state,functionDescriptor,frameMap);
    }
    strategy.generateBody(mv,signature,context,getParentCodegen());
    localVariableNames.addAll(strategy.getLocalVariableNames());
  }
  Label methodEnd=new Label();
  mv.visitLabel(methodEnd);
  Type thisType=getThisTypeForFunction(functionDescriptor,context);
  generateLocalVariableTable(mv,signature,functionDescriptor,thisType,methodBegin,methodEnd,localVariableNames,labelsForSharedVars,kind);
}
