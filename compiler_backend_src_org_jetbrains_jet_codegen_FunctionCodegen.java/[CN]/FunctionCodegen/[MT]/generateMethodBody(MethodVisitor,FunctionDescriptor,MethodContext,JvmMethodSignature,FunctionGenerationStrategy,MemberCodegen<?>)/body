{
  mv.visitCode();
  Label methodBegin=new Label();
  mv.visitLabel(methodBegin);
  JetTypeMapper typeMapper=parentCodegen.typeMapper;
  if (context.getParentContext() instanceof PackageFacadeContext) {
    generateStaticDelegateMethodBody(mv,signature.getAsmMethod(),(PackageFacadeContext)context.getParentContext());
  }
 else {
    FrameMap frameMap=createFrameMap(parentCodegen.state,functionDescriptor,signature,isStatic(context.getContextKind()));
    Label methodEntry=new Label();
    mv.visitLabel(methodEntry);
    context.setMethodStartLabel(methodEntry);
    if (!JetTypeMapper.isAccessor(functionDescriptor)) {
      genNotNullAssertionsForParameters(new InstructionAdapter(mv),parentCodegen.state,functionDescriptor,frameMap);
    }
    strategy.generateBody(mv,frameMap,signature,context,parentCodegen);
  }
  Label methodEnd=new Label();
  mv.visitLabel(methodEnd);
  Type thisType=getThisTypeForFunction(functionDescriptor,context,typeMapper);
  generateLocalVariableTable(mv,signature,functionDescriptor,thisType,methodBegin,methodEnd,context.getContextKind());
}
