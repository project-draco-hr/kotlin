{
  DeclarationDescriptor contextClass=owner.getContextDescriptor().getContainingDeclaration();
  if (kind != OwnerKind.TRAIT_IMPL && contextClass instanceof ClassDescriptor && ((ClassDescriptor)contextClass).getKind() == ClassKind.TRAIT) {
    return;
  }
  if (!isDefaultNeeded(functionDescriptor)) {
    return;
  }
  boolean isStatic=isStatic(kind);
  Method jvmSignature=signature.getAsmMethod();
  int flags=ACC_PUBLIC | ACC_SYNTHETIC;
  JvmClassName ownerInternalName;
  if (contextClass instanceof NamespaceDescriptor) {
    ownerInternalName=state.getTypeMapper().getOwner(functionDescriptor,kind,true);
  }
 else {
    ownerInternalName=JvmClassName.byType(state.getTypeMapper().mapType(((ClassDescriptor)contextClass).getDefaultType(),JetTypeMapperMode.IMPL));
  }
  String descriptor=jvmSignature.getDescriptor().replace(")","I)");
  boolean isConstructor="<init>".equals(jvmSignature.getName());
  if (!isStatic && !isConstructor) {
    descriptor=descriptor.replace("(","(" + ownerInternalName.getDescriptor());
  }
  MethodVisitor mv=v.newMethod(null,flags | (isConstructor ? 0 : ACC_STATIC),isConstructor ? "<init>" : jvmSignature.getName() + JvmAbi.DEFAULT_PARAMS_IMPL_SUFFIX,descriptor,null,null);
  if (state.getClassBuilderMode() == ClassBuilderMode.STUBS) {
    genStubCode(mv);
  }
 else   if (state.getClassBuilderMode() == ClassBuilderMode.FULL) {
    generateDefaultImpl(owner,state,signature,functionDescriptor,kind,isStatic,mv,loadStrategy);
  }
}
