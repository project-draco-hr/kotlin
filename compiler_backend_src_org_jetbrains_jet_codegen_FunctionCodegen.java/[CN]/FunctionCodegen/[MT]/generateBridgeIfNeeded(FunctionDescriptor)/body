{
  if (functionDescriptor instanceof ConstructorDescriptor)   return;
  if (owner.getContextKind() == OwnerKind.TRAIT_IMPL)   return;
  Method method=typeMapper.mapSignature(functionDescriptor).getAsmMethod();
  Queue<FunctionDescriptor> bfsQueue=new LinkedList<FunctionDescriptor>();
  Set<FunctionDescriptor> visited=new HashSet<FunctionDescriptor>();
  for (  FunctionDescriptor overriddenDescriptor : functionDescriptor.getOverriddenDescriptors()) {
    FunctionDescriptor orig=overriddenDescriptor.getOriginal();
    if (visited.add(orig)) {
      bfsQueue.offer(orig);
    }
  }
  Set<Method> bridgesToGenerate=new HashSet<Method>();
  while (!bfsQueue.isEmpty()) {
    FunctionDescriptor descriptor=bfsQueue.poll();
    if (descriptor.getKind() == CallableMemberDescriptor.Kind.DECLARATION) {
      Method overridden=typeMapper.mapSignature(descriptor).getAsmMethod();
      if (differentMethods(method,overridden)) {
        bridgesToGenerate.add(overridden);
      }
      continue;
    }
    for (    FunctionDescriptor overriddenDescriptor : descriptor.getOverriddenDescriptors()) {
      FunctionDescriptor orig=overriddenDescriptor.getOriginal();
      if (visited.add(orig)) {
        bfsQueue.offer(orig);
      }
    }
  }
  if (!bridgesToGenerate.isEmpty()) {
    PsiElement origin=callableDescriptorToDeclaration(bindingContext,functionDescriptor);
    for (    Method bridge : bridgesToGenerate) {
      generateBridge(origin,bridge,method);
    }
  }
}
