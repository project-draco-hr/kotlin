{
  ReceiverValue explicitReceiver=context.call.getExplicitReceiver();
  ResolutionTaskHolder<D,F> result=new ResolutionTaskHolder<D,F>(context,new MyPriorityProvider<D>(context),tracing);
  TaskPrioritizerContext<D,F> taskPrioritizerContext=new TaskPrioritizerContext<D,F>(name,result,context,context.scope,callableDescriptorCollectors);
  if (explicitReceiver instanceof QualifierReceiver) {
    QualifierReceiver qualifierReceiver=(QualifierReceiver)explicitReceiver;
    doComputeTasks(NO_RECEIVER,taskPrioritizerContext.replaceScope(qualifierReceiver.getNestedClassesAndPackageMembersScope()));
    ReceiverValue classObjectReceiver=qualifierReceiver.getClassObjectReceiver();
    if (classObjectReceiver.exists()) {
      doComputeTasks(classObjectReceiver,taskPrioritizerContext);
    }
  }
 else {
    doComputeTasks(explicitReceiver,taskPrioritizerContext);
  }
  return result.getTasks();
}
