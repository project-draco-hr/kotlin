{
  List<JetType> variantsForExplicitReceiver=AutoCastUtils.getAutoCastVariants(explicitReceiver,c.context);
  for (  CallableDescriptorCollector<D> callableDescriptorCollector : c.callableDescriptorCollectors) {
    Collection<ResolutionCandidate<D>> members=Lists.newArrayList();
    for (    JetType type : variantsForExplicitReceiver) {
      Collection<D> membersForThisVariant=callableDescriptorCollector.getMembersByName(type,c.name,c.context.trace);
      convertWithReceivers(membersForThisVariant,explicitReceiver,NO_RECEIVER,members,createKind(DISPATCH_RECEIVER,isExplicit),c.context.call);
    }
    c.result.addCandidates(members);
  }
  for (  CallableDescriptorCollector<D> callableDescriptorCollector : c.callableDescriptorCollectors) {
    for (    ReceiverValue implicitReceiver : implicitReceivers) {
      addMemberExtensionCandidates(implicitReceiver,explicitReceiver,callableDescriptorCollector,c,createKind(EXTENSION_RECEIVER,isExplicit));
    }
    Collection<ResolutionCandidate<D>> extensions=convertWithImpliedThis(c.scope,explicitReceiver,callableDescriptorCollector.getNonMembersByName(c.scope,c.name,c.context.trace),createKind(EXTENSION_RECEIVER,isExplicit),c.context.call);
    c.result.addCandidates(extensions);
  }
}
