{
  List<Collection<ResolutionCandidate<D>>> localsList=Lists.newArrayList();
  List<Collection<ResolutionCandidate<D>>> nonlocalsList=Lists.newArrayList();
  for (  CallableDescriptorCollector<? extends D> callableDescriptorCollector : c.callableDescriptorCollectors) {
    Collection<ResolutionCandidate<D>> members=convertWithImpliedThis(c.scope,Collections.singletonList(NO_RECEIVER),callableDescriptorCollector.getNonExtensionsByName(c.scope,c.name,c.context.trace));
    List<ResolutionCandidate<D>> nonlocals=Lists.newArrayList();
    List<ResolutionCandidate<D>> locals=Lists.newArrayList();
    TaskPrioritizer.<D>splitLexicallyLocalDescriptors(members,c.scope.getContainingDeclaration(),locals,nonlocals);
    localsList.add(locals);
    nonlocalsList.add(nonlocals);
  }
  c.result.addCandidates(localsList);
  for (  ReceiverValue implicitReceiver : implicitReceivers) {
    addCandidatesForExplicitReceiver(implicitReceiver,implicitReceivers,c,false);
  }
  c.result.addCandidates(nonlocalsList);
}
