{
  BasicValue value=super.naryOperation(insn,values);
  if (isBoxing(insn)) {
    return createNewBoxing(insn,value.getType(),null);
  }
 else   if (isUnboxing(insn) && values.get(0) instanceof BoxedBasicValue && value.getType().equals(((BoxedBasicValue)values.get(0)).getPrimitiveType())) {
    onUnboxing((BoxedBasicValue)values.get(0),insn);
  }
 else   if (isIteratorMethodCallOfProgression(insn,values)) {
    return new RangeIteratorBasicValue(getValuesTypePartOfProgressionClass(values.get(0).getType().getInternalName()));
  }
 else   if (isNextMethodCallOfProgressionIterator(insn,values)) {
    RangeIteratorBasicValue numberIterator=(RangeIteratorBasicValue)values.get(0);
    return createNewBoxing(insn,AsmUtil.boxType(numberIterator.getValuesPrimitiveType()),numberIterator);
  }
 else {
    for (    BasicValue arg : values) {
      if (arg instanceof BoxedBasicValue) {
        onMethodCallWithBoxedValue((BoxedBasicValue)arg);
      }
    }
  }
  return value;
}
