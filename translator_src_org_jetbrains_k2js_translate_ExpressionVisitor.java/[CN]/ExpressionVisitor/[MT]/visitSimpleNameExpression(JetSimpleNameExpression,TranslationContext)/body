{
  JsName referencedName=getReferencedName(expression,context);
  if (referencedName != null) {
    if (context.namespaceScope().ownsName(referencedName)) {
      return context.getNamespaceQualifiedReference(referencedName);
    }
    JsNameRef nameRef=referencedName.makeRef();
    if (expression.getReferencedNameElementType() == JetTokens.FIELD_IDENTIFIER) {
      nameRef.setQualifier(new JsThisRef());
    }
    return nameRef;
  }
  PropertyAccessTranslator propertyAccessTranslator=new PropertyAccessTranslator(context);
  JsInvocation getterCall=propertyAccessTranslator.resolveAsPropertyGet(expression);
  if (getterCall != null) {
    return getterCall;
  }
  throw new AssertionError("Undefined name in this scope: " + expression.getReferencedName());
}
