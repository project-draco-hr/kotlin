{
  KtTypeParameterList typeParameterList=function.getTypeParameterList();
  PsiElement nameIdentifier=function.getNameIdentifier();
  if (typeParameterList != null && nameIdentifier != null && typeParameterList.getTextRange().getStartOffset() > nameIdentifier.getTextRange().getStartOffset()) {
    trace.report(DEPRECATED_TYPE_PARAMETER_SYNTAX.on(typeParameterList));
  }
  checkTypeParameterConstraints(function);
  DeclarationDescriptor containingDescriptor=functionDescriptor.getContainingDeclaration();
  boolean hasAbstractModifier=function.hasModifier(KtTokens.ABSTRACT_KEYWORD);
  boolean hasExternalModifier=function.hasModifier(KtTokens.EXTERNAL_KEYWORD);
  if (containingDescriptor instanceof ClassDescriptor) {
    ClassDescriptor classDescriptor=(ClassDescriptor)containingDescriptor;
    boolean inTrait=classDescriptor.getKind() == ClassKind.INTERFACE;
    if (hasAbstractModifier && !classCanHaveAbstractMembers(classDescriptor)) {
      trace.report(ABSTRACT_FUNCTION_IN_NON_ABSTRACT_CLASS.on(function,functionDescriptor.getName().asString(),classDescriptor));
    }
    if (hasAbstractModifier && inTrait) {
      trace.report(ABSTRACT_MODIFIER_IN_INTERFACE.on(function));
    }
    boolean hasBody=function.hasBody();
    if (hasBody && hasAbstractModifier) {
      trace.report(ABSTRACT_FUNCTION_WITH_BODY.on(function,functionDescriptor));
    }
    if (!hasBody && inTrait) {
      if (function.hasModifier(KtTokens.FINAL_KEYWORD) && !hasExternalModifier) {
        trace.report(FINAL_FUNCTION_WITH_NO_BODY.on(function,functionDescriptor));
      }
      if (function.hasModifier(KtTokens.PRIVATE_KEYWORD)) {
        trace.report(PRIVATE_FUNCTION_WITH_NO_BODY.on(function,functionDescriptor));
      }
    }
    if (!hasBody && !hasAbstractModifier && !hasExternalModifier&& !inTrait) {
      trace.report(NON_ABSTRACT_FUNCTION_WITH_NO_BODY.on(function,functionDescriptor));
    }
    return;
  }
  if (!function.hasBody() && !hasAbstractModifier && !hasExternalModifier) {
    trace.report(NON_MEMBER_FUNCTION_NO_BODY.on(function,functionDescriptor));
  }
  if (TypeUtilsKt.isNothing(functionDescriptor.getReturnType()) && !function.hasDeclaredReturnType()) {
    trace.report(IMPLICIT_NOTHING_RETURN_TYPE.on(function.getNameIdentifier() != null ? function.getNameIdentifier() : function));
  }
  checkFunctionExposedType(function,functionDescriptor);
}
