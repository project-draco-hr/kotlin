{
  visitedTypes.add(type);
  ClassDescriptor classDescriptor=TypeUtils.getClassDescriptor(type);
  if (classDescriptor != null) {
    if (DescriptorUtils.isLocal(classDescriptor) && DescriptorUtils.isAncestor(parentDeclarationDescriptor,classDescriptor,true)) {
      trace.report(diagnostic.on(reportOnDeclaration,classDescriptor));
    }
  }
  for (  TypeProjection projection : type.getArguments()) {
    JetType projectedType=projection.getType();
    if (!visitedTypes.contains(projectedType)) {
      checkLocalTypesExposedInType(reportOnDeclaration,parentDeclarationDescriptor,projectedType,diagnostic,visitedTypes);
    }
  }
}
