{
  for (  JetFile file : bodiesResolveContext.getFiles()) {
    checkModifiersAndAnnotationsInPackageDirective(file);
  }
  Map<JetClassOrObject,ClassDescriptorWithResolutionScopes> classes=bodiesResolveContext.getDeclaredClasses();
  for (  Map.Entry<JetClassOrObject,ClassDescriptorWithResolutionScopes> entry : classes.entrySet()) {
    JetClassOrObject classOrObject=entry.getKey();
    ClassDescriptorWithResolutionScopes classDescriptor=entry.getValue();
    checkSupertypesForConsistency(classDescriptor);
    checkTypesInClassHeader(classOrObject);
    if (classOrObject instanceof JetClass) {
      JetClass jetClass=(JetClass)classOrObject;
      checkClass(bodiesResolveContext,jetClass,classDescriptor);
      descriptorResolver.checkNamesInConstraints(jetClass,classDescriptor,classDescriptor.getScopeForClassHeaderResolution(),trace);
    }
 else     if (classOrObject instanceof JetObjectDeclaration) {
      checkObject((JetObjectDeclaration)classOrObject,classDescriptor);
    }
    modifiersChecker.checkModifiersForDeclaration(classOrObject,classDescriptor);
  }
  Map<JetNamedFunction,SimpleFunctionDescriptor> functions=bodiesResolveContext.getFunctions();
  for (  Map.Entry<JetNamedFunction,SimpleFunctionDescriptor> entry : functions.entrySet()) {
    JetNamedFunction function=entry.getKey();
    SimpleFunctionDescriptor functionDescriptor=entry.getValue();
    checkFunction(function,functionDescriptor);
    modifiersChecker.checkModifiersForDeclaration(function,functionDescriptor);
  }
  Map<JetProperty,PropertyDescriptor> properties=bodiesResolveContext.getProperties();
  for (  Map.Entry<JetProperty,PropertyDescriptor> entry : properties.entrySet()) {
    JetProperty property=entry.getKey();
    PropertyDescriptor propertyDescriptor=entry.getValue();
    checkProperty(property,propertyDescriptor);
    modifiersChecker.checkModifiersForDeclaration(property,propertyDescriptor);
  }
  for (  Map.Entry<JetSecondaryConstructor,ConstructorDescriptor> entry : bodiesResolveContext.getSecondaryConstructors().entrySet()) {
    ConstructorDescriptor constructorDescriptor=entry.getValue();
    JetSecondaryConstructor declaration=entry.getKey();
    checkConstructorDeclaration(constructorDescriptor,declaration);
  }
}
