{
  JetPackageDirective packageDirective=file.getPackageDirective();
  if (packageDirective == null)   return;
  JetModifierList modifierList=packageDirective.getModifierList();
  if (modifierList == null)   return;
  for (  JetAnnotationEntry annotationEntry : modifierList.getAnnotationEntries()) {
    JetConstructorCalleeExpression calleeExpression=annotationEntry.getCalleeExpression();
    if (calleeExpression != null) {
      JetReferenceExpression reference=calleeExpression.getConstructorReferenceExpression();
      if (reference != null) {
        trace.report(UNRESOLVED_REFERENCE.on(reference,reference));
      }
    }
  }
  AnnotationTargetChecker.INSTANCE$.check(packageDirective,trace,null);
  modifiersChecker.reportIllegalModifiers(modifierList,Arrays.asList(JetTokens.MODIFIER_KEYWORDS_ARRAY));
}
