{
  JsExpression result;
  result=resolveAsGlobalReference(expression);
  if (result != null) {
    return result;
  }
  result=resolveAsLocalReference(expression);
  if (result != null) {
    return result;
  }
  JsInvocation getterCall=Translation.propertyAccessTranslator(translationContext()).resolveAsPropertyGet(expression);
  if (getterCall != null) {
    return getterCall;
  }
  throw new AssertionError("Undefined name in this scope: " + expression.getReferencedName());
}
