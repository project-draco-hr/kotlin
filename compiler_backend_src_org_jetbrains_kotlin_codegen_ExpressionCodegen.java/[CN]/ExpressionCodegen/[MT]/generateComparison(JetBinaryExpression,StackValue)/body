{
  ResolvedCall<?> resolvedCall=CallUtilKt.getResolvedCallWithAssert(expression,bindingContext);
  JetExpression left=expression.getLeft();
  JetExpression right=expression.getRight();
  Type type;
  StackValue leftValue;
  StackValue rightValue;
  Type leftType=expressionType(left);
  Type rightType=expressionType(right);
  if (isPrimitive(leftType) && isPrimitive(rightType)) {
    type=comparisonOperandType(leftType,rightType);
    leftValue=gen(left);
    rightValue=gen(right);
  }
 else {
    type=Type.INT_TYPE;
    leftValue=invokeFunction(resolvedCall,receiver);
    rightValue=StackValue.constant(0,type);
  }
  return StackValue.cmp(expression.getOperationToken(),type,leftValue,rightValue);
}
