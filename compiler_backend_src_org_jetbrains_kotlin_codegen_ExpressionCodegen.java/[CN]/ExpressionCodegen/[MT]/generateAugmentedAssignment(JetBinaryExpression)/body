{
  ResolvedCall<?> resolvedCall=getResolvedCallWithAssert(expression,bindingContext);
  FunctionDescriptor descriptor=(FunctionDescriptor)resolvedCall.getResultingDescriptor();
  Callable callable=resolveToCallable(descriptor,false,resolvedCall);
  JetExpression lhs=expression.getLeft();
  Type lhsType=expressionType(lhs);
  boolean keepReturnValue=Boolean.TRUE.equals(bindingContext.get(VARIABLE_REASSIGNMENT,expression)) || !KotlinBuiltIns.getInstance().getUnitType().equals(descriptor.getReturnType());
  callAugAssignMethod(expression,resolvedCall,(Callable)callable,lhsType,keepReturnValue);
  return StackValue.none();
}
