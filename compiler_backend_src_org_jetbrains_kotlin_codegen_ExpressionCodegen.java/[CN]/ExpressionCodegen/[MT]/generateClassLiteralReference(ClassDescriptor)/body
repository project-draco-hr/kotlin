{
  return StackValue.operation(K_CLASS_TYPE,new Function1<InstructionAdapter,Unit>(){
    @Override public Unit invoke(    InstructionAdapter v){
      Type classAsmType=typeMapper.mapClass(descriptor);
      ModuleDescriptor module=DescriptorUtils.getContainingModule(descriptor);
      if (descriptor instanceof JavaClassDescriptor || module == module.getBuiltIns().getBuiltInsModule()) {
        putJavaLangClassInstance(v,classAsmType);
        v.invokestatic(REFLECTION,"foreignKotlinClass",Type.getMethodDescriptor(K_CLASS_TYPE,getType(Class.class)),false);
      }
 else {
        v.getstatic(classAsmType.getInternalName(),JvmAbi.KOTLIN_CLASS_FIELD_NAME,K_CLASS_TYPE.getDescriptor());
      }
      return Unit.INSTANCE$;
    }
  }
);
}
