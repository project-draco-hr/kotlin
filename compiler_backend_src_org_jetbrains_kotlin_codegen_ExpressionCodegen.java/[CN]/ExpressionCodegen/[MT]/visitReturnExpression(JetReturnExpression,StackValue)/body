{
  JetExpression returnedExpression=expression.getReturnedExpression();
  CallableMemberDescriptor descriptor=getContext().getContextDescriptor();
  NonLocalReturnInfo nonLocalReturn=getNonLocalReturnInfo(descriptor,expression);
  boolean isNonLocalReturn=nonLocalReturn != null;
  if (isNonLocalReturn && !state.isInlineEnabled()) {
    state.getDiagnostics().report(Errors.NON_LOCAL_RETURN_IN_DISABLED_INLINE.on(expression));
    genThrow(v,"java/lang/UnsupportedOperationException","Non-local returns are not allowed with inlining disabled");
    return StackValue.none();
  }
  Type returnType=isNonLocalReturn ? nonLocalReturn.returnType : this.returnType;
  if (returnedExpression != null) {
    gen(returnedExpression,returnType);
  }
  Label afterReturnLabel=new Label();
  generateFinallyBlocksIfNeeded(returnType,afterReturnLabel);
  if (isNonLocalReturn) {
    InlineCodegenUtil.generateGlobalReturnFlag(v,nonLocalReturn.labelName);
  }
  v.visitInsn(returnType.getOpcode(Opcodes.IRETURN));
  v.mark(afterReturnLabel);
  return StackValue.none();
}
