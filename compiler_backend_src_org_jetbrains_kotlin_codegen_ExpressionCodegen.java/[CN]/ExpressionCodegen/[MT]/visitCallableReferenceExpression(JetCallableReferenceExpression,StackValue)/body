{
  ResolvedCall<?> resolvedCall=getResolvedCallWithAssert(expression.getCallableReference(),bindingContext);
  FunctionDescriptor functionDescriptor=bindingContext.get(FUNCTION,expression);
  if (functionDescriptor != null) {
    FunctionReferenceGenerationStrategy strategy=new FunctionReferenceGenerationStrategy(state,functionDescriptor,resolvedCall);
    return genClosure(expression,functionDescriptor,strategy,null,KotlinSyntheticClass.Kind.CALLABLE_REFERENCE_WRAPPER,(FunctionDescriptor)resolvedCall.getResultingDescriptor());
  }
  VariableDescriptor variableDescriptor=bindingContext.get(VARIABLE,expression);
  if (variableDescriptor != null) {
    return generatePropertyReference(expression,variableDescriptor,resolvedCall);
  }
  throw new UnsupportedOperationException("Unsupported callable reference expression: " + expression.getText());
}
