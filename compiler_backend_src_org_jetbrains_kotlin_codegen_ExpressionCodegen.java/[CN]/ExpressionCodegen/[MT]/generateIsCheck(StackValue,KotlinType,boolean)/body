{
  return StackValue.operation(Type.BOOLEAN_TYPE,new Function1<InstructionAdapter,Unit>(){
    @Override public Unit invoke(    InstructionAdapter v){
      expressionToGen.put(OBJECT_TYPE,v);
      if (leaveExpressionOnStack) {
        v.dup();
      }
      Type type=boxType(asmType(kotlinType));
      if (TypeUtils.isReifiedTypeParameter(kotlinType)) {
        putReifiedOperationMarkerIfTypeIsReifiedParameter(kotlinType,ReifiedTypeInliner.OperationKind.IS);
        v.instanceOf(type);
        return null;
      }
      CodegenUtilKt.generateIsCheck(v,kotlinType,type);
      return null;
    }
  }
);
}
