{
  ClassDescriptor classDescriptor=CodegenBinding.anonymousClassForCallable(bindingContext,variableDescriptor);
  ClassBuilder classBuilder=state.getFactory().newVisitor(OtherOrigin(expression),typeMapper.mapClass(classDescriptor),expression.getContainingFile());
  @SuppressWarnings("unchecked") PropertyReferenceCodegen codegen=new PropertyReferenceCodegen(state,parentCodegen,context.intoAnonymousClass(classDescriptor,this,OwnerKind.IMPLEMENTATION),expression,classBuilder,classDescriptor,(ResolvedCall<VariableDescriptor>)resolvedCall);
  codegen.generate();
  return codegen.putInstanceOnStack();
}
