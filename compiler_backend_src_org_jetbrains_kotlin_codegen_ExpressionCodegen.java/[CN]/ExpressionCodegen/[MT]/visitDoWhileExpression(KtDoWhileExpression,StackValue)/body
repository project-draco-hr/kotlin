{
  Label beginLoopLabel=new Label();
  v.mark(beginLoopLabel);
  Label breakLabel=new Label();
  Label continueLabel=new Label();
  blockStackElements.push(new LoopBlockStackElement(breakLabel,continueLabel,targetLabel(expression)));
  PseudoInsnsKt.fakeAlwaysFalseIfeq(v,continueLabel);
  KtExpression body=expression.getBody();
  KtExpression condition=expression.getCondition();
  StackValue conditionValue;
  if (body instanceof KtBlockExpression) {
    List<KtExpression> doWhileStatements=((KtBlockExpression)body).getStatements();
    List<KtExpression> statements=new ArrayList<KtExpression>(doWhileStatements.size() + 1);
    statements.addAll(doWhileStatements);
    statements.add(condition);
    conditionValue=generateBlock(statements,false,continueLabel,null);
  }
 else {
    if (body != null) {
      gen(body,Type.VOID_TYPE);
    }
    v.mark(continueLabel);
    conditionValue=gen(condition);
  }
  BranchedValue.Companion.loopJump(conditionValue,beginLoopLabel,false,v);
  v.mark(breakLabel);
  blockStackElements.pop();
  return StackValue.none();
}
