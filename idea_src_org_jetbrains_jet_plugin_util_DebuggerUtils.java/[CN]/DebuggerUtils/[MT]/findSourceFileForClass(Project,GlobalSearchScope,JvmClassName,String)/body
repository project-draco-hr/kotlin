{
  FqName packageFqName=getPackageFqNameForClass(className);
  Collection<JetFile> filesInPackage=findFilesWithExactPackage(packageFqName,searchScope,project);
  Collection<JetFile> filesWithExactName=Collections2.filter(filesInPackage,new Predicate<JetFile>(){
    @Override public boolean apply(    @Nullable JetFile file){
      return file != null && file.getName().equals(fileName);
    }
  }
);
  if (filesWithExactName.isEmpty())   return null;
  if (filesWithExactName.size() == 1) {
    return filesWithExactName.iterator().next();
  }
  JetFile file=PsiCodegenPredictor.getFileForPackagePartName(filesWithExactName,className);
  if (file != null) {
    return file;
  }
  AnalyzeExhaust analyzeExhaust=ResolvePackage.getAnalysisResultsForElements(filesWithExactName);
  return PsiCodegenPredictor.getFileForCodegenNamedClass(analyzeExhaust.getModuleDescriptor(),analyzeExhaust.getBindingContext(),filesWithExactName,className.getInternalName());
}
