{
  serialize(prop.getVisibility());
  sb.append(" ");
  serialize(prop.getModality());
  sb.append(" ");
  if (!prop.getAnnotations().isEmpty()) {
    new Serializer(sb).serializeSeparated(prop.getAnnotations()," ");
    sb.append(" ");
  }
  if (!prop.getOverriddenDescriptors().isEmpty()) {
    sb.append("override /*").append(prop.getOverriddenDescriptors().size()).append("*/ ");
  }
  if (prop.getKind() != CallableMemberDescriptor.Kind.DECLARATION) {
    sb.append("/*");
    new Serializer(sb).serialize(prop.getKind());
    sb.append("*/ ");
  }
  if (prop.isVar()) {
    sb.append("var ");
  }
 else {
    sb.append("val ");
  }
  if (!prop.getTypeParameters().isEmpty()) {
    sb.append(" <");
    new Serializer(sb).serializeCommaSeparated(prop.getTypeParameters());
    sb.append("> ");
  }
  sb.append("!");
  if (prop.getReceiverParameter().exists()) {
    new TypeSerializer(sb).serialize(prop.getReceiverParameter().getType());
    sb.append(".");
  }
  sb.append(prop.getName());
  sb.append(": ");
  new TypeSerializer(sb).serialize(prop.getType());
  for (  PropertyAccessorDescriptor accessor : prop.getAccessors()) {
    serialize(accessor);
  }
}
