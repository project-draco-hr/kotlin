{
  serialize(fun.getVisibility());
  sb.append(" ");
  serialize(fun.getModality());
  sb.append(" ");
  List<AnnotationDescriptor> annotations=filterAnnotations(fun.getAnnotations());
  if (!annotations.isEmpty()) {
    new Serializer(checkPrimaryConstructors,sb).serializeSeparated(annotations," ");
    sb.append(" ");
  }
  if (!fun.getOverriddenDescriptors().isEmpty()) {
    sb.append("override /*").append(fun.getOverriddenDescriptors().size()).append("*/ ");
  }
  if (fun.getKind() != CallableMemberDescriptor.Kind.DECLARATION) {
    sb.append("/*");
    new Serializer(checkPrimaryConstructors,sb).serialize(fun.getKind());
    sb.append("*/ ");
  }
  if (fun instanceof ConstructorDescriptor) {
    if (((ConstructorDescriptor)fun).isPrimary() && checkPrimaryConstructors) {
      sb.append("/*primary constructor*/ ");
    }
 else {
      sb.append("/*constructor*/ ");
    }
  }
  sb.append("fun ");
  if (!fun.getTypeParameters().isEmpty()) {
    sb.append("<");
    new Serializer(checkPrimaryConstructors,sb).serializeCommaSeparated(fun.getTypeParameters());
    sb.append(">");
  }
  sb.append("!");
  serializeReceiver(fun);
  sb.append(fun.getName());
  sb.append("(");
  new TypeSerializer(sb).serializeCommaSeparated(fun.getValueParameters());
  sb.append("): ");
  JetType returnType=fun.getReturnType();
  if (returnType == null) {
    throw new IllegalStateException("No return type for " + fun);
  }
 else {
    new TypeSerializer(sb).serialize(returnType);
  }
}
