{
  PsiElement element=PsiTreeUtil.findElementOfClassAtRange(file,startOffset,endOffset,JetExpression.class);
  if (element == null || element.getTextRange().getStartOffset() != startOffset || element.getTextRange().getEndOffset() != endOffset) {
    throw new IntroduceRefactoringException(JetRefactoringBundle.message("cannot.refactor.not.expression"));
  }
 else   if (!(element instanceof JetExpression)) {
    throw new IntroduceRefactoringException(JetRefactoringBundle.message("cannot.refactor.not.expression"));
  }
 else   if (element instanceof JetBlockExpression) {
    List<JetElement> statements=((JetBlockExpression)element).getStatements();
    if (statements.size() == 1) {
      JetElement elem=statements.get(0);
      if (elem.getText().equals(element.getText()) && elem instanceof JetExpression) {
        return (JetExpression)elem;
      }
    }
  }
  return (JetExpression)element;
}
