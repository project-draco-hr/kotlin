{
  FeatureUsageTracker.getInstance().triggerFeatureUsed(GotoSuperAction.FEATURE_ID);
  PsiElement element=file.findElementAt(editor.getCaretModel().getOffset());
  if (element == null)   return;
  @SuppressWarnings("unchecked") JetDeclaration declaration=PsiTreeUtil.getParentOfType(element,JetNamedFunction.class,JetClass.class,JetProperty.class,JetObjectDeclaration.class);
  if (declaration == null)   return;
  DeclarationDescriptor descriptor=ResolvePackage.resolveToDescriptor(declaration);
  List<PsiElement> superDeclarations=findSuperDeclarations(descriptor);
  if (superDeclarations.isEmpty())   return;
  if (superDeclarations.size() == 1) {
    Navigatable navigatable=EditSourceUtil.getDescriptor(superDeclarations.get(0));
    if (navigatable != null && navigatable.canNavigate()) {
      navigatable.navigate(true);
    }
  }
 else {
    String message=getTitle(descriptor);
    PsiElement[] superDeclarationsArray=PsiUtilCore.toPsiElementArray(superDeclarations);
    JBPopup popup=descriptor instanceof ClassDescriptor ? NavigationUtil.getPsiElementPopup(superDeclarationsArray,message) : NavigationUtil.getPsiElementPopup(superDeclarationsArray,new JetFunctionPsiElementCellRenderer(),message);
    popup.showInBestPositionFor(editor);
  }
}
