{
  boolean needToRepeat=false;
  for (  LocalVariableNode localVariableNode : node.localVariables) {
    if (Type.getType(localVariableNode.desc).getSort() != Type.OBJECT) {
      continue;
    }
    List<BasicValue> usedValues=getValuesStoredOrLoadedToVariable(localVariableNode,node,frames);
    Collection<BasicValue> boxed=Collections2.filter(usedValues,new Predicate<BasicValue>(){
      @Override public boolean apply(      BasicValue input){
        return input instanceof BoxedBasicValue;
      }
    }
);
    if (boxed.isEmpty())     continue;
    final BoxedBasicValue firstBoxed=(BoxedBasicValue)boxed.iterator().next();
    if (!Collections2.filter(usedValues,new Predicate<BasicValue>(){
      @Override public boolean apply(      BasicValue input){
        return input == null || !(input instanceof BoxedBasicValue) || !((BoxedBasicValue)input).isSafeToRemove() || !((BoxedBasicValue)input).getPrimitiveType().equals(firstBoxed.getPrimitiveType());
      }
    }
).isEmpty()) {
      for (      BasicValue value : usedValues) {
        if (value instanceof BoxedBasicValue && ((BoxedBasicValue)value).isSafeToRemove()) {
          values.remove((BoxedBasicValue)value);
          needToRepeat=true;
        }
      }
    }
  }
  return needToRepeat;
}
