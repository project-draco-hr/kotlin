{
  Context.enter().setErrorReporter(new ErrorReporter(){
    @Override public void error(    String msg,    String loc,    int ln,    String src,    int col){
      throw new UncheckedJsParserException(new JsParserException(msg,ln,src,col,sourceNameStub));
    }
    @Override public EvaluatorException runtimeError(    String msg,    String loc,    int ln,    String src,    int col){
      throw new UncheckedJsParserException(new JsParserException(msg,ln,src,col,sourceNameStub));
    }
    @Override public void warning(    String msg,    String loc,    int ln,    String src,    int col){
    }
  }
);
  try {
    TokenStream ts=new TokenStream(r,sourceNameStub,rootSourceInfo.getLine());
    Parser parser=new Parser(new IRFactory(ts));
    Node topNode=(Node)parser.parse(ts);
    pushScope(scope);
    List<JsStatement> stmts=mapStatements(topNode);
    popScope();
    return stmts;
  }
 catch (  UncheckedJsParserException e) {
    throw e.getParserException();
  }
 finally {
    Context.exit();
  }
}
