{
synchronized (declarationAnalysisLock) {
    BindingTraceContext trace=new BindingTraceContext();
    incompleteJvmTrace=trace;
    AnalyzeExhaust analyzeExhaust;
    try {
      analyzeExhaust=AnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(project,JetFilesProvider.getInstance(project).allInScope(GlobalSearchScope.allScope(project)),trace,Collections.<AnalyzerScriptParameter>emptyList(),Predicates.<PsiFile>alwaysFalse(),true);
    }
  finally {
      incompleteJvmTrace=null;
    }
    return Result.<KotlinDeclarationsCache>create(new KotlinDeclarationsCacheImpl(analyzeExhaust),PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT);
  }
}
