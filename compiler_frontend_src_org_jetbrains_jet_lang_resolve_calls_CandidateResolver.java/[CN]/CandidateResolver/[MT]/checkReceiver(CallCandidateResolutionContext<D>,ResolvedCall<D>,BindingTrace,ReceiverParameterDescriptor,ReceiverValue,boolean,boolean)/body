{
  if (receiverParameter == null || !receiverArgument.exists())   return SUCCESS;
  JetType receiverArgumentType=receiverArgument.getType();
  JetType effectiveReceiverArgumentType=TypeUtils.makeNotNullable(receiverArgumentType);
  D candidateDescriptor=candidateCall.getCandidateDescriptor();
  if (!argumentTypeResolver.isSubtypeOfForArgumentType(effectiveReceiverArgumentType,receiverParameter.getType())) {
    if (CallResolverUtil.checkArgumentCannotBeReceiver(effectiveReceiverArgumentType,candidateDescriptor) && !(candidateDescriptor instanceof ExpressionAsFunctionDescriptor)) {
      return STRONG_ERROR;
    }
    if (!TypeUtils.dependsOnTypeParameters(receiverParameter.getType(),candidateDescriptor.getTypeParameters())) {
      context.tracing.wrongReceiverType(trace,receiverParameter,receiverArgument);
      return OTHER_ERROR;
    }
  }
  BindingContext bindingContext=trace.getBindingContext();
  boolean safeAccess=isExplicitReceiver && !implicitInvokeCheck && candidateCall.isSafeCall();
  AutoCastServiceImpl autoCastService=new AutoCastServiceImpl(context.dataFlowInfo,bindingContext);
  if (!safeAccess && !receiverParameter.getType().isNullable() && !autoCastService.isNotNull(receiverArgument)) {
    context.tracing.unsafeCall(trace,receiverArgumentType,implicitInvokeCheck);
    return UNSAFE_CALL_ERROR;
  }
  DataFlowValue receiverValue=DataFlowValueFactory.INSTANCE.createDataFlowValue(receiverArgument,bindingContext);
  if (safeAccess && !context.dataFlowInfo.getNullability(receiverValue).canBeNull()) {
    context.tracing.unnecessarySafeCall(trace,receiverArgumentType);
  }
  return SUCCESS;
}
