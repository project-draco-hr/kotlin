{
  return expression.accept(new JetVisitor<JetExpression,Void>(){
    @Nullable private JetExpression visitInnerExpression(    @Nullable JetElement expression){
      if (expression == null)       return null;
      return expression.accept(this,null);
    }
    @Override public JetExpression visitQualifiedExpression(    JetQualifiedExpression expression,    Void data){
      return visitInnerExpression(expression.getSelectorExpression());
    }
    @Override public JetExpression visitExpression(    JetExpression expression,    Void data){
      return expression;
    }
    @Override public JetExpression visitParenthesizedExpression(    JetParenthesizedExpression expression,    Void data){
      return visitInnerExpression(expression.getExpression());
    }
    @Override public JetExpression visitPrefixExpression(    JetPrefixExpression expression,    Void data){
      return visitInnerExpression(JetPsiUtil.getBaseExpressionIfLabeledExpression(expression));
    }
    @Override public JetExpression visitBlockExpression(    JetBlockExpression expression,    Void data){
      JetElement lastStatement=JetPsiUtil.getLastStatementInABlock(expression);
      if (lastStatement != null) {
        return visitInnerExpression(lastStatement);
      }
      return expression;
    }
    @Override public JetExpression visitBinaryExpression(    JetBinaryExpression expression,    Void data){
      return ExpressionTypingUtils.isBinaryExpressionDependentOnExpectedType(expression) ? expression : null;
    }
  }
,null);
}
