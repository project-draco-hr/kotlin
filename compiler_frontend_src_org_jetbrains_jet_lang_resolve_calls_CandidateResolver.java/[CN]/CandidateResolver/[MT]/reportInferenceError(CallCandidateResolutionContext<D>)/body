{
  ResolvedCallImpl<D> resolvedCall=context.candidateCall;
  ConstraintSystem constraintSystem=resolvedCall.getConstraintSystem();
  resolvedCall.setResultingSubstitutor(constraintSystem.getResultingSubstitutor());
  completeNestedCallsInference(context);
  List<JetType> argumentTypes=checkValueArgumentTypes(context,resolvedCall,context.trace,RESOLVE_FUNCTION_ARGUMENTS).argumentTypes;
  JetType receiverType=resolvedCall.getReceiverArgument().exists() ? resolvedCall.getReceiverArgument().getType() : null;
  InferenceErrorData.ExtendedInferenceErrorData errorData=InferenceErrorData.create(resolvedCall.getCandidateDescriptor(),constraintSystem,argumentTypes,receiverType,context.expectedType);
  context.tracing.typeInferenceFailed(context.trace,errorData);
  resolvedCall.addStatus(ResolutionStatus.OTHER_ERROR);
  if (!CallResolverUtil.hasInferredReturnType(resolvedCall))   return null;
  return resolvedCall.getResultingDescriptor().getReturnType();
}
