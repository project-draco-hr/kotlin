{
  JetType effectiveExpectedType=getEffectiveExpectedType(valueParameterDescriptor,valueArgument);
  JetExpression argumentExpression=valueArgument.getArgumentExpression();
  JetType expectedType=substitutor.substitute(effectiveExpectedType,Variance.INVARIANT);
  DataFlowInfo dataFlowInfoForArgument=context.candidateCall.getDataFlowInfoForArguments().getInfo(valueArgument);
  CallResolutionContext<?> newContext=context.replaceExpectedType(expectedType).replaceDataFlowInfo(dataFlowInfoForArgument);
  JetTypeInfo typeInfoForCall=argumentTypeResolver.getArgumentTypeInfo(argumentExpression,newContext,resolveFunctionArgumentBodies);
  context.candidateCall.getDataFlowInfoForArguments().updateInfo(valueArgument,typeInfoForCall.getDataFlowInfo());
  JetType type=updateResultTypeForSmartCasts(typeInfoForCall.getType(),argumentExpression,dataFlowInfoForArgument,context.trace);
  constraintSystem.addSubtypeConstraint(type,effectiveExpectedType,ConstraintPosition.getValueParameterPosition(valueParameterDescriptor.getIndex()));
}
