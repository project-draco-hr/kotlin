{
  ClassId classId=nameResolver.getClassId(classProto.getFqName());
  KotlinJvmBinaryClass kotlinClass=findKotlinClassById(classId);
  if (kotlinClass == null) {
    getErrorReporter().reportLoadingError("Kotlin class for loading class annotations is not found: " + classId.asSingleFqName(),null);
    return Collections.emptyList();
  }
  final List<AnnotationDescriptor> result=new ArrayList<AnnotationDescriptor>(1);
  kotlinClass.loadClassAnnotations(new KotlinJvmBinaryClass.AnnotationVisitor(){
    @Nullable @Override public KotlinJvmBinaryClass.AnnotationArgumentVisitor visitAnnotation(    @NotNull ClassId classId){
      return resolveAnnotation(classId,result,module);
    }
    @Override public void visitEnd(){
    }
  }
);
  return result;
}
