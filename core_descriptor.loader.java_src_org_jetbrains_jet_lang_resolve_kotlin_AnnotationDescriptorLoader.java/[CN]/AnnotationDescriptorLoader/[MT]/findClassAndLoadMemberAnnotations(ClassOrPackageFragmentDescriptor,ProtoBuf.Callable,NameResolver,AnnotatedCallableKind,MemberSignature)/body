{
  final KotlinJvmBinaryClass kotlinClass=findClassWithAnnotationsAndInitializers(container,proto,nameResolver,kind);
  if (kotlinClass == null) {
    errorReporter.reportLoadingError("Kotlin class for loading member annotations is not found: " + container,null);
    return Annotations.EMPTY;
  }
  return new DeserializedAnnotations(storageManager,new Function0<List<AnnotationDescriptor>>(){
    @Override public List<AnnotationDescriptor> invoke(){
      List<AnnotationDescriptor> descriptors=storage.getStorageForClass(kotlinClass).getMemberAnnotations().get(signature);
      return descriptors == null ? Collections.<AnnotationDescriptor>emptyList() : descriptors;
    }
  }
);
}
