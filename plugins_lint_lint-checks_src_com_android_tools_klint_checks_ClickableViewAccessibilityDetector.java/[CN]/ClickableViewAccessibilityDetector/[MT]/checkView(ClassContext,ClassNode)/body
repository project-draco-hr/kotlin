{
  MethodNode onTouchEvent=findMethod(classNode.methods,ON_TOUCH_EVENT,ON_TOUCH_EVENT_SIG);
  MethodNode performClick=findMethod(classNode.methods,PERFORM_CLICK,PERFORM_CLICK_SIG);
  if (onTouchEvent != null) {
    if (performClick == null) {
      String message=String.format("Custom view `%1$s` overrides `onTouchEvent` but not `performClick`",classNode.name);
      context.report(ISSUE,onTouchEvent,null,context.getLocation(onTouchEvent,classNode),message);
    }
 else {
      AbstractInsnNode performClickInOnTouchEventInsnNode=findMethodCallInstruction(onTouchEvent.instructions,classNode.name,PERFORM_CLICK,PERFORM_CLICK_SIG);
      if (performClickInOnTouchEventInsnNode == null) {
        String message=String.format("`%1$s#onTouchEvent` should call `%1$s#performClick` when a click is detected",classNode.name);
        context.report(ISSUE,onTouchEvent,null,context.getLocation(onTouchEvent,classNode),message);
      }
    }
  }
  if (performClick != null) {
    AbstractInsnNode superPerformClickInPerformClickInsnNode=findMethodCallInstruction(performClick.instructions,classNode.superName,PERFORM_CLICK,PERFORM_CLICK_SIG);
    if (superPerformClickInPerformClickInsnNode == null) {
      String message=String.format("`%1$s#performClick` should call `super#performClick`",classNode.name);
      context.report(ISSUE,performClick,null,context.getLocation(performClick,classNode),message);
    }
  }
}
