{
  Project project=CommonDataKeys.PROJECT.getData(e.getDataContext());
  if (project == null) {
    return;
  }
  if (ConfigureKotlinInProjectUtils.isProjectConfigured(project)) {
    Messages.showInfoMessage("All modules with kotlin files are configured","Configure Project Info");
    return;
  }
  Collection<KotlinProjectConfigurator> configurators=Collections2.filter(ConfigureKotlinInProjectUtils.getAbleToRunConfigurators(project),new Predicate<KotlinProjectConfigurator>(){
    @Override public boolean apply(    KotlinProjectConfigurator input){
      return !input.getName().equals(KotlinJsModuleConfigurator.NAME);
    }
  }
);
  if (configurators.size() == 1) {
    configurators.iterator().next().configure(project);
  }
 else   if (configurators.isEmpty()) {
    Messages.showErrorDialog("There aren't configurators available","Configure Kotlin in Project");
  }
 else {
    Messages.showErrorDialog("More than one configurator are available","Configure Kotlin in Project");
    ConfigureKotlinInProjectUtils.showConfigureKotlinNotificationIfNeeded(project);
  }
}
