{
  super.setUp();
  String sdkPath=getTestSdkPath();
  final TestFixtureBuilder<IdeaProjectTestFixture> projectBuilder=IdeaTestFixtureFactory.getFixtureFactory().createFixtureBuilder(getName());
  myFixture=JavaTestFixtureFactory.getFixtureFactory().createCodeInsightFixture(projectBuilder.getFixture());
  final JavaModuleFixtureBuilder moduleFixtureBuilder=projectBuilder.addModule(JavaModuleFixtureBuilder.class);
  final String dirPath=myFixture.getTempDirPath() + getContentRootPath();
  final File dir=new File(dirPath);
  if (!dir.exists()) {
    assertTrue(dir.mkdirs());
  }
  tuneModule(moduleFixtureBuilder,dirPath);
  final ArrayList<MyAdditionalModuleData> modules=new ArrayList<MyAdditionalModuleData>();
  configureAdditionalModules(projectBuilder,modules);
  myFixture.setUp();
  myFixture.setTestDataPath(getTestDataPath());
  myModule=moduleFixtureBuilder.getFixture().getModule();
  createManifest();
  myFacet=addAndroidFacet(myModule,sdkPath,getPlatformDir(),isToAddSdk());
  myFixture.copyDirectoryToProject(getResDir(),"res");
  myAdditionalModules=new ArrayList<Module>();
  for (  MyAdditionalModuleData data : modules) {
    final Module additionalModule=data.myModuleFixtureBuilder.getFixture().getModule();
    myAdditionalModules.add(additionalModule);
    final AndroidFacet facet=addAndroidFacet(additionalModule,sdkPath,getPlatformDir());
    facet.setLibraryProject(data.myLibrary);
    final String rootPath=getContentRootPath(data.myDirName);
    myFixture.copyDirectoryToProject("res",rootPath + "/res");
    myFixture.copyFileToProject(SdkConstants.FN_ANDROID_MANIFEST_XML,rootPath + '/' + SdkConstants.FN_ANDROID_MANIFEST_XML);
    ModuleRootModificationUtil.addDependency(myModule,additionalModule);
  }
  if (!myCreateManifest) {
    deleteManifest();
  }
  if (RenderSecurityManager.RESTRICT_READS) {
    RenderSecurityManager.sEnabled=false;
  }
}
