{
  super.setUp();
  String sdkPath=getTestSdkPath();
  IdeaTestFixtureFactory factory=IdeaTestFixtureFactory.getFixtureFactory();
  TestFixtureBuilder<IdeaProjectTestFixture> fixtureBuilder=factory.createLightFixtureBuilder(new LightAndroidProjectDescriptor());
  final IdeaProjectTestFixture fixture=fixtureBuilder.getFixture();
  myFixture=IdeaTestFixtureFactory.getFixtureFactory().createCodeInsightFixture(fixture,new LightTempDirTestFixtureImpl(true));
  final String dirPath=myFixture.getTempDirPath() + getContentRootPath();
  final File dir=new File(dirPath);
  if (!dir.exists()) {
    assertTrue(dir.mkdirs());
  }
  myFixture.setUp();
  myFixture.setTestDataPath(getTestDataPath());
  myModule=myFixture.getModule();
  createManifest();
  myFacet=addAndroidFacet(myModule,sdkPath,getPlatformDir(),isToAddSdk());
  if (!myCreateManifest) {
    deleteManifest();
  }
  if (RenderSecurityManager.RESTRICT_READS) {
    RenderSecurityManager.sEnabled=false;
  }
  ((StartupManagerImpl)StartupManager.getInstance(getProject())).runPostStartupActivities();
  VfsRootAccess.allowRootAccess(JetTestCaseBuilder.getHomeDirectory());
  kotlinInternalModeOriginalValue=KotlinInternalMode.OBJECT$.getEnabled();
  KotlinInternalMode.OBJECT$.setEnabled(true);
}
