{
  DeclarationDescriptor contextClass=owner.getContextDescriptor().getContainingDeclaration();
  if (kind != OwnerKind.TRAIT_IMPL && contextClass instanceof ClassDescriptor && ((ClassDescriptor)contextClass).getKind() == ClassKind.TRAIT) {
    return;
  }
  if (!isDefaultNeeded(functionDescriptor)) {
    return;
  }
  int flags=getVisibilityAccessFlag(functionDescriptor) | getDeprecatedAccessFlag(functionDescriptor) | ACC_SYNTHETIC| (functionDescriptor instanceof ConstructorDescriptor ? 0 : ACC_STATIC);
  Method defaultMethod=typeMapper.mapDefaultMethod(functionDescriptor,kind,owner);
  MethodVisitor mv=v.newMethod(Synthetic(function,functionDescriptor),flags,defaultMethod.getName(),defaultMethod.getDescriptor(),null,getThrownExceptions(functionDescriptor,typeMapper));
  if (state.getClassBuilderMode() == ClassBuilderMode.FULL) {
    if (this.owner instanceof PackageFacadeContext) {
      mv.visitCode();
      generatePackageDelegateMethodBody(mv,defaultMethod,(PackageFacadeContext)this.owner);
      endVisit(mv,"default method delegation",getSourceFromDescriptor(functionDescriptor));
    }
 else {
      mv.visitCode();
      generateDefaultImplBody(owner,functionDescriptor,mv,loadStrategy,function,memberCodegen);
      endVisit(mv,"default method",getSourceFromDescriptor(functionDescriptor));
    }
  }
}
