{
  Iterator<ValueParameterDescriptor> valueParameterIterator=valueParameters.iterator();
  List<JvmMethodParameterSignature> params=jvmMethodSignature.getValueParameters();
  int shift=0;
  if (!isStatic) {
    if (thisType != null) {
      mv.visitLocalVariable("this",thisType.getDescriptor(),null,methodBegin,methodEnd,shift);
    }
 else {
    }
    shift++;
  }
  for (int i=0; i < params.size(); i++) {
    JvmMethodParameterSignature param=params.get(i);
    JvmMethodParameterKind kind=param.getKind();
    String parameterName;
    if (kind == JvmMethodParameterKind.VALUE) {
      ValueParameterDescriptor parameter=valueParameterIterator.next();
      List<VariableDescriptor> destructuringVariables=ValueParameterDescriptorImpl.getDestructuringVariablesOrNull(parameter);
      parameterName=destructuringVariables == null ? parameter.getName().asString() : "$" + joinParameterNames(destructuringVariables);
    }
 else {
      String lowercaseKind=kind.name().toLowerCase();
      parameterName=needIndexForVar(kind) ? "$" + lowercaseKind + "$"+ i : "$" + lowercaseKind;
    }
    Type type=param.getAsmType();
    mv.visitLocalVariable(parameterName,type.getDescriptor(),null,methodBegin,methodEnd,shift);
    shift+=type.getSize();
  }
  for (  ValueParameterDescriptor parameter : valueParameters) {
    List<VariableDescriptor> destructuringVariables=ValueParameterDescriptorImpl.getDestructuringVariablesOrNull(parameter);
    if (destructuringVariables == null)     continue;
    for (    VariableDescriptor entry : destructuringVariables) {
      Type type=typeMapper.mapType(entry.getType());
      mv.visitLocalVariable(entry.getName().asString(),type.getDescriptor(),null,methodBegin,methodEnd,shift);
      shift+=type.getSize();
    }
  }
}
