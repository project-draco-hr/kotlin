{
  MethodVisitor mv=v.newMethod(namespace,ACC_PUBLIC | ACC_STATIC,"<clinit>","()V",null,null);
  mv.visitCode();
  FrameMap frameMap=new FrameMap();
  ExpressionCodegen codegen=new ExpressionCodegen(mv,frameMap,Type.VOID_TYPE,ClassContext.STATIC,state);
  for (  JetDeclaration declaration : namespace.getDeclarations()) {
    if (declaration instanceof JetProperty) {
      final JetExpression initializer=((JetProperty)declaration).getInitializer();
      if (initializer != null && !(initializer instanceof JetConstantExpression)) {
        final PropertyDescriptor descriptor=(PropertyDescriptor)state.getBindingContext().get(BindingContext.VARIABLE,declaration);
        codegen.genToJVMStack(initializer);
        codegen.intermediateValueForProperty(descriptor,true,false,false).store(new InstructionAdapter(mv));
      }
    }
  }
  mv.visitInsn(RETURN);
  mv.visitMaxs(0,0);
  mv.visitEnd();
}
