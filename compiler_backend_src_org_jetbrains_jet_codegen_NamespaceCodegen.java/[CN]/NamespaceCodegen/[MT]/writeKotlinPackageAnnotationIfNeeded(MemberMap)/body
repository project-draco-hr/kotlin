{
  if (state.getClassBuilderMode() != ClassBuilderMode.FULL) {
    return;
  }
  for (  JetFile file : files) {
    if (file.isScript())     return;
  }
  DescriptorSerializer serializer=new DescriptorSerializer(new JavaSerializerExtension(members));
  ProtoBuf.Package packageProto=serializer.packageProto(descriptor).build();
  if (packageProto.getMemberCount() == 0)   return;
  PackageData data=new PackageData(createNameResolver(serializer.getNameTable()),packageProto);
  AnnotationVisitor av=v.getClassBuilder().newAnnotation(JvmAnnotationNames.KOTLIN_PACKAGE.getDescriptor(),true);
  av.visit(JvmAnnotationNames.ABI_VERSION_FIELD_NAME,JvmAbi.VERSION);
  AnnotationVisitor array=av.visitArray(JvmAnnotationNames.DATA_FIELD_NAME);
  for (  String string : BitEncoding.encodeBytes(data.toBytes())) {
    array.visit(null,string);
  }
  array.visitEnd();
  av.visitEnd();
}
