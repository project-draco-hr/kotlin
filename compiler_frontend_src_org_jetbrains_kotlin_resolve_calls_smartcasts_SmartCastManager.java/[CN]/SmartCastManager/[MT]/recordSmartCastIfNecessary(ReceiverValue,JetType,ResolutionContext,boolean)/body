{
  if (!(receiver instanceof ExpressionReceiver))   return true;
  receiverParameterType=safeAccess ? TypeUtils.makeNullable(receiverParameterType) : receiverParameterType;
  if (ArgumentTypeResolver.isSubtypeOfForArgumentType(receiver.getType(),receiverParameterType)) {
    return true;
  }
  Collection<JetType> smartCastTypesExcludingReceiver=getSmartCastVariantsExcludingReceiver(context,receiver);
  JetType smartCastSubType=getSmartCastSubType(receiverParameterType,smartCastTypesExcludingReceiver);
  if (smartCastSubType == null)   return true;
  JetExpression expression=((ExpressionReceiver)receiver).getExpression();
  DataFlowValue dataFlowValue=DataFlowValueFactory.createDataFlowValue(receiver,context);
  return recordCastOrError(expression,smartCastSubType,context.trace,dataFlowValue.isPredictable(),true);
}
