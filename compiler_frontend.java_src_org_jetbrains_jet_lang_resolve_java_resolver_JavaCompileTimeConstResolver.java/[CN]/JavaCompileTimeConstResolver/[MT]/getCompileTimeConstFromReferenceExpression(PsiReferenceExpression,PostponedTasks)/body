{
  PsiElement resolveElement=value.resolve();
  if (resolveElement instanceof PsiEnumConstant) {
    PsiElement psiElement=resolveElement.getParent();
    if (psiElement instanceof PsiClass) {
      PsiClass psiClass=(PsiClass)psiElement;
      String fqName=psiClass.getQualifiedName();
      if (fqName == null) {
        return null;
      }
      ClassDescriptor classDescriptor=classResolver.resolveClass(new FqName(fqName),INCLUDE_KOTLIN_SOURCES,taskList);
      if (classDescriptor == null)       return null;
      JetScope scope=DescriptorUtils.getEnumEntriesScope(classDescriptor);
      Name identifier=Name.identifier(((PsiEnumConstant)resolveElement).getName());
      Collection<VariableDescriptor> properties=scope.getProperties(identifier);
      for (      VariableDescriptor variableDescriptor : properties) {
        if (variableDescriptor.getReceiverParameter() == null) {
          return new EnumValue((PropertyDescriptor)variableDescriptor);
        }
      }
      return null;
    }
  }
  return null;
}
