{
  Object literalValue=value.getValue();
  if (literalValue instanceof String) {
    return new StringValue((String)literalValue);
  }
 else   if (literalValue instanceof Byte) {
    return new ByteValue((Byte)literalValue);
  }
 else   if (literalValue instanceof Short) {
    return new ShortValue((Short)literalValue);
  }
 else   if (literalValue instanceof Character) {
    return new CharValue((Character)literalValue);
  }
 else   if (literalValue instanceof Integer) {
    KotlinBuiltIns builtIns=KotlinBuiltIns.getInstance();
    if (builtIns.getShortType().equals(expectedType)) {
      return new ShortValue(((Integer)literalValue).shortValue());
    }
 else     if (builtIns.getByteType().equals(expectedType)) {
      return new ByteValue(((Integer)literalValue).byteValue());
    }
 else     if (builtIns.getCharType().equals(expectedType)) {
      return new CharValue((char)((Integer)literalValue).intValue());
    }
    return new IntValue((Integer)literalValue);
  }
 else   if (literalValue instanceof Long) {
    return new LongValue((Long)literalValue);
  }
 else   if (literalValue instanceof Float) {
    return new FloatValue((Float)literalValue);
  }
 else   if (literalValue instanceof Double) {
    return new DoubleValue((Double)literalValue);
  }
 else   if (literalValue instanceof Boolean) {
    return ((Boolean)literalValue) ? BooleanValue.TRUE : BooleanValue.FALSE;
  }
 else   if (literalValue == null) {
    return NullValue.NULL;
  }
  return null;
}
