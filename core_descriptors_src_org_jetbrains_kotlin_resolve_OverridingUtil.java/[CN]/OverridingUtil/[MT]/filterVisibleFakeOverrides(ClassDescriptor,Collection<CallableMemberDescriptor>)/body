{
  return KotlinPackage.filter(toFilter,new Function1<CallableMemberDescriptor,Boolean>(){
    @Override public Boolean invoke(    CallableMemberDescriptor descriptor){
      return !Visibilities.isPrivate(descriptor.getVisibility()) && Visibilities.isVisible(ReceiverValue.IRRELEVANT_RECEIVER,descriptor,current);
    }
  }
);
}
