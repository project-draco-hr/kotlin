{
  List<KotlinType> superBounds=superTypeParameter.getUpperBounds();
  List<KotlinType> subBounds=new ArrayList<KotlinType>(subTypeParameter.getUpperBounds());
  if (superBounds.size() != subBounds.size())   return false;
  outer:   for (  KotlinType superBound : superBounds) {
    ListIterator<KotlinType> it=subBounds.listIterator();
    while (it.hasNext()) {
      KotlinType subBound=it.next();
      if (areTypesEquivalent(superBound,subBound,typeChecker)) {
        it.remove();
        continue outer;
      }
    }
    return false;
  }
  return true;
}
