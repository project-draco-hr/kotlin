{
  Collection<CallableMemberDescriptor> bound=new ArrayList<CallableMemberDescriptor>(descriptorsFromSuper.size());
  Collection<CallableMemberDescriptor> overridden=SmartSet.create();
  for (  CallableMemberDescriptor fromSupertype : descriptorsFromSuper) {
    OverrideCompatibilityInfo.Result result=DEFAULT.isOverridableBy(fromSupertype,fromCurrent,current).getResult();
    boolean isVisibleForOverride=isVisibleForOverride(fromCurrent,fromSupertype);
switch (result) {
case OVERRIDABLE:
      if (isVisibleForOverride) {
        overridden.add(fromSupertype);
      }
    bound.add(fromSupertype);
  break;
case CONFLICT:
if (isVisibleForOverride) {
  strategy.overrideConflict(fromSupertype,fromCurrent);
}
bound.add(fromSupertype);
break;
case INCOMPATIBLE:
break;
}
}
strategy.setOverriddenDescriptors(fromCurrent,overridden);
return bound;
}
