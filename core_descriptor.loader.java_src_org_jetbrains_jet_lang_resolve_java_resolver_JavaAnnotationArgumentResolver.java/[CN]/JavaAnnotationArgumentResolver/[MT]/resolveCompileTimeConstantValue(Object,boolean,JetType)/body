{
  if (value instanceof String) {
    return new StringValue((String)value,canBeUseInAnnotation);
  }
 else   if (value instanceof Byte) {
    return new ByteValue((Byte)value,canBeUseInAnnotation);
  }
 else   if (value instanceof Short) {
    return new ShortValue((Short)value,canBeUseInAnnotation);
  }
 else   if (value instanceof Character) {
    return new CharValue((Character)value,canBeUseInAnnotation);
  }
 else   if (value instanceof Integer) {
    KotlinBuiltIns builtIns=KotlinBuiltIns.getInstance();
    Integer integer=(Integer)value;
    if (builtIns.getShortType().equals(expectedType)) {
      return new ShortValue(integer.shortValue(),canBeUseInAnnotation);
    }
 else     if (builtIns.getByteType().equals(expectedType)) {
      return new ByteValue(integer.byteValue(),canBeUseInAnnotation);
    }
 else     if (builtIns.getCharType().equals(expectedType)) {
      return new CharValue((char)integer.intValue(),canBeUseInAnnotation);
    }
    return new IntValue(integer,canBeUseInAnnotation);
  }
 else   if (value instanceof Long) {
    return new LongValue((Long)value,canBeUseInAnnotation);
  }
 else   if (value instanceof Float) {
    return new FloatValue((Float)value,canBeUseInAnnotation);
  }
 else   if (value instanceof Double) {
    return new DoubleValue((Double)value,canBeUseInAnnotation);
  }
 else   if (value instanceof Boolean) {
    return new BooleanValue((Boolean)value,canBeUseInAnnotation);
  }
 else   if (value == null) {
    return NullValue.NULL;
  }
  return null;
}
