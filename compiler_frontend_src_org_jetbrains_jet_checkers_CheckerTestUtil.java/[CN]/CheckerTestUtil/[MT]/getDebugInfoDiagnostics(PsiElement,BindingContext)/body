{
  final List<Diagnostic> debugAnnotations=Lists.newArrayList();
  DebugInfoUtil.markDebugAnnotations(root,bindingContext,new DebugInfoUtil.DebugInfoReporter(){
    @Override public void reportErrorElement(    @NotNull JetReferenceExpression expression){
      newDiagnostic(expression,DebugInfoDiagnosticFactory.ERROR_ELEMENT);
    }
    @Override public void reportMissingUnresolved(    @NotNull JetReferenceExpression expression){
      newDiagnostic(expression,DebugInfoDiagnosticFactory.MISSING_UNRESOLVED);
    }
    @Override public void reportUnresolvedWithTarget(    @NotNull JetReferenceExpression expression,    @NotNull String target){
      newDiagnostic(expression,DebugInfoDiagnosticFactory.UNRESOLVED_WITH_TARGET);
    }
    private void newDiagnostic(    JetReferenceExpression expression,    DebugInfoDiagnosticFactory factory){
      debugAnnotations.add(new DebugInfoDiagnostic(expression,factory));
    }
  }
);
  return debugAnnotations;
}
