{
  List<Diagnostic> diagnostics=new ArrayList<Diagnostic>();
  diagnostics.addAll(Collections2.filter(bindingContext.getDiagnostics().all(),new Predicate<Diagnostic>(){
    @Override public boolean apply(    Diagnostic diagnostic){
      return PsiTreeUtil.isAncestor(root,diagnostic.getPsiElement(),false);
    }
  }
));
  for (  PsiErrorElement errorElement : AnalyzingUtils.getSyntaxErrorRanges(root)) {
    diagnostics.add(new SyntaxErrorDiagnostic(errorElement));
  }
  List<Diagnostic> debugAnnotations=getDebugInfoDiagnostics(root,bindingContext,markDynamicCalls);
  diagnostics.addAll(debugAnnotations);
  return diagnostics;
}
