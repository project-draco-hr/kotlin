{
  Collection<JetClassOrObject> classOrObjectDeclarations=declarationProvider.getClassOrObjectDeclarations(name);
  return Lists.newArrayList(ContainerUtil.mapNotNull(classOrObjectDeclarations,new Function<JetClassOrObject,ClassDescriptor>(){
    @Override public ClassDescriptor fun(    JetClassOrObject classOrObject){
      if (object != declaresObjectOrEnumConstant(classOrObject))       return null;
      return new LazyClassDescriptor(resolveSession,thisDescriptor,name,JetClassInfoUtil.createClassLikeInfo(classOrObject));
    }
  }
));
}
