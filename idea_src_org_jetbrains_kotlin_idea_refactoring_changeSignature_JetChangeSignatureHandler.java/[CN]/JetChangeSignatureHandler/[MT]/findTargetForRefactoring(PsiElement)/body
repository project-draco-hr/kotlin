{
  PsiElement elementParent=element.getParent();
  if ((elementParent instanceof JetNamedFunction || elementParent instanceof JetClass || elementParent instanceof JetProperty) && ((JetNamedDeclaration)elementParent).getNameIdentifier() == element)   return elementParent;
  if (elementParent instanceof JetParameter) {
    JetParameter parameter=(JetParameter)elementParent;
    JetPrimaryConstructor primaryConstructor=PsiTreeUtil.getParentOfType(parameter,JetPrimaryConstructor.class);
    if (parameter.hasValOrVar() && (parameter.getNameIdentifier() == element || parameter.getValOrVarKeyword() == element) && primaryConstructor != null && primaryConstructor.getValueParameterList() == parameter.getParent())     return parameter;
  }
  if (elementParent instanceof JetSecondaryConstructor && ((JetSecondaryConstructor)elementParent).getConstructorKeyword() == element)   return elementParent;
  if (PsiTreeUtil.getParentOfType(element,JetParameterList.class) != null) {
    return PsiTreeUtil.getParentOfType(element,JetFunction.class,JetProperty.class,JetClass.class);
  }
  JetTypeParameterList typeParameterList=PsiTreeUtil.getParentOfType(element,JetTypeParameterList.class);
  if (typeParameterList != null) {
    return PsiTreeUtil.getParentOfType(typeParameterList,JetFunction.class,JetProperty.class,JetClass.class);
  }
  JetExpression calleeExpr;
  JetCallElement call=PsiTreeUtil.getParentOfType(element,JetCallExpression.class,JetDelegatorToSuperCall.class,JetConstructorDelegationCall.class);
  if (call != null) {
    calleeExpr=call.getCalleeExpression();
  }
 else {
    calleeExpr=PsiTreeUtil.getParentOfType(element,JetSimpleNameExpression.class);
  }
  if (calleeExpr instanceof JetConstructorCalleeExpression) {
    calleeExpr=((JetConstructorCalleeExpression)calleeExpr).getConstructorReferenceExpression();
  }
  if (calleeExpr instanceof JetSimpleNameExpression || calleeExpr instanceof JetConstructorDelegationReferenceExpression) {
    JetElement jetElement=PsiTreeUtil.getParentOfType(element,JetElement.class);
    if (jetElement == null)     return null;
    BindingContext bindingContext=ResolvePackage.analyze(jetElement,BodyResolveMode.FULL);
    DeclarationDescriptor descriptor=bindingContext.get(BindingContext.REFERENCE_TARGET,(JetReferenceExpression)calleeExpr);
    if (descriptor instanceof ClassDescriptor || descriptor instanceof CallableDescriptor)     return calleeExpr;
  }
  return null;
}
