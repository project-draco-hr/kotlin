{
  PsiClassType.ClassResolveResult classResolveResult=classType.getPsi().resolveGenerics();
  PsiSubstitutor classSubstitutor=classResolveResult.getSubstitutor();
  JavaClass javaClass=classType.resolve();
  if (javaClass == null) {
    return false;
  }
  if (new FqName(CommonClassNames.JAVA_LANG_OBJECT).equals(javaClass.getFqName())) {
    return true;
  }
  for (  JavaMethod method : javaClass.getMethods()) {
    PsiMethod psiMethod=method.getPsi();
    if (DescriptorResolverUtils.isObjectMethod(psiMethod)) {
      continue;
    }
    if (!method.getTypeParameters().isEmpty()) {
      return false;
    }
    if (found == null) {
      found=(MethodSignatureBackedByPsiMethod)psiMethod.getSignature(classSubstitutor);
      continue;
    }
    if (!found.getName().equals(method.getName().asString())) {
      return false;
    }
    MethodSignatureBackedByPsiMethod current=(MethodSignatureBackedByPsiMethod)psiMethod.getSignature(classSubstitutor);
    if (!areSignaturesErasureEqual(current,found) || isVarargMethod(psiMethod) != isVarargMethod(found.getMethod())) {
      return false;
    }
  }
  for (  JavaClassType t : classType.getSupertypes()) {
    if (!find(t)) {
      return false;
    }
  }
  return true;
}
