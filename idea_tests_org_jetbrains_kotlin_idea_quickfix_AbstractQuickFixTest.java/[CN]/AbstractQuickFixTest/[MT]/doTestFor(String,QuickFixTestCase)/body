{
  String relativePath=notNull(quickFixTestCase.getBasePath(),"") + "/" + KotlinPackage.decapitalize(testName);
  final String testFullPath=quickFixTestCase.getTestDataPath().replace(File.separatorChar,'/') + relativePath;
  final File testFile=new File(testFullPath);
  CommandProcessor.getInstance().executeCommand(quickFixTestCase.getProject(),new Runnable(){
    @SuppressWarnings({"AssignmentToStaticFieldFromInstanceMethod","CallToPrintStackTrace"}) @Override public void run(){
      try {
        String contents=StringUtil.convertLineSeparators(FileUtil.loadFile(testFile,CharsetToolkit.UTF8_CHARSET));
        quickFixTestCase.configureFromFileText(testFile.getName(),contents);
        quickFixTestCase.bringRealEditorBack();
        checkForUnexpectedActions();
        applyAction(contents,quickFixTestCase,testName,testFullPath);
      }
 catch (      FileComparisonFailure e) {
        throw e;
      }
catch (      Throwable e) {
        e.printStackTrace();
        fail(testName);
      }
    }
  }
,"","");
}
