{
  List<File> sourceFiles=ContainerUtil.newArrayList(ioFiles(files));
  ModuleChunk chunk=new ModuleChunk((CompileContextEx)compileContext,moduleChunk,Collections.<Module,List<VirtualFile>>emptyMap());
  String moduleName=moduleChunk.getNodes().iterator().next().getName();
  File outputDirectoryForTests=ioFile(compileContext.getModuleOutputDirectoryForTests(module));
  File moduleOutputDirectory=ioFile(compileContext.getModuleOutputDirectory(module));
  Set<File> outputDirectoriesToFilter=ContainerUtil.newHashSet(outputDirectoryForTests);
  if (!tests) {
    outputDirectoriesToFilter.add(moduleOutputDirectory);
  }
  CharSequence script=KotlinModuleScriptBuilderFactory.INSTANCE.create().addModule(moduleName,moduleOutputDirectory.getAbsolutePath(),null,getDependencyProvider(chunk,tests,mainOutput),sourceFiles,tests,outputDirectoriesToFilter).asText();
  File scriptFile=new File(outputDir,"script.ktm");
  try {
    FileUtil.writeToFile(scriptFile,script.toString());
  }
 catch (  IOException e) {
    compileContext.addMessage(CompilerMessageCategory.ERROR,"[Internal Error] Cannot write script to " + scriptFile.getAbsolutePath(),"",-1,-1);
    return null;
  }
  return scriptFile;
}
