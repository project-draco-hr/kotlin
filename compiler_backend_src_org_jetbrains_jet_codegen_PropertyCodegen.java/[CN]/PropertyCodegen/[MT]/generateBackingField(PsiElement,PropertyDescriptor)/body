{
  if (state.getBindingContext().get(BindingContext.BACKING_FIELD_REQUIRED,propertyDescriptor)) {
    DeclarationDescriptor containingDeclaration=propertyDescriptor.getContainingDeclaration();
    if (isInterface(containingDeclaration)) {
      return;
    }
    Object value=null;
    final JetExpression initializer=p instanceof JetProperty ? ((JetProperty)p).getInitializer() : null;
    if (initializer != null) {
      if (initializer instanceof JetConstantExpression) {
        CompileTimeConstant<?> compileTimeValue=state.getBindingContext().get(BindingContext.COMPILE_TIME_VALUE,initializer);
        value=compileTimeValue != null ? compileTimeValue.getValue() : null;
      }
    }
    int modifiers;
    if (kind == OwnerKind.NAMESPACE) {
      modifiers=ACC_STATIC;
    }
 else {
      modifiers=ACC_PRIVATE;
    }
    if (!propertyDescriptor.isVar()) {
      modifiers|=ACC_FINAL;
    }
    if (JetStandardLibrary.getInstance().isVolatile(propertyDescriptor)) {
      modifiers|=ACC_VOLATILE;
    }
    Type type=state.getTypeMapper().mapType(propertyDescriptor.getType(),JetTypeMapperMode.VALUE);
    FieldVisitor fieldVisitor=v.newField(p,modifiers,propertyDescriptor.getName().getName(),type.getDescriptor(),null,value);
    AnnotationCodegen.forField(fieldVisitor,state.getTypeMapper()).genAnnotations(propertyDescriptor);
  }
}
