{
  Object value=null;
  if (p instanceof JetProperty && !ImplementationBodyCodegen.shouldInitializeProperty((JetProperty)p,typeMapper)) {
    JetExpression initializer=((JetProperty)p).getInitializer();
    if (initializer != null) {
      CompileTimeConstant<?> compileTimeValue=bindingContext.get(BindingContext.COMPILE_TIME_VALUE,initializer);
      value=compileTimeValue != null ? compileTimeValue.getValue() : null;
    }
  }
  int modifiers;
  if (kind == OwnerKind.NAMESPACE) {
    modifiers=ACC_STATIC;
  }
 else {
    modifiers=ACC_PRIVATE;
  }
  if (!propertyDescriptor.isVar()) {
    modifiers|=ACC_FINAL;
  }
  modifiers|=getDeprecatedAccessFlag(propertyDescriptor);
  if (KotlinBuiltIns.getInstance().isVolatile(propertyDescriptor)) {
    modifiers|=ACC_VOLATILE;
  }
  Type type=typeMapper.mapType(propertyDescriptor);
  return v.newField(p,modifiers,propertyDescriptor.getName().getName(),type.getDescriptor(),null,value);
}
