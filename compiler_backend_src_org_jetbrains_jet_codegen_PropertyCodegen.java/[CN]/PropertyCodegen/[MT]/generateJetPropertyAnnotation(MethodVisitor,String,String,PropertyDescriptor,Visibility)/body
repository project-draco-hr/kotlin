{
  JetMethodAnnotationWriter aw=JetMethodAnnotationWriter.visitAnnotation(mv);
  Modality modality=propertyDescriptor.getModality();
  BitSet flags=CodegenUtil.getFlagsForVisibility(visibility);
  flags.set(JvmStdlibNames.FLAG_PROPERTY_BIT);
  if (CodegenUtil.isInterface(propertyDescriptor.getContainingDeclaration()) && modality != Modality.ABSTRACT) {
    flags.set(modality == Modality.FINAL ? JvmStdlibNames.FLAG_FORCE_FINAL_BIT : JvmStdlibNames.FLAG_FORCE_OPEN_BIT);
  }
  aw.writeFlags(flags);
  aw.writeTypeParameters(typeParameters);
  aw.writePropertyType(kotlinType);
  aw.visitEnd();
}
