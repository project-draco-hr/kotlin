{
  JetMethodAnnotationWriter aw=JetMethodAnnotationWriter.visitAnnotation(mv);
  Modality modality=propertyDescriptor.getModality();
  int flags=getFlagsForVisibility(visibility) | JvmStdlibNames.FLAG_PROPERTY_BIT;
  if (isInterface(propertyDescriptor.getContainingDeclaration()) && modality != Modality.ABSTRACT) {
    flags|=modality == Modality.FINAL ? JvmStdlibNames.FLAG_FORCE_FINAL_BIT : JvmStdlibNames.FLAG_FORCE_OPEN_BIT;
  }
  aw.writeFlags(flags | DescriptorKindUtils.kindToFlags(propertyDescriptor.getKind()));
  aw.writeTypeParameters(typeParameters);
  aw.writePropertyType(kotlinType);
  aw.visitEnd();
}
