{
  loadFile();
  Class<?> derived=generateClass("DerivedWeatherReport");
  Class<?> weatherReport=derived.getSuperclass();
{
    Method get=derived.getDeclaredMethod("getForecast");
    Type type=get.getGenericReturnType();
    assertInstanceOf(type,ParameterizedType.class);
    ParameterizedType parameterizedType=(ParameterizedType)type;
    assertEquals(String.class,parameterizedType.getActualTypeArguments()[0]);
    Method set=derived.getDeclaredMethod("setForecast",(Class<?>)parameterizedType.getRawType());
    type=set.getGenericParameterTypes()[0];
    parameterizedType=(ParameterizedType)type;
    assertInstanceOf(type,ParameterizedType.class);
    assertEquals(String.class,parameterizedType.getActualTypeArguments()[0]);
  }
{
    Method get=weatherReport.getDeclaredMethod("getForecast");
    Type type=get.getGenericReturnType();
    assertInstanceOf(type,ParameterizedType.class);
    ParameterizedType parameterizedType=(ParameterizedType)type;
    assertEquals(String.class,parameterizedType.getActualTypeArguments()[0]);
    Method set=weatherReport.getDeclaredMethod("setForecast",(Class<?>)parameterizedType.getRawType());
    type=set.getGenericParameterTypes()[0];
    parameterizedType=(ParameterizedType)type;
    assertInstanceOf(type,ParameterizedType.class);
    assertEquals(String.class,parameterizedType.getActualTypeArguments()[0]);
  }
}
