{
  reportErrorIfHasIllegalModifier(property);
  DeclarationDescriptor containingDeclaration=propertyDescriptor.getContainingDeclaration();
  if (containingDeclaration instanceof ClassDescriptor) {
    checkPropertyAbstractness(property,propertyDescriptor,(ClassDescriptor)containingDeclaration);
  }
 else {
    modifiersChecker.checkIllegalModalityModifiers(property);
  }
  checkPropertyInitializer(property,propertyDescriptor);
  checkAccessors(property,propertyDescriptor);
  checkDeclaredTypeInPublicMember(property,propertyDescriptor);
}
