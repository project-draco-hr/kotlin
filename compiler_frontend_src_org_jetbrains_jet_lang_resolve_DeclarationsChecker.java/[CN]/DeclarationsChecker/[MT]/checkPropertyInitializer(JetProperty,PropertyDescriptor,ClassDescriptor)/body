{
  JetPropertyAccessor getter=property.getGetter();
  JetPropertyAccessor setter=property.getSetter();
  boolean hasAccessorImplementation=(getter != null && getter.getBodyExpression() != null) || (setter != null && setter.getBodyExpression() != null);
  if (propertyDescriptor.getModality() == Modality.ABSTRACT)   return;
  boolean inTrait=classDescriptor != null && classDescriptor.getKind() == ClassKind.TRAIT;
  JetExpression initializer=property.getInitializer();
  boolean backingFieldRequired=trace.getBindingContext().get(BindingContext.BACKING_FIELD_REQUIRED,propertyDescriptor);
  if (inTrait && backingFieldRequired && hasAccessorImplementation) {
    trace.report(BACKING_FIELD_IN_TRAIT.on(property));
  }
  if (initializer == null) {
    if (backingFieldRequired && !inTrait && !trace.getBindingContext().get(BindingContext.IS_INITIALIZED,propertyDescriptor)) {
      if (classDescriptor == null || hasAccessorImplementation) {
        trace.report(MUST_BE_INITIALIZED.on(property));
      }
 else {
        trace.report(MUST_BE_INITIALIZED_OR_BE_ABSTRACT.on(property));
      }
    }
    return;
  }
  if (inTrait) {
    trace.report(PROPERTY_INITIALIZER_IN_TRAIT.on(initializer));
  }
 else   if (!backingFieldRequired) {
    trace.report(PROPERTY_INITIALIZER_NO_BACKING_FIELD.on(initializer));
  }
}
