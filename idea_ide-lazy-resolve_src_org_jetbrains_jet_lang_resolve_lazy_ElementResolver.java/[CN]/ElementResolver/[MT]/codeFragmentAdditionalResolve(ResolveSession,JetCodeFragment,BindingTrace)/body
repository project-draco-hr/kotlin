{
  JetElement codeFragmentExpression=codeFragment.getContentElement();
  if (!(codeFragmentExpression instanceof JetExpression))   return;
  PsiElement contextElement=codeFragment.getContext();
  if (!(contextElement instanceof JetExpression))   return;
  JetExpression contextExpression=(JetExpression)contextElement;
  BindingContext contextForElement=resolveToElement(contextExpression);
  JetScope scopeForContextElement=contextForElement.get(BindingContext.RESOLUTION_SCOPE,contextExpression);
  if (scopeForContextElement != null) {
    JetScope codeFragmentScope=resolveSession.getScopeProvider().getFileScope(codeFragment);
    ChainedScope chainedScope=new ChainedScope(scopeForContextElement.getContainingDeclaration(),"Scope for resolve code fragment",scopeForContextElement,codeFragmentScope);
    DataFlowInfo dataFlowInfoForContextElement=getDataFlowInfo(contextForElement,contextExpression);
    AnalyzerPackage.computeTypeInContext((JetExpression)codeFragmentExpression,chainedScope,trace,dataFlowInfoForContextElement,TypeUtils.NO_EXPECTED_TYPE,resolveSession.getModuleDescriptor());
  }
}
