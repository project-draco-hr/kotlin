{
  Map<Instruction,Edges<D>> dataMap=Maps.newLinkedHashMap();
  initializeDataMap(lookInside,dataMap,pseudocode,initialDataValue);
  dataMap.put(getStartInstruction(pseudocode,directOrder),Edges.create(initialDataValueForEnterInstruction,initialDataValueForEnterInstruction));
  boolean[] changed=new boolean[1];
  changed[0]=true;
  while (changed[0]) {
    changed[0]=false;
    traverseSubGraph(lookInside,pseudocode,dataMap,instructionDataMergeStrategy,Collections.<Instruction>emptyList(),directOrder,changed,false);
  }
  return dataMap;
}
