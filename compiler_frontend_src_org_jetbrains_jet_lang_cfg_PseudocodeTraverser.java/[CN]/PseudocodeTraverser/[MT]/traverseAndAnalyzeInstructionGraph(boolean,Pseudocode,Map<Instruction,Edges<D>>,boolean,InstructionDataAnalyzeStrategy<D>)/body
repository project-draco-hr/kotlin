{
  List<Instruction> instructions=pseudocode.getInstructions();
  if (!directOrder) {
    instructions=Lists.newArrayList(instructions);
    Collections.reverse(instructions);
  }
  for (  Instruction instruction : instructions) {
    if (lookInside && instruction instanceof LocalDeclarationInstruction) {
      traverseAndAnalyzeInstructionGraph(lookInside,((LocalDeclarationInstruction)instruction).getBody(),dataMap,directOrder,instructionDataAnalyzeStrategy);
    }
    Edges<D> edges=dataMap.get(instruction);
    instructionDataAnalyzeStrategy.execute(instruction,edges != null ? edges.in : null,edges != null ? edges.out : null);
  }
}
