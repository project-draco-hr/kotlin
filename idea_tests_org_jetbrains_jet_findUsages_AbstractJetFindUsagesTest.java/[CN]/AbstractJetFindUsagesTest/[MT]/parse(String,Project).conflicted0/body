{
  KotlinMethodFindUsagesOptions options=new KotlinMethodFindUsagesOptions(project);
  options.isUsages=false;
  for (  String s : InTextDirectivesUtils.findListWithPrefixes(text,"// OPTIONS: ")) {
    if (s.equals("usages")) {
      options.isUsages=true;
    }
    if (s.equals("overrides")) {
      options.isOverridingMethods=true;
      options.isImplementingMethods=true;
    }
    if (s.equals("overloadUsages")) {
      options.isIncludeOverloadUsages=true;
      options.isUsages=true;
    }
  }
  return options;
}
