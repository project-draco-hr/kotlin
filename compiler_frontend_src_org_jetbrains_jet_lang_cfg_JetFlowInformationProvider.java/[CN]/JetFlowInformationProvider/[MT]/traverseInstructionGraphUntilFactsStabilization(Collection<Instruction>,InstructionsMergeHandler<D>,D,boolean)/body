{
  Map<Instruction,D> dataMap=Maps.newHashMap();
  for (  Instruction instruction : instructions) {
    dataMap.put(instruction,initialDataValue);
  }
  boolean changed=true;
  while (changed) {
    changed=false;
    for (    Instruction instruction : instructions) {
      D previousDataValue=dataMap.get(instruction);
      Collection<Instruction> previousInstructions=straightDirection ? instruction.getPreviousInstructions() : instruction.getNextInstructions();
      Collection<D> incomingEdgesData=Sets.newHashSet();
      for (      Instruction previousInstruction : previousInstructions) {
        incomingEdgesData.add(dataMap.get(previousInstruction));
      }
      D mergedData=instructionsMergeHandler.merge(instruction,previousDataValue,incomingEdgesData);
      if (!mergedData.equals(previousDataValue)) {
        changed=true;
        dataMap.put(instruction,mergedData);
      }
    }
  }
  return dataMap;
}
