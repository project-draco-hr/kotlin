{
  if (shouldInline(call) && canInline(call)) {
    JsFunction containingFunction=getCurrentNamedFunction();
    if (containingFunction != null) {
      inlineCallInfos.add(new JsCallInfo(call,containingFunction));
    }
    JsFunction definition=getFunctionContext().getFunctionDefinition(call);
    if (inProcessFunctions.contains(definition)) {
      reportInlineCycle(call,definition);
      return false;
    }
    if (!processedFunctions.contains(definition)) {
      accept(definition);
    }
    inline(call,context);
  }
  return true;
}
