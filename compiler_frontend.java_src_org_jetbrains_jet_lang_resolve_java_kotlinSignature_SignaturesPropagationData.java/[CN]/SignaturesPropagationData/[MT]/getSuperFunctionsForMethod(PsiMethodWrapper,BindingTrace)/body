{
  List<FunctionDescriptor> superFunctions=Lists.newArrayList();
  for (  HierarchicalMethodSignature superSignature : method.getPsiMethod().getHierarchicalMethodSignature().getSuperSignatures()) {
    DeclarationDescriptor superFun=trace.get(BindingContext.DECLARATION_TO_DESCRIPTOR,superSignature.getMethod());
    if (superFun instanceof FunctionDescriptor) {
      superFunctions.add(((FunctionDescriptor)superFun));
    }
 else {
    }
  }
  Collections.sort(superFunctions,new Comparator<FunctionDescriptor>(){
    @Override public int compare(    FunctionDescriptor fun1,    FunctionDescriptor fun2){
      FqNameUnsafe fqName1=getFQName(fun1.getContainingDeclaration());
      FqNameUnsafe fqName2=getFQName(fun2.getContainingDeclaration());
      return fqName1.getFqName().compareTo(fqName2.getFqName());
    }
  }
);
  return superFunctions;
}
