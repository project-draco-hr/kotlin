{
  if (ErrorUtils.isErrorType(autoType)) {
    return autoType;
  }
  boolean resultNullable=typeMustBeNullable(autoType,typesFromSuper,covariantPosition,reportError);
  ClassifierDescriptor resultClassifier=modifyTypeClassifier(autoType,typesFromSuper,covariantPosition,reportError);
  List<TypeProjection> resultArguments=getTypeArgsOfType(autoType,resultClassifier,typesFromSuper,reportError);
  JetScope resultScope;
  if (resultClassifier instanceof ClassDescriptor) {
    resultScope=((ClassDescriptor)resultClassifier).getMemberScope(resultArguments);
  }
 else {
    resultScope=autoType.getMemberScope();
  }
  return new JetTypeImpl(autoType.getAnnotations(),resultClassifier.getTypeConstructor(),resultNullable,resultArguments,resultScope);
}
