{
  super(getName(delegate,index),delegate.getType(),method,KotlinLanguage.INSTANCE);
  this.delegate=delegate;
  this.index=index;
  this.method=method;
  if (method.getLightMethodOrigin() instanceof LightMemberOriginForDeclaration) {
    this.modifierList=new KtLightModifierListWithExplicitModifiers(this,ArrayUtil.EMPTY_STRING_ARRAY){
      @Override public PsiAnnotationOwner getDelegate(){
        return delegate.getModifierList();
      }
    }
;
  }
 else {
    this.modifierList=super.getModifierList();
  }
}
