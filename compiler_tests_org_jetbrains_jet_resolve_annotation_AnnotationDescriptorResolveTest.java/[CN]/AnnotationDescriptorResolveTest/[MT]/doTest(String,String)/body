{
  NamespaceDescriptor test=getNamespaceDescriptor(content);
  ClassDescriptor myClass=getClassDescriptor(test,"MyClass");
  checkDescriptor(expectedAnnotation,myClass);
  checkDescriptor(expectedAnnotation,getClassObjectDescriptor(myClass));
  checkDescriptor(expectedAnnotation,getInnerClassDescriptor(myClass,"InnerClass"));
  FunctionDescriptor foo=getFunctionDescriptor(myClass,"foo");
  checkDescriptor(expectedAnnotation,foo);
  checkDescriptor(expectedAnnotation,getFunctionParameterDescriptor(foo,"param"));
  checkDescriptor(expectedAnnotation,getLocalClassDescriptor("LocalClass"));
  checkDescriptor(expectedAnnotation,getLocalObjectDescriptor("LocalObject"));
  checkDescriptor(expectedAnnotation,getLocalFunDescriptor("localFun"));
  checkDescriptor(expectedAnnotation,getLocalVarDescriptor("localVar"));
  SimpleFunctionDescriptor anonymousFun=getAnonymousFunDescriptor();
  if (anonymousFun instanceof AnonymousFunctionDescriptor) {
    for (    ValueParameterDescriptor descriptor : anonymousFun.getValueParameters()) {
      checkDescriptor(expectedAnnotation,descriptor);
    }
  }
  PropertyDescriptor prop=getPropertyDescriptor(myClass,"prop");
  checkDescriptor(expectedAnnotation,prop);
  checkDescriptor(expectedAnnotation,prop.getGetter());
  checkDescriptor(expectedAnnotation,prop.getSetter());
  FunctionDescriptor topFoo=getFunctionDescriptor(test,"topFoo");
  checkDescriptor(expectedAnnotation,topFoo);
  checkDescriptor(expectedAnnotation,getFunctionParameterDescriptor(topFoo,"param"));
  PropertyDescriptor topProp=getPropertyDescriptor(test,"topProp");
  checkDescriptor(expectedAnnotation,topProp);
  checkDescriptor(expectedAnnotation,topProp.getGetter());
  checkDescriptor(expectedAnnotation,topProp.getSetter());
  checkDescriptor(expectedAnnotation,getObjectDescriptor(test,"MyObject"));
  checkDescriptor(expectedAnnotation,getConstructorParameterDescriptor(myClass,"consProp"));
  checkDescriptor(expectedAnnotation,getConstructorParameterDescriptor(myClass,"param"));
}
