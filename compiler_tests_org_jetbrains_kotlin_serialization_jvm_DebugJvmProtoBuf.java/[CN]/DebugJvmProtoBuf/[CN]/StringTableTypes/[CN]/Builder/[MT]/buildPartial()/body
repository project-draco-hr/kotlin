{
  org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record result=new org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.range_=range_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.predefinedIndex_=predefinedIndex_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.operation_=operation_;
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    substringIndex_=java.util.Collections.unmodifiableList(substringIndex_);
    bitField0_=(bitField0_ & ~0x00000008);
  }
  result.substringIndex_=substringIndex_;
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    replaceChar_=java.util.Collections.unmodifiableList(replaceChar_);
    bitField0_=(bitField0_ & ~0x00000010);
  }
  result.replaceChar_=replaceChar_;
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
