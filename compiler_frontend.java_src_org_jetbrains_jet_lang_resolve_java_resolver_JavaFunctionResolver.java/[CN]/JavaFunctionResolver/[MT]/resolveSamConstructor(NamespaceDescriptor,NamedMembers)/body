{
  PsiClass functionalInterface=namedMembers.getFunctionalInterface();
  if (functionalInterface != null) {
    ClassDescriptor klass=findClassInNamespace(ownerDescriptor,namedMembers.getName());
    if (klass != null && SingleAbstractMethodUtils.isFunctionalInterface(klass)) {
      SimpleFunctionDescriptor constructorFunction=SingleAbstractMethodUtils.createConstructorFunction(ownerDescriptor,klass);
      trace.record(BindingContext.SAM_CONSTRUCTOR_TO_TRAIT,constructorFunction,klass);
      return constructorFunction;
    }
  }
  return null;
}
