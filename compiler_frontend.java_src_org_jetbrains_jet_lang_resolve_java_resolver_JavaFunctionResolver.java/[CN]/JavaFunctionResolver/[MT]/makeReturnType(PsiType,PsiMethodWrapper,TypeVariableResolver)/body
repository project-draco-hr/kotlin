{
  String returnTypeFromAnnotation=method.getJetMethodAnnotation().returnType();
  JetType transformedType;
  if (returnTypeFromAnnotation.length() > 0) {
    transformedType=typeTransformer.transformToType(returnTypeFromAnnotation,typeVariableResolver);
  }
 else {
    transformedType=typeTransformer.transformToType(returnType,JavaTypeTransformer.TypeUsage.MEMBER_SIGNATURE_COVARIANT,typeVariableResolver);
  }
  if (JavaAnnotationResolver.findAnnotation(method.getPsiMethod(),JvmAbi.JETBRAINS_NOT_NULL_ANNOTATION.getFqName().getFqName()) != null) {
    return TypeUtils.makeNullableAsSpecified(transformedType,false);
  }
 else {
    return transformedType;
  }
}
