{
  if (ErrorUtils.isErrorType(autoType)) {
    return autoType;
  }
  boolean resultNullable=returnTypeMustBeNullable(autoType,typesFromSuper,covariantPosition);
  List<TypeProjection> resultArguments=getTypeArgsOfReturnType(autoType,typesFromSuper);
  JetScope resultScope;
  ClassifierDescriptor classifierDescriptor=getReturnTypeClassifier(autoType,typesFromSuper);
  if (classifierDescriptor instanceof ClassDescriptor) {
    resultScope=((ClassDescriptor)classifierDescriptor).getMemberScope(resultArguments);
  }
 else {
    resultScope=autoType.getMemberScope();
  }
  return new JetTypeImpl(autoType.getAnnotations(),classifierDescriptor.getTypeConstructor(),resultNullable,resultArguments,resultScope);
}
