{
  super(resolveSession);
  this.project=project;
  this.additionalResolveCache=CachedValuesManager.getManager(project).createCachedValue(new CachedValueProvider<MemoizedFunctionToNotNull<JetElement,BindingContext>>(){
    @Nullable @Override public Result<MemoizedFunctionToNotNull<JetElement,BindingContext>> compute(){
      ResolveSession resolveSession=ResolveElementCache.this.resolveSession;
      LazyResolveStorageManager manager=resolveSession.getStorageManager();
      MemoizedFunctionToNotNull<JetElement,BindingContext> elementsCacheFunction=manager.createWeaklyRetainedMemoizedFunction(new Function1<JetElement,BindingContext>(){
        @Override public BindingContext invoke(        JetElement jetElement){
          return elementAdditionalResolve(jetElement,jetElement,BodyResolveMode.FULL);
        }
      }
);
      return Result.create(elementsCacheFunction,PsiModificationTracker.MODIFICATION_COUNT,resolveSession.getExceptionTracker());
    }
  }
,false);
}
