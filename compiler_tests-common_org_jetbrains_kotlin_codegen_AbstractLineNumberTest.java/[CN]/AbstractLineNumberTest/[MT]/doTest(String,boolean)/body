{
  Pair<KtFile,KotlinCoreEnvironment> fileAndEnv=createPsiFile(filename);
  KtFile psiFile=fileAndEnv.getFirst();
  KotlinCoreEnvironment environment=fileAndEnv.getSecond();
  GenerationState state=GenerationUtils.compileFileGetGenerationStateForTest(psiFile,environment);
  if (custom) {
    List<Integer> actualLineNumbers=extractActualLineNumbersFromBytecode(state,false);
    String text=psiFile.getText();
    String newFileText=text.substring(0,text.indexOf("// ")) + getActualLineNumbersAsString(actualLineNumbers);
    KotlinTestUtils.assertEqualsToFile(new File(filename),newFileText);
  }
 else {
    List<Integer> expectedLineNumbers=extractSelectedLineNumbersFromSource(psiFile);
    List<Integer> actualLineNumbers=extractActualLineNumbersFromBytecode(state,true);
    assertSameElements(actualLineNumbers,expectedLineNumbers);
  }
}
