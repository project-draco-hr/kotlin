{
  Map<String,String> validGetters=Maps.newHashMap();
  @SuppressWarnings("rawtypes") List methods=classNode.methods;
  String fieldName=null;
  checkMethod:   for (  Object methodObject : methods) {
    MethodNode method=(MethodNode)methodObject;
    if (names.contains(method.name) && method.desc.startsWith("()")) {
      InsnList instructions=method.instructions;
      int mState=1;
      for (AbstractInsnNode curr=instructions.getFirst(); curr != null; curr=curr.getNext()) {
switch (curr.getOpcode()) {
case -1:
          continue;
case Opcodes.ALOAD:
        if (mState == 1) {
          fieldName=null;
          mState=2;
        }
 else {
          continue checkMethod;
        }
      break;
case Opcodes.GETFIELD:
    if (mState == 2) {
      FieldInsnNode field=(FieldInsnNode)curr;
      fieldName=field.name;
      mState=3;
    }
 else {
      continue checkMethod;
    }
  break;
case Opcodes.ARETURN:
case Opcodes.FRETURN:
case Opcodes.IRETURN:
case Opcodes.DRETURN:
case Opcodes.LRETURN:
case Opcodes.RETURN:
if (mState == 3) {
  validGetters.put(method.name,fieldName);
}
continue checkMethod;
default :
continue checkMethod;
}
}
}
}
return validGetters;
}
