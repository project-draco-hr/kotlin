{
  PsiElement element1=getElementAtOffsetIgnoreWhitespaceBefore(file,startOffset);
  PsiElement element2=getElementAtOffsetIgnoreWhitespaceAfter(file,endOffset);
  if (element1 == null || element2 == null)   return PsiElement.EMPTY_ARRAY;
  startOffset=element1.getTextRange().getStartOffset();
  endOffset=element2.getTextRange().getEndOffset();
  PsiElement parent=PsiTreeUtil.findCommonParent(element1,element2);
  if (parent == null)   return PsiElement.EMPTY_ARRAY;
  element1=getTopmostParentInside(element1,parent);
  if (startOffset != element1.getTextRange().getStartOffset())   return PsiElement.EMPTY_ARRAY;
  element2=getTopmostParentInside(element2,parent);
  if (endOffset != element2.getTextRange().getEndOffset())   return PsiElement.EMPTY_ARRAY;
  PsiElement stopElement=element2.getNextSibling();
  List<PsiElement> array=new ArrayList<PsiElement>();
  for (PsiElement currentElement=element1; currentElement != stopElement; currentElement=currentElement.getNextSibling()) {
    if (aClass.isInstance(currentElement)) {
      array.add(currentElement);
    }
    array.addAll(PsiTreeUtil.findChildrenOfType(currentElement,aClass));
  }
  return PsiUtilCore.toPsiElementArray(array);
}
