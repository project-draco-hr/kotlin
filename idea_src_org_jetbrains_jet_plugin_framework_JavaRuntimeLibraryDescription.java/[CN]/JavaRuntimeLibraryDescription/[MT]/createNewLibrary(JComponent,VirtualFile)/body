{
  CreateJavaLibraryDialog dialog=new CreateJavaLibraryDialog(null,"Create Kotlin Java Runtime Library",contextDirectory);
  dialog.show();
  if (dialog.isOK()) {
    KotlinPaths paths=PathUtil.getKotlinPathsForIdeaPlugin();
    File libraryFile=paths.getRuntimePath();
    if (!libraryFile.exists()) {
      Messages.showErrorDialog(parentComponent,String.format("Java Runtime library was not found in '%s'.",paths.getLibPath()),JAVA_RUNTIME_LIBRARY_CREATION);
      return null;
    }
    String libraryName=LIBRARY_NAME;
    String copyIntoPath=dialog.getCopyIntoPath();
    if (copyIntoPath != null) {
      libraryFile=FileUIUtils.copyWithOverwriteDialog(parentComponent,JAVA_RUNTIME_LIBRARY_CREATION,copyIntoPath,libraryFile);
      if (libraryFile == null) {
        return null;
      }
      libraryName=LIBRARY_NAME + "-" + JetPluginUtil.getPluginVersion();
    }
    final String libraryFileUrl=VfsUtil.getUrlForLibraryRoot(libraryFile);
    return new NewLibraryConfiguration(libraryName,getDownloadableLibraryType(),new LibraryVersionProperties()){
      @Override public void addRoots(      @NotNull LibraryEditor editor){
        editor.addRoot(libraryFileUrl,OrderRootType.CLASSES);
        editor.addRoot(libraryFileUrl + "src",OrderRootType.SOURCES);
      }
    }
;
  }
  return null;
}
