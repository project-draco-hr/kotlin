{
  for (  FunctionDescriptor functionDescriptor : functionDescriptors) {
    ClassDescriptor classDescriptor=JsDescriptorUtils.getContainingClass(functionDescriptor);
    if (classDescriptor == null) {
      return;
    }
    JsExpression expression=ReferenceTranslator.translateAsFQReference(classDescriptor,context);
    JsNew testClass=new JsNew(expression);
    JsExpression functionToTestCall=CallBuilder.build(context).descriptor(functionDescriptor).receiver(testClass).translate();
    JsStringLiteral testName=context.program().getStringLiteral(classDescriptor.getName() + "." + functionDescriptor.getName());
    (new JSTester(block,context)).constructTestMethodInvocation(functionToTestCall,testName);
  }
}
