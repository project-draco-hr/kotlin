{
  if (staticMembers) {
    return resolveInnerClassesOfClassObject(owner,psiClass);
  }
  PsiClass[] innerPsiClasses=psiClass.getInnerClasses();
  List<ClassDescriptor> r=new ArrayList<ClassDescriptor>(innerPsiClasses.length);
  for (  PsiClass innerPsiClass : innerPsiClasses) {
    if (innerPsiClass.hasModifierProperty(PsiModifier.PRIVATE)) {
      continue;
    }
    if (innerPsiClass.getName().equals(JvmAbi.CLASS_OBJECT_CLASS_NAME)) {
      continue;
    }
    if (JavaDescriptorResolver.isInnerEnum(innerPsiClass,owner)) {
      continue;
    }
    ClassDescriptor classDescriptor=resolveInnerClass(innerPsiClass);
    r.add(classDescriptor);
  }
  return r;
}
