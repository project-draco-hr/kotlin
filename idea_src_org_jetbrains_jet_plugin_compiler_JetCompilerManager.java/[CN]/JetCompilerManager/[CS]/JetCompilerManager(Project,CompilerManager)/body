{
  manager.addTranslatingCompiler(new JetCompiler(),Collections.<FileType>singleton(JetFileType.INSTANCE),Collections.singleton(StdFileTypes.CLASS));
  manager.addTranslatingCompiler(new K2JSCompiler(),Collections.<FileType>singleton(JetFileType.INSTANCE),Collections.<FileType>singleton(StdFileTypes.JS));
  manager.addCompilableFileType(JetFileType.INSTANCE);
  manager.addCompilationStatusListener(new CompilationStatusListener(){
    @Override public void compilationFinished(    boolean aborted,    int errors,    int warnings,    CompileContext compileContext){
      for (      CompilerMessage error : compileContext.getMessages(CompilerMessageCategory.ERROR)) {
        final String message=error.getMessage();
        if (message.startsWith(INTERNAL_ERROR_PREFIX) || message.startsWith(PREFIX_WITH_COMPILER_NAME)) {
          LOG.error(new KotlinCompilerException(message));
        }
      }
    }
    @Override public void fileGenerated(    String outputRoot,    String relativePath){
    }
  }
,project);
}
