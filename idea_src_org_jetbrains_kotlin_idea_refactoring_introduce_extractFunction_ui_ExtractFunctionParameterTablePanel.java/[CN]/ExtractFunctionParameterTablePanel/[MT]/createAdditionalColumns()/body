{
  JBTable table=getTable();
  TableColumn parameterTypeColumn=table.getColumnModel().getColumn(MyTableModel.PARAMETER_TYPE_COLUMN);
  parameterTypeColumn.setHeaderValue("Type");
  parameterTypeColumn.setCellRenderer(new DefaultTableCellRenderer(){
    private final JBComboBoxLabel myLabel=new JBComboBoxLabel();
    @Override @NotNull public Component getTableCellRendererComponent(    @NotNull JTable table,    Object value,    boolean isSelected,    boolean hasFocus,    int row,    int column){
      myLabel.setText(IdeDescriptorRenderers.SOURCE_CODE_SHORT_NAMES_IN_TYPES.renderType((KotlinType)value));
      myLabel.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground());
      myLabel.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground());
      if (isSelected) {
        myLabel.setSelectionIcon();
      }
 else {
        myLabel.setRegularIcon();
      }
      return myLabel;
    }
  }
);
  parameterTypeColumn.setCellEditor(new AbstractTableCellEditor(){
    final JBComboBoxTableCellEditorComponent myEditorComponent=new JBComboBoxTableCellEditorComponent();
    @Override @Nullable public Object getCellEditorValue(){
      return myEditorComponent.getEditorValue();
    }
    @Override public Component getTableCellEditorComponent(    JTable table,    Object value,    boolean isSelected,    int row,    int column){
      ParameterInfo info=parameterInfos.get(row);
      myEditorComponent.setCell(table,row,column);
      myEditorComponent.setOptions(info.getOriginalParameter().getParameterTypeCandidates(false).toArray());
      myEditorComponent.setDefaultValue(info.getType());
      myEditorComponent.setToString(new Function<Object,String>(){
        @Override public String fun(        Object o){
          return IdeDescriptorRenderers.SOURCE_CODE_SHORT_NAMES_IN_TYPES.renderType((KotlinType)o);
        }
      }
);
      return myEditorComponent;
    }
  }
);
}
