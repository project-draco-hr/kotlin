{
  for (  Map.Entry<JetScript,ScriptDescriptor> e : context.getScripts().entrySet()) {
    JetScript declaration=e.getKey();
    ScriptDescriptor descriptor=e.getValue();
    WritableScope scope=context.getScriptScopes().get(declaration);
    List<ValueParameterDescriptor> valueParameters=Lists.newArrayList();
    int index=0;
    for (    AnalyzerScriptParameter scriptParameter : topDownAnalysisParameters.getScriptParameters()) {
      ValueParameterDescriptor parameter=resolveScriptParameter(scriptParameter,index,descriptor);
      valueParameters.add(parameter);
      scope.addVariableDescriptor(parameter);
      ++index;
    }
    scope.changeLockLevel(WritableScope.LockLevel.READING);
    ExpressionTypingContext context=ExpressionTypingContext.newContext(expressionTypingServices,Maps.<JetPattern,DataFlowInfo>newHashMap(),Maps.<JetPattern,List<VariableDescriptor>>newHashMap(),new LabelResolver(),trace,scope,DataFlowInfo.EMPTY,NO_EXPECTED_TYPE,false);
    JetType returnType=expressionTypingServices.getBlockReturnedType(scope,declaration.getBlockExpression(),CoercionStrategy.NO_COERCION,context,trace);
    if (returnType == null) {
      returnType=ErrorUtils.createErrorType("getBlockReturnedType returned null");
    }
    descriptor.initialize(returnType,valueParameters);
  }
}
