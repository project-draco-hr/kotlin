{
  JetModifierList modifierList=objectDeclaration.getModifierList();
  PropertyDescriptorImpl propertyDescriptor=new PropertyDescriptorImpl(containingDeclaration,annotationResolver.getResolvedAnnotations(modifierList,trace),Modality.FINAL,resolveVisibilityFromModifiers(objectDeclaration,getDefaultVisibilityForObjectPropertyDescriptor(classDescriptor)),false,JetPsiUtil.safeName(objectDeclaration.getName()),CallableMemberDescriptor.Kind.DECLARATION);
  propertyDescriptor.setType(getTypeForObjectDeclaration(classDescriptor),Collections.<TypeParameterDescriptor>emptyList(),getExpectedThisObjectIfNeeded(containingDeclaration),NO_RECEIVER_PARAMETER);
  propertyDescriptor.initialize(createDefaultGetter(propertyDescriptor),null);
  trace.record(BindingContext.OBJECT_DECLARATION_CLASS,propertyDescriptor,classDescriptor);
  JetObjectDeclarationName nameAsDeclaration=objectDeclaration.getNameAsDeclaration();
  if (nameAsDeclaration != null) {
    trace.record(BindingContext.OBJECT_DECLARATION,nameAsDeclaration,propertyDescriptor);
  }
  return propertyDescriptor;
}
