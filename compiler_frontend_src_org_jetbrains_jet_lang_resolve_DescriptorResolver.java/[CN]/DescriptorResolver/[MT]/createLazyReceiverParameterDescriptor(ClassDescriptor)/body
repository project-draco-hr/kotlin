{
  return new AbstractReceiverParameterDescriptor(){
    private ClassReceiver value;
    @NotNull @Override public JetType getType(){
      return classDescriptor.getDefaultType();
    }
    @NotNull @Override public ReceiverDescriptor getValue(){
      if (value == null) {
        value=new ClassReceiver(classDescriptor);
      }
      return value;
    }
    @NotNull @Override public DeclarationDescriptor getContainingDeclaration(){
      return classDescriptor;
    }
    @Override public boolean exists(){
      return true;
    }
    @Override public String toString(){
      return "class " + classDescriptor.getName() + "::this";
    }
  }
;
}
