{
  DeclarationDescriptor descriptor=getContainingClass(scope);
  while (descriptor != null) {
    if (descriptor instanceof ClassDescriptor) {
      ClassDescriptor classDescriptor=(ClassDescriptor)descriptor;
      if (classDescriptor == target) {
        return true;
      }
      if (doSuperClassCheck && isSubclass(classDescriptor,target)) {
        return true;
      }
      if (isStaticNestedClass(classDescriptor)) {
        trace.report(INACCESSIBLE_OUTER_CLASS_EXPRESSION.on(reportErrorsOn,classDescriptor));
        return false;
      }
    }
    descriptor=descriptor.getContainingDeclaration();
  }
  return true;
}
