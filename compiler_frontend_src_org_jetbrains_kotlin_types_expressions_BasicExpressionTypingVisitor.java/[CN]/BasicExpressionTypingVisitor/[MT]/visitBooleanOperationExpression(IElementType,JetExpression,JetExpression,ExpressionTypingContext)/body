{
  JetType booleanType=components.builtIns.getBooleanType();
  JetTypeInfo leftTypeInfo=getTypeInfoOrNullType(left,context.replaceExpectedType(booleanType),facade);
  DataFlowInfo dataFlowInfo=leftTypeInfo.getDataFlowInfo();
  WritableScopeImpl leftScope=newWritableScopeImpl(context,"Left scope of && or ||");
  boolean isAnd=operationType == JetTokens.ANDAND;
  DataFlowInfo flowInfoLeft=components.dataFlowAnalyzer.extractDataFlowInfoFromCondition(left,isAnd,context).and(dataFlowInfo);
  WritableScopeImpl rightScope=isAnd ? leftScope : newWritableScopeImpl(context,"Right scope of && or ||");
  ExpressionTypingContext contextForRightExpr=context.replaceDataFlowInfo(flowInfoLeft).replaceScope(rightScope).replaceExpectedType(booleanType);
  if (right != null) {
    facade.getTypeInfo(right,contextForRightExpr);
  }
  return leftTypeInfo.replaceType(booleanType);
}
