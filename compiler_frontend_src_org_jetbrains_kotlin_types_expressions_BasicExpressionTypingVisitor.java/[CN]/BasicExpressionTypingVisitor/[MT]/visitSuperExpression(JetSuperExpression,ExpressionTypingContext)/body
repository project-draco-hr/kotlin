{
  LabelResolver.LabeledReceiverResolutionResult resolutionResult=resolveToReceiver(expression,context,true);
  if (!JetPsiUtil.isLHSOfDot(expression)) {
    context.trace.report(SUPER_IS_NOT_AN_EXPRESSION.on(expression,expression.getText()));
    return errorInSuper(expression,context);
  }
switch (resolutionResult.getCode()) {
case LABEL_RESOLUTION_ERROR:
    return errorInSuper(expression,context);
case NO_THIS:
  context.trace.report(SUPER_NOT_AVAILABLE.on(expression));
return errorInSuper(expression,context);
case SUCCESS:
JetType result=checkPossiblyQualifiedSuper(expression,context,resolutionResult.getReceiverParameterDescriptor());
if (result != null) {
context.trace.recordType(expression.getInstanceReference(),result);
}
return TypeInfoFactoryPackage.createCheckedTypeInfo(result,context,expression);
}
throw new IllegalStateException("Unknown code: " + resolutionResult.getCode());
}
