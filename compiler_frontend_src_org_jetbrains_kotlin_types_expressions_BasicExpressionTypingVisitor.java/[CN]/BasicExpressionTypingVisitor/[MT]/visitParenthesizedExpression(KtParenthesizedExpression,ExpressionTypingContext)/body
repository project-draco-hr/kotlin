{
  KtExpression innerExpression=expression.getExpression();
  if (innerExpression == null) {
    return TypeInfoFactoryKt.noTypeInfo(context);
  }
  KotlinTypeInfo result=facade.getTypeInfo(innerExpression,context.replaceScope(context.scope));
  KotlinType resultType=result.getType();
  if (resultType != null) {
    DataFlowValue innerValue=DataFlowValueFactory.createDataFlowValue(innerExpression,resultType,context);
    DataFlowValue resultValue=DataFlowValueFactory.createDataFlowValue(expression,resultType,context);
    result=result.replaceDataFlowInfo(result.getDataFlowInfo().assign(resultValue,innerValue));
  }
  return result;
}
