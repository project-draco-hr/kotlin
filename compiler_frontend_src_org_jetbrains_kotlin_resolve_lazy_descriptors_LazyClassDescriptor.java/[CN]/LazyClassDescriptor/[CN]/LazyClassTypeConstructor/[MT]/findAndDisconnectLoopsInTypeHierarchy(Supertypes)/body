{
  for (Iterator<JetType> iterator=supertypes.trueSupertypes.iterator(); iterator.hasNext(); ) {
    JetType supertype=iterator.next();
    if (isReachable(supertype.getConstructor(),this,new HashSet<TypeConstructor>())) {
      iterator.remove();
      supertypes.cyclicSupertypes.add(supertype);
      ClassifierDescriptor supertypeDescriptor=supertype.getConstructor().getDeclarationDescriptor();
      if (supertypeDescriptor instanceof ClassDescriptor) {
        ClassDescriptor superclass=(ClassDescriptor)supertypeDescriptor;
        reportCyclicInheritanceHierarchyError(c.getTrace(),LazyClassDescriptor.this,superclass);
      }
    }
  }
}
