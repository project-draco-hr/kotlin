{
  return new JetSingleIntentionActionFactory(){
    @Nullable @Override public JetIntentionAction<JetModifierListOwner> createAction(    Diagnostic diagnostic){
      JetModifierListOwner modifierListOwner=QuickFixUtil.getParentElementOfType(diagnostic,JetModifierListOwner.class);
      if (modifierListOwner == null)       return null;
      PsiElement psiElement=diagnostic.getPsiElement();
      if (!(psiElement instanceof JetTypeParameter))       return null;
      JetTypeParameter parameter=(JetTypeParameter)psiElement;
      Variance variance=parameter.getVariance();
      JetModifierKeywordToken modifier;
switch (variance) {
case IN_VARIANCE:
        modifier=JetTokens.IN_KEYWORD;
      break;
case OUT_VARIANCE:
    modifier=JetTokens.OUT_KEYWORD;
  break;
default :
return null;
}
return new RemoveModifierFix(modifierListOwner,modifier,false);
}
}
;
}
