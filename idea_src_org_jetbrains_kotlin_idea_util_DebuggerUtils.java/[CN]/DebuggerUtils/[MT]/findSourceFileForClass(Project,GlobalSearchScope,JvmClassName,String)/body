{
  String extension=FileUtilRt.getExtension(fileName);
  if (!KOTLIN_EXTENSIONS.contains(extension))   return null;
  if (DumbService.getInstance(project).isDumb())   return null;
  Collection<JetFile> filesInPackage=findFilesWithExactPackage(className.getPackageFqName(),searchScope,project);
  Collection<JetFile> filesWithExactName=Collections2.filter(filesInPackage,new Predicate<JetFile>(){
    @Override public boolean apply(    @Nullable JetFile file){
      return file != null && file.getName().equals(fileName);
    }
  }
);
  if (filesWithExactName.isEmpty())   return null;
  if (filesWithExactName.size() == 1) {
    return filesWithExactName.iterator().next();
  }
  FqName partFqName=className.getFqNameForClassNameWithoutDollars();
  Collection<JetFile> filesForPart=StaticFacadeIndexUtil.findFilesForFilePart(partFqName,searchScope,project);
  if (!filesForPart.isEmpty()) {
    for (    JetFile file : filesForPart) {
      if (file.getName().equals(fileName)) {
        return file;
      }
    }
    return null;
  }
  return filesWithExactName.iterator().next();
}
