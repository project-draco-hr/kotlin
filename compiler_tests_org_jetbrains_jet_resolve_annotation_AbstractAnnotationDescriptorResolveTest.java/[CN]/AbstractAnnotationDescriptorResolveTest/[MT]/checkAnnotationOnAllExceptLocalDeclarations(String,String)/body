{
  JetFile testFile=getFile(content);
  PackageFragmentDescriptor testPackage=getPackage(testFile);
  checkAnnotationsOnFile(expectedAnnotation,testFile);
  ClassDescriptor myClass=getClassDescriptor(testPackage,"MyClass");
  checkDescriptor(expectedAnnotation,myClass);
  checkDescriptor(expectedAnnotation,getClassObjectDescriptor(myClass));
  checkDescriptor(expectedAnnotation,getInnerClassDescriptor(myClass,"InnerClass"));
  FunctionDescriptor foo=getFunctionDescriptor(myClass,"foo");
  checkAnnotationsOnFunction(expectedAnnotation,foo);
  SimpleFunctionDescriptor anonymousFun=getAnonymousFunDescriptor();
  if (anonymousFun instanceof AnonymousFunctionDescriptor) {
    for (    ValueParameterDescriptor descriptor : anonymousFun.getValueParameters()) {
      checkDescriptor(expectedAnnotation,descriptor);
    }
  }
  PropertyDescriptor prop=getPropertyDescriptor(myClass,"prop");
  checkAnnotationsOnProperty(expectedAnnotation,prop);
  FunctionDescriptor topFoo=getFunctionDescriptor(testPackage,"topFoo");
  checkAnnotationsOnFunction(expectedAnnotation,topFoo);
  PropertyDescriptor topProp=getPropertyDescriptor(testPackage,"topProp",true);
  checkAnnotationsOnProperty(expectedAnnotation,topProp);
  checkDescriptor(expectedAnnotation,getClassDescriptor(testPackage,"MyObject"));
  checkDescriptor(expectedAnnotation,getConstructorParameterDescriptor(myClass,"consProp"));
  checkDescriptor(expectedAnnotation,getConstructorParameterDescriptor(myClass,"param"));
}
