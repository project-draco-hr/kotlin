{
  int opcode;
  if (opToken == JetTokens.EQEQ) {
    opcode=jumpIfFalse ? Opcodes.IFNE : Opcodes.IFEQ;
  }
 else   if (opToken == JetTokens.EXCLEQ) {
    opcode=jumpIfFalse ? Opcodes.IFEQ : Opcodes.IFNE;
  }
 else   if (opToken == JetTokens.GT) {
    opcode=jumpIfFalse ? Opcodes.IFLE : Opcodes.IFGT;
  }
 else   if (opToken == JetTokens.GTEQ) {
    opcode=jumpIfFalse ? Opcodes.IFLT : Opcodes.IFGE;
  }
 else   if (opToken == JetTokens.LT) {
    opcode=jumpIfFalse ? Opcodes.IFGE : Opcodes.IFLT;
  }
 else   if (opToken == JetTokens.LTEQ) {
    opcode=jumpIfFalse ? Opcodes.IFGT : Opcodes.IFLE;
  }
 else {
    throw new UnsupportedOperationException("don't know how to generate this condjump");
  }
  if (type == Type.FLOAT_TYPE) {
    if (opToken == JetTokens.GT || opToken == JetTokens.GTEQ) {
      v.cmpg(type);
    }
 else {
      v.cmpl(type);
    }
  }
 else {
    opcode+=(Opcodes.IF_ICMPEQ - Opcodes.IFEQ);
  }
  v.visitJumpInsn(opcode,label);
}
