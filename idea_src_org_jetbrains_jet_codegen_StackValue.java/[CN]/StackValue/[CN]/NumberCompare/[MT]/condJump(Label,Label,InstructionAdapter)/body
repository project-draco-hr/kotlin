{
  int opcode;
  if (opToken == JetTokens.EQEQ)   opcode=Opcodes.IFEQ;
 else   if (opToken == JetTokens.EXCLEQ)   opcode=Opcodes.IFNE;
 else   if (opToken == JetTokens.GT)   opcode=Opcodes.IFGT;
 else   if (opToken == JetTokens.GTEQ)   opcode=Opcodes.IFGE;
 else   if (opToken == JetTokens.LT)   opcode=Opcodes.IFLT;
 else   if (opToken == JetTokens.LTEQ)   opcode=Opcodes.IFLE;
 else {
    throw new UnsupportedOperationException("don't know how to generate this condjump");
  }
  if (operandType == Type.FLOAT_TYPE || operandType == Type.DOUBLE_TYPE) {
    if (opToken == JetTokens.GT || opToken == JetTokens.GTEQ) {
      v.cmpg(operandType);
    }
 else {
      v.cmpl(operandType);
    }
  }
 else   if (operandType == Type.LONG_TYPE) {
    v.lcmp();
  }
 else {
    opcode+=(Opcodes.IF_ICMPEQ - Opcodes.IFEQ);
  }
  v.visitJumpInsn(opcode,ifTrue);
  v.goTo(ifFalse);
}
