{
  VariableDescriptor variableDescriptor=ctxt.variableDescriptor;
  if (JetPsiUtil.isBackingFieldReference(expression) && variableDescriptor instanceof PropertyDescriptor) {
    PropertyDescriptor propertyDescriptor=(PropertyDescriptor)variableDescriptor;
    JetPropertyAccessor accessor=PsiTreeUtil.getParentOfType(expression,JetPropertyAccessor.class);
    if (accessor != null) {
      DeclarationDescriptor accessorDescriptor=trace.get(BindingContext.DECLARATION_TO_DESCRIPTOR,accessor);
      if (propertyDescriptor.getGetter() == accessorDescriptor) {
        return false;
      }
    }
  }
  boolean isInitializedNotHere=ctxt.enterInitState.isInitialized;
  boolean hasBackingField=true;
  if (variableDescriptor instanceof PropertyDescriptor) {
    hasBackingField=trace.get(BindingContext.BACKING_FIELD_REQUIRED,(PropertyDescriptor)variableDescriptor);
  }
  if (variableDescriptor.isVar() && variableDescriptor instanceof PropertyDescriptor) {
    DeclarationDescriptor descriptor=BindingContextUtils.getEnclosingDescriptor(trace.getBindingContext(),expression);
    PropertySetterDescriptor setterDescriptor=((PropertyDescriptor)variableDescriptor).getSetter();
    ResolvedCall<? extends CallableDescriptor> resolvedCall=CallUtilPackage.getResolvedCall(expression,trace.getBindingContext());
    ReceiverValue receiverValue=ReceiverValue.IRRELEVANT_RECEIVER;
    if (resolvedCall != null) {
      receiverValue=ExpressionTypingUtils.normalizeReceiverValueForVisibility(resolvedCall.getDispatchReceiver(),trace.getBindingContext());
    }
    if (Visibilities.isVisible(receiverValue,variableDescriptor,descriptor) && setterDescriptor != null && !Visibilities.isVisible(receiverValue,setterDescriptor,descriptor)) {
      report(Errors.INVISIBLE_SETTER.on(expression,variableDescriptor,setterDescriptor.getVisibility(),variableDescriptor.getContainingDeclaration()),ctxt);
      return true;
    }
  }
  boolean isThisOrNoDispatchReceiver=PseudocodeUtil.isThisOrNoDispatchReceiver(writeValueInstruction,trace.getBindingContext());
  if ((isInitializedNotHere || !hasBackingField || !isThisOrNoDispatchReceiver) && !variableDescriptor.isVar()) {
    boolean hasReassignMethodReturningUnit=false;
    JetSimpleNameExpression operationReference=null;
    PsiElement parent=expression.getParent();
    if (parent instanceof JetBinaryExpression) {
      operationReference=((JetBinaryExpression)parent).getOperationReference();
    }
 else     if (parent instanceof JetUnaryExpression) {
      operationReference=((JetUnaryExpression)parent).getOperationReference();
    }
    if (operationReference != null) {
      DeclarationDescriptor descriptor=trace.get(BindingContext.REFERENCE_TARGET,operationReference);
      if (descriptor instanceof FunctionDescriptor) {
        if (KotlinBuiltIns.isUnit(((FunctionDescriptor)descriptor).getReturnType())) {
          hasReassignMethodReturningUnit=true;
        }
      }
      if (descriptor == null) {
        Collection<? extends DeclarationDescriptor> descriptors=trace.get(BindingContext.AMBIGUOUS_REFERENCE_TARGET,operationReference);
        if (descriptors != null) {
          for (          DeclarationDescriptor referenceDescriptor : descriptors) {
            if (KotlinBuiltIns.isUnit(((FunctionDescriptor)referenceDescriptor).getReturnType())) {
              hasReassignMethodReturningUnit=true;
            }
          }
        }
      }
    }
    if (!hasReassignMethodReturningUnit) {
      if (!isThisOrNoDispatchReceiver || !varWithValReassignErrorGenerated.contains(variableDescriptor)) {
        report(Errors.VAL_REASSIGNMENT.on(expression,variableDescriptor),ctxt);
      }
      if (isThisOrNoDispatchReceiver) {
        varWithValReassignErrorGenerated.add(variableDescriptor);
      }
      return true;
    }
  }
  return false;
}
