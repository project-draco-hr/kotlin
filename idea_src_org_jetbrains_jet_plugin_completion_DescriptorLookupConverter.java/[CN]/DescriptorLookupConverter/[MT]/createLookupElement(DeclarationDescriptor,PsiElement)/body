{
  LookupElementBuilder element=LookupElementBuilder.create(new JetLookupObject(descriptor,declaration),descriptor.getName());
  String typeText="";
  String tailText="";
  boolean tailTextGrayed=false;
  if (descriptor instanceof FunctionDescriptor) {
    FunctionDescriptor functionDescriptor=(FunctionDescriptor)descriptor;
    JetType returnType=functionDescriptor.getReturnType();
    typeText=DescriptorRenderer.TEXT.renderType(returnType);
    tailText="(" + StringUtil.join(functionDescriptor.getValueParameters(),new Function<ValueParameterDescriptor,String>(){
      @Override public String fun(      ValueParameterDescriptor valueParameterDescriptor){
        return valueParameterDescriptor.getName() + ":" + DescriptorRenderer.TEXT.renderType(valueParameterDescriptor.getType());
      }
    }
,",") + ")";
    if (functionDescriptor.getValueParameters().isEmpty()) {
      element=element.setInsertHandler(EMPTY_FUNCTION_HANDLER);
    }
 else {
      element=element.setInsertHandler(PARAMS_FUNCTION_HANDLER);
    }
  }
 else   if (descriptor instanceof VariableDescriptor) {
    JetType outType=((VariableDescriptor)descriptor).getType();
    typeText=DescriptorRenderer.TEXT.renderType(outType);
  }
 else   if (descriptor instanceof ClassDescriptor) {
    tailText=" (" + DescriptorUtils.getFQName(descriptor.getContainingDeclaration()) + ")";
    tailTextGrayed=true;
  }
 else {
    typeText=DescriptorRenderer.TEXT.render(descriptor);
  }
  element=element.setTailText(tailText,tailTextGrayed).setTypeText(typeText);
  if (declaration != null) {
    element=element.setIcon(declaration.getIcon(Iconable.ICON_FLAG_OPEN | Iconable.ICON_FLAG_VISIBILITY));
  }
  return element;
}
