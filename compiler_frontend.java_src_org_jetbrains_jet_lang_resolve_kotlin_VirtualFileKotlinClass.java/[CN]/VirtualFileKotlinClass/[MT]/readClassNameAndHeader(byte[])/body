{
  final ReadKotlinClassHeaderAnnotationVisitor readHeaderVisitor=new ReadKotlinClassHeaderAnnotationVisitor();
  final Ref<JvmClassName> classNameRef=Ref.create();
  new ClassReader(fileContents).accept(new ClassVisitor(ASM5){
    @Override public void visit(    int version,    int access,    String name,    String signature,    String superName,    String[] interfaces){
      classNameRef.set(JvmClassName.byInternalName(name));
    }
    @Override public org.jetbrains.org.objectweb.asm.AnnotationVisitor visitAnnotation(    String desc,    boolean visible){
      return convertAnnotationVisitor(readHeaderVisitor,desc);
    }
    @Override public void visitEnd(){
      readHeaderVisitor.visitEnd();
    }
  }
,SKIP_CODE | SKIP_DEBUG | SKIP_FRAMES);
  JvmClassName className=classNameRef.get();
  if (className == null)   return null;
  KotlinClassHeader header=readHeaderVisitor.createHeader();
  if (header == null)   return null;
  return Pair.create(className,header);
}
