{
  if (arguments.isEmpty()) {
    if (shouldWrapVarargInArray) {
      result.add(new JsArrayLiteral(Collections.<JsExpression>emptyList()));
    }
    return ArgumentsKind.HAS_NOT_EMPTY_EXPRESSION_ARGUMENT;
  }
  List<JsExpression> list;
  if (shouldWrapVarargInArray) {
    list=arguments.size() == 1 ? new SmartList<JsExpression>() : new ArrayList<JsExpression>(arguments.size());
  }
 else {
    list=result;
  }
  ArgumentsKind resultKind=translateValueArguments(arguments,list,context);
  if (shouldWrapVarargInArray) {
    List<JsExpression> concatArguments=prepareConcatArguments(arguments,list);
    JsExpression concatExpression=concatArgumentsIfNeeded(concatArguments);
    result.add(concatExpression);
  }
  return resultKind;
}
