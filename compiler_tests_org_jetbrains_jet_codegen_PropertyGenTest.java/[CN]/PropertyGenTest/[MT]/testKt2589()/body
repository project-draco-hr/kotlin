{
  createEnvironmentWithMockJdkAndIdeaAnnotations(ConfigurationKind.JDK_ONLY);
  loadFile("regressions/kt2589.kt");
  final Class aClass=loadImplementationClass(generateClassesInFile(),"Foo");
  assertTrue((aClass.getModifiers() & Opcodes.ACC_FINAL) == 0);
  try {
    Field foo=aClass.getDeclaredField("foo");
    assertTrue((foo.getModifiers() & Opcodes.ACC_PRIVATE) != 0);
    assertTrue((foo.getModifiers() & Opcodes.ACC_FINAL) == 0);
    Field bar=aClass.getDeclaredField("bar");
    assertTrue((bar.getModifiers() & Opcodes.ACC_PRIVATE) != 0);
    assertTrue((bar.getModifiers() & Opcodes.ACC_FINAL) != 0);
    Method getFoo=aClass.getDeclaredMethod("getFoo");
    assertTrue((getFoo.getModifiers() & Opcodes.ACC_PUBLIC) != 0);
    assertTrue((getFoo.getModifiers() & Opcodes.ACC_FINAL) != 0);
    Method getBar=aClass.getDeclaredMethod("getBar");
    assertTrue((getBar.getModifiers() & Opcodes.ACC_PROTECTED) != 0);
    assertTrue((getBar.getModifiers() & Opcodes.ACC_FINAL) == 0);
  }
 catch (  Throwable e) {
    System.out.println(generateToText());
    throw new RuntimeException(e);
  }
}
