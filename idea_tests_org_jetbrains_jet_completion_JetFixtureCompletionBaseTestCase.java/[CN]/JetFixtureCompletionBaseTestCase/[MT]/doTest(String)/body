{
  myFixture.configureByFile(testPath);
  String fileText=myFixture.getFile().getText();
  Integer invocationCount=ExpectedCompletionUtils.getInvocationCount(fileText);
  myFixture.complete(completionType(),invocationCount == null ? 0 : invocationCount);
  ExpectedCompletionUtils.assertDirectivesValid(fileText);
  ExpectedCompletionUtils.CompletionProposal[] expected=ExpectedCompletionUtils.itemsShouldExist(fileText,getPlatform());
  ExpectedCompletionUtils.CompletionProposal[] unexpected=ExpectedCompletionUtils.itemsShouldAbsent(fileText,getPlatform());
  Integer itemsNumber=ExpectedCompletionUtils.getExpectedNumber(fileText,getPlatform());
  assertTrue("Should be some assertions about completion",expected.length != 0 || unexpected.length != 0 || itemsNumber != null);
  LookupElement[] items=myFixture.getLookupElements();
  if (items == null) {
    items=new LookupElement[0];
  }
  ExpectedCompletionUtils.assertContainsRenderedItems(expected,items,ExpectedCompletionUtils.isWithOrder(fileText));
  ExpectedCompletionUtils.assertNotContainsRenderedItems(unexpected,items);
  if (itemsNumber != null) {
    assertEquals(String.format("Invalid number of completion items: %s",ExpectedCompletionUtils.listToString(ExpectedCompletionUtils.getItemsInformation(items))),itemsNumber.intValue(),items.length);
  }
}
