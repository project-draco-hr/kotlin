{
  JetType effectiveExpectedType=getEffectiveExpectedType(valueParameterDescriptor,valueArgument);
  JetExpression argumentExpression=valueArgument.getArgumentExpression();
  JetType type;
  if (argumentExpression != null) {
    TemporaryBindingTrace traceForUnknown=TemporaryBindingTrace.create(context.trace,"transient trace to resolve argument",argumentExpression);
    type=expressionTypingServices.getType(context.scope,argumentExpression,substitutor.substitute(effectiveExpectedType,Variance.INVARIANT),context.dataFlowInfo,traceForUnknown);
  }
 else {
    type=null;
  }
  constraintSystem.addSupertypeConstraint(effectiveExpectedType,type,ConstraintPosition.getValueParameterPosition(valueParameterDescriptor.getIndex()));
  if (isErrorType != null) {
    isErrorType[0]=type == null || ErrorUtils.isErrorType(type);
  }
  if (type == null || ErrorUtils.isErrorType(type))   return false;
  return true;
}
