{
  if (results.isSingleResult()) {
    ResolvedCall<D> call=results.getResultingCall();
    if (call instanceof ResolvedCallImpl) {
      argumentTypeResolver.checkUnmappedArgumentTypes(context,((ResolvedCallImpl<D>)call).getUnmappedArguments());
    }
  }
  if (!results.isSingleResult())   return results;
  ResolvedCallImpl<D> resolvedCall=results.getResultingCall().getCallToCompleteTypeArgumentInference();
  if (!resolvedCall.hasIncompleteTypeParameters()) {
    CallCandidateResolutionContext<D> callCandidateResolutionContext=CallCandidateResolutionContext.createForCallBeingAnalyzed(resolvedCall,context,tracing);
    candidateResolver.completeNestedCallsInference(callCandidateResolutionContext);
    candidateResolver.checkValueArgumentTypes(callCandidateResolutionContext);
    return results;
  }
  ResolvedCallImpl<D> copy=CallResolverUtil.copy(resolvedCall,context);
  CallCandidateResolutionContext<D> callCandidateResolutionContext=CallCandidateResolutionContext.createForCallBeingAnalyzed(copy,context,tracing);
  candidateResolver.completeTypeInferenceDependentOnExpectedTypeForCall(callCandidateResolutionContext,false);
  if (copy.getStatus().isSuccess()) {
    return OverloadResolutionResultsImpl.success(copy);
  }
  return OverloadResolutionResultsImpl.incompleteTypeInference(copy);
}
