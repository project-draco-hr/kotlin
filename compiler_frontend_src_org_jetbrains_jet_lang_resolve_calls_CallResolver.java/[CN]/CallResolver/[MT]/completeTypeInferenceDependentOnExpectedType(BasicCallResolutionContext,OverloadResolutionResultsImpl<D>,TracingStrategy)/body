{
  if (CallResolverUtil.isInvokeCallOnVariable(context.call))   return results;
  if (results.isSingleResult()) {
    Set<ValueArgument> unmappedArguments=results.getResultingCall().getCallToCompleteTypeArgumentInference().getUnmappedArguments();
    argumentTypeResolver.checkUnmappedArgumentTypes(context,unmappedArguments);
    candidateResolver.completeUnmappedArguments(context,unmappedArguments);
  }
  if (!results.isSingleResult())   return results;
  ResolvedCallWithTrace<D> resolvedCall=results.getResultingCall();
  ResolvedCallImpl<D> callToCompleteInference=resolvedCall.getCallToCompleteTypeArgumentInference();
  CallCandidateResolutionContext<D> callCandidateResolutionContext=CallCandidateResolutionContext.createForCallBeingAnalyzed(callToCompleteInference,context,tracing);
  candidateResolver.completeTypeInferenceDependentOnExpectedTypeForCall(callCandidateResolutionContext,false);
  if (callToCompleteInference.getStatus().isSuccess()) {
    return OverloadResolutionResultsImpl.success(resolvedCall);
  }
  return results;
}
