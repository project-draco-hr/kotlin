{
  if (results.getResultCode() != OverloadResolutionResults.Code.INCOMPLETE_TYPE_INFERENCE)   return;
  if (!results.isSingleResult() || !(results.getResultingCall() instanceof ResolvedCallImpl)) {
    argumentTypeResolver.checkTypesWithNoCallee(context,RESOLVE_FUNCTION_ARGUMENTS);
    return;
  }
  CallCandidateResolutionContext<D> candidateContext=CallCandidateResolutionContext.createForCallBeingAnalyzed((ResolvedCallImpl<D>)results.getResultingCall(),context,tracing);
  candidateResolver.completeTypeInferenceDependentOnFunctionLiteralsForCall(candidateContext);
}
