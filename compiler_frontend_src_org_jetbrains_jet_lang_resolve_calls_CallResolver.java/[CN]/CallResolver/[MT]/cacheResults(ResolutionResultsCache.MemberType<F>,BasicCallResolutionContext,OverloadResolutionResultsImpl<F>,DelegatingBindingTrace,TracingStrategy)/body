{
  PsiElement callElement=context.call.getCallElement();
  if (!(callElement instanceof JetExpression))   return;
  DelegatingBindingTrace deltasTraceToCacheResolve=new DelegatingBindingTrace(new BindingTraceContext().getBindingContext(),"delta trace for caching resolve of",context.call);
  traceToResolveCall.addAllMyDataTo(deltasTraceToCacheResolve);
  JetExpression callExpression=(JetExpression)callElement;
  context.resolutionResultsCache.recordResolutionResults(CallKey.create(context.call.getCallType(),callExpression),memberType,results);
  context.resolutionResultsCache.recordResolutionTrace(callExpression,deltasTraceToCacheResolve);
  if (results.isSingleResult() && memberType == ResolutionResultsCache.FUNCTION_MEMBER_TYPE) {
    CallCandidateResolutionContext<F> callCandidateResolutionContext=CallCandidateResolutionContext.createForCallBeingAnalyzed(results.getResultingCall().getCallToCompleteTypeArgumentInference(),context,tracing);
    context.resolutionResultsCache.recordDeferredComputationForCall(callExpression,callCandidateResolutionContext,memberType);
  }
}
