{
  boolean result=checkValueArgumentTypes(scope,candidateCall);
  ReceiverDescriptor receiverArgument=candidateCall.getReceiverArgument();
  ReceiverDescriptor receiverParameter=candidateCall.getResultingDescriptor().getReceiverParameter();
  boolean safeAccess=task.getCall().getCallOperationNode() == JetTokens.SAFE_ACCESS;
  if (receiverParameter.exists() && receiverArgument.exists()) {
    JetType receiverArgumentType=receiverArgument.getType();
    if (!safeAccess && !receiverParameter.getType().isNullable() && receiverArgumentType.isNullable()) {
      tracing.unsafeCall(candidateCall.getTrace(),receiverArgumentType);
      result=false;
    }
 else     if (!semanticServices.getTypeChecker().isSubtypeOf(receiverArgument.getType(),receiverParameter.getType())) {
      tracing.wrongReceiverType(candidateCall.getTrace(),receiverParameter,receiverArgument);
      return false;
    }
    if (safeAccess && (receiverParameter.getType().isNullable() || !receiverArgumentType.isNullable())) {
      tracing.unnecessarySafeCall(candidateCall.getTrace(),receiverArgumentType);
    }
  }
  return result;
}
