{
  ResolutionStatus result=SUCCESS;
  for (  Map.Entry<ValueParameterDescriptor,ResolvedValueArgument> entry : candidateCall.getValueArguments().entrySet()) {
    ValueParameterDescriptor parameterDescriptor=entry.getKey();
    ResolvedValueArgument resolvedArgument=entry.getValue();
    JetType parameterType=getEffectiveExpectedType(parameterDescriptor);
    List<JetExpression> argumentExpressions=resolvedArgument.getArgumentExpressions();
    for (    JetExpression argumentExpression : argumentExpressions) {
      ExpressionTypingServices temporaryServices=new ExpressionTypingServices(semanticServices,candidateCall.getTrace());
      JetType type=temporaryServices.getType(scope,argumentExpression,parameterType);
      if (type == null) {
        candidateCall.argumentHasNoType();
      }
 else       if (!semanticServices.getTypeChecker().isSubtypeOf(type,parameterType)) {
        result=OTHER_ERROR;
      }
    }
  }
  return result;
}
