{
  for (  ValueArgument valueArgument : call.getValueArguments()) {
    JetExpression argumentExpression=valueArgument.getArgumentExpression();
    if (argumentExpression != null) {
      context.expressionTypingServices.getType(scope,argumentExpression,NO_EXPECTED_TYPE,trace);
    }
  }
  for (  JetExpression expression : call.getFunctionLiteralArguments()) {
    context.expressionTypingServices.getType(scope,expression,NO_EXPECTED_TYPE,trace);
  }
  for (  JetTypeProjection typeProjection : call.getTypeArguments()) {
    typeResolver.resolveType(scope,typeProjection.getTypeReference(),trace,true);
  }
}
