{
  assertType("1.0.plus(1.toDouble())","Double");
  assertType("1.0.plus(1.toFloat())","Double");
  assertType("1.0.plus(1.toLong())","Double");
  assertType("1.0.plus(1)","Double");
  assertType("1.toFloat().plus(1.toDouble())","Double");
  assertType("1.toFloat().plus(1.toFloat())","Float");
  assertType("1.toFloat().plus(1.toLong())","Float");
  assertType("1.toFloat().plus(1)","Float");
  assertType("1.toLong().plus(1.toDouble())","Double");
  assertType("1.toLong().plus(1.toFloat())","Float");
  assertType("1.toLong().plus(1.toLong())","Long");
  assertType("1.toLong().plus(1)","Long");
  assertType("1.plus(1.toDouble())","Double");
  assertType("1.plus(1.toFloat())","Float");
  assertType("1.plus(1.toLong())","Long");
  assertType("1.plus(1)","Int");
  assertType("'1'.plus(1)","Char");
  assertType("'1'.minus(1)","Char");
  assertType("'1'.minus('1')","Int");
  assertType("(1:Short).plus(1.toDouble())","Double");
  assertType("(1:Short).plus(1.toFloat())","Float");
  assertType("(1:Short).plus(1.toLong())","Long");
  assertType("(1:Short).plus(1)","Int");
  assertType("(1:Short).plus(1:Short)","Int");
  assertType("(1:Byte).plus(1.toDouble())","Double");
  assertType("(1:Byte).plus(1.toFloat())","Float");
  assertType("(1:Byte).plus(1.toLong())","Long");
  assertType("(1:Byte).plus(1)","Int");
  assertType("(1:Byte).plus(1:Short)","Int");
  assertType("(1:Byte).plus(1:Byte)","Int");
  assertType("\"1\".plus(1.toDouble())","String");
  assertType("\"1\".plus(1.toFloat())","String");
  assertType("\"1\".plus(1.toLong())","String");
  assertType("\"1\".plus(1)","String");
  assertType("\"1\".plus('1')","String");
}
