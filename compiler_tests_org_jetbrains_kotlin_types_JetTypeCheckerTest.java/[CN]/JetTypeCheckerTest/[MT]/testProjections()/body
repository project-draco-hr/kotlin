{
  assertSubtype("Base_T<Int>","Base_T<Int>");
  assertNotSubtype("Base_T<Int>","Base_T<Any>");
  assertSubtype("Base_inT<Int>","Base_inT<Int>");
  assertSubtype("Base_inT<Any>","Base_inT<Int>");
  assertNotSubtype("Base_inT<Int>","Base_inT<Any>");
  assertSubtype("Base_outT<Int>","Base_outT<Int>");
  assertSubtype("Base_outT<Int>","Base_outT<Any>");
  assertNotSubtype("Base_outT<Any>","Base_outT<Int>");
  assertSubtype("Base_T<Int>","Base_T<out Any>");
  assertSubtype("Base_T<Any>","Base_T<in Int>");
  assertSubtype("Base_T<out Int>","Base_T<out Int>");
  assertSubtype("Base_T<in Int>","Base_T<in Int>");
  assertSubtype("Base_inT<out Int>","Base_inT<out Int>");
  assertSubtype("Base_inT<in Int>","Base_inT<in Int>");
  assertSubtype("Base_outT<out Int>","Base_outT<out Int>");
  assertSubtype("Base_outT<in Int>","Base_outT<in Int>");
  assertSubtype("Base_T<Int>","Base_T<*>");
  assertSubtype("Base_T<*>","Base_T<*>");
  assertSubtype("Base_T<Int>","Base_T<out Any>");
  assertSubtype("Base_T<Any>","Base_T<in Int>");
  assertNotSubtype("Base_T<out Any>","Base_T<in Int>");
  assertNotSubtype("Base_T<in Int>","Base_T<out Int>");
  assertNotSubtype("Base_T<*>","Base_T<out Int>");
  assertSubtype("Derived_T<Int>","Base_T<Int>");
  assertSubtype("Derived_outT<Int>","Base_outT<Int>");
  assertSubtype("Derived_inT<Int>","Base_inT<Int>");
  assertSubtype("Derived_T<*>","Base_T<*>");
  assertNotSubtype("Derived_T<Int>","Base_T<Any>");
  assertSubtype("Derived_outT<Int>","Base_outT<Any>");
  assertSubtype("Derived_T<Int>","Base_T<out Any>");
  assertSubtype("Derived_T<Any>","Base_T<in Int>");
  assertSubtype("Derived_T<Int>","Base_T<in Int>");
  assertSubtype("MDerived_T<Int>","Base_T<in Int>");
  assertSubtype("ArrayList<Int>","InvList<in Int>");
}
