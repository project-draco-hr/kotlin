{
  JetExpression receiverExpression=expression.getReceiverExpression();
  if (receiverExpression != null) {
    final JetScope resolutionScope=context.get(BindingContext.RESOLUTION_SCOPE,expression);
    final JetType expressionType=context.get(BindingContext.EXPRESSION_TYPE,receiverExpression);
    if (expressionType != null && resolutionScope != null) {
      if (!(expressionType instanceof NamespaceType)) {
        ExpressionReceiver receiverDescriptor=new ExpressionReceiver(receiverExpression,expressionType);
        Set<DeclarationDescriptor> descriptors=new HashSet<DeclarationDescriptor>();
        DataFlowInfo info=context.get(BindingContext.NON_DEFAULT_EXPRESSION_DATA_FLOW,expression);
        if (info == null) {
          info=DataFlowInfo.EMPTY;
        }
        AutoCastServiceImpl autoCastService=new AutoCastServiceImpl(info,context);
        List<ReceiverDescriptor> variantsForExplicitReceiver=autoCastService.getVariantsForReceiver(receiverDescriptor);
        for (        ReceiverDescriptor descriptor : variantsForExplicitReceiver) {
          descriptors.addAll(includeExternalCallableExtensions(excludePrivateDescriptors(descriptor.getType().getMemberScope().getAllDescriptors(DescriptorPredicate.hasName(name))),resolutionScope,descriptor,name));
        }
        return descriptors;
      }
      return includeExternalCallableExtensions(excludePrivateDescriptors(expressionType.getMemberScope().getAllDescriptors(DescriptorPredicate.hasName(name))),resolutionScope,new ExpressionReceiver(receiverExpression,expressionType),name);
    }
    return Collections.emptyList();
  }
 else {
    return getVariantsNoReceiver(expression,context,name);
  }
}
