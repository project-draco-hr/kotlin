{
  if (isLHSOfDot(expression) && classifier instanceof ClassDescriptor) {
    List<JetScope> scopes=new ArrayList<JetScope>(3);
    scopes.add(classObjectType.getMemberScope());
    scopes.add(getStaticNestedClassesScope((ClassDescriptor)classifier));
    Name referencedName=expression.getReferencedNameAsName();
    NamespaceDescriptor namespace=context.scope.getNamespace(referencedName);
    if (namespace != null) {
      scopes.add(namespace.getMemberScope());
    }
    JetScope scope=new ChainedScope(classifier,scopes.toArray(new JetScope[scopes.size()]));
    return new NamespaceType(referencedName,scope,new ExpressionReceiver(expression,classObjectType));
  }
  return classObjectType;
}
