{
  final JetExpression initializer=multiDeclaration.getInitializer();
  if (initializer == null) {
    context.trace.report(INITIALIZER_REQUIRED_FOR_MULTIDECLARATION.on(multiDeclaration));
    return JetTypeInfo.create(null,context.dataFlowInfo);
  }
  final ExpressionReceiver expressionReceiver=ExpressionTypingUtils.getExpressionReceiver(facade,initializer,context.replaceExpectedType(TypeUtils.NO_EXPECTED_TYPE));
  DataFlowInfo dataFlowInfo=facade.getTypeInfo(initializer,context).getDataFlowInfo();
  if (expressionReceiver == null) {
    return JetTypeInfo.create(null,dataFlowInfo);
  }
  ExpressionTypingUtils.defineLocalVariablesFromMultiDeclaration(scope,multiDeclaration,expressionReceiver,initializer,context);
  return DataFlowUtils.checkStatementType(multiDeclaration,context,dataFlowInfo);
}
