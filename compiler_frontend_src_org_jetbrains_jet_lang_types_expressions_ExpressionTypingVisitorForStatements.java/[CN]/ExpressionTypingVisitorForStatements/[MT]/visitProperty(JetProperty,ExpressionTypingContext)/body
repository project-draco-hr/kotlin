{
  JetTypeReference receiverTypeRef=property.getReceiverTypeRef();
  if (receiverTypeRef != null) {
    context.trace.report(LOCAL_EXTENSION_PROPERTY.on(receiverTypeRef));
  }
  JetPropertyAccessor getter=property.getGetter();
  if (getter != null) {
    context.trace.report(LOCAL_VARIABLE_WITH_GETTER.on(getter));
  }
  JetPropertyAccessor setter=property.getSetter();
  if (setter != null) {
    context.trace.report(LOCAL_VARIABLE_WITH_SETTER.on(setter));
  }
  VariableDescriptor propertyDescriptor=context.getDescriptorResolver().resolveLocalVariableDescriptor(scope.getContainingDeclaration(),scope,property);
  JetExpression initializer=property.getInitializer();
  if (property.getPropertyTypeRef() != null && initializer != null) {
    JetType outType=propertyDescriptor.getOutType();
    JetType initializerType=facade.getType(initializer,context.replaceExpectedType(outType).replaceScope(scope));
  }
{
    VariableDescriptor olderVariable=scope.getVariable(propertyDescriptor.getName());
    if (olderVariable != null && DescriptorUtils.isLocal(propertyDescriptor.getContainingDeclaration(),olderVariable)) {
      context.trace.report(Errors.NAME_SHADOWING.on(propertyDescriptor,context.trace.getBindingContext()));
    }
  }
  scope.addVariableDescriptor(propertyDescriptor);
  return checkExpectedType(property,context);
}
