{
  boolean getterNeeded=false;
  JetExpression left=JetPsiUtil.deparenthesize(expression.getLeft());
  JetExpression right=expression.getRight();
  if (left instanceof JetArrayAccessExpression) {
    JetArrayAccessExpression arrayAccessExpression=(JetArrayAccessExpression)left;
    return resolveArrayAccessToLValue(arrayAccessExpression,right,expression.getOperationReference(),context,getterNeeded);
  }
  JetType leftType=facade.getType(left,context.replaceExpectedType(TypeUtils.NO_EXPECTED_TYPE).replaceScope(scope));
  if (right != null) {
    JetType rightType=facade.getType(right,context.replaceExpectedType(leftType).replaceScope(scope));
  }
  if (left instanceof JetSimpleNameExpression) {
    JetSimpleNameExpression simpleName=(JetSimpleNameExpression)left;
    String referencedName=simpleName.getReferencedName();
    if (simpleName.getReferencedNameElementType() == JetTokens.FIELD_IDENTIFIER && referencedName != null) {
      PropertyDescriptor property=context.scope.getPropertyByFieldReference(referencedName);
      if (property != null) {
        context.trace.record(BindingContext.VARIABLE_ASSIGNMENT,simpleName,property);
      }
    }
    ExpressionTypingUtils.checkWrappingInRef(simpleName,context);
  }
  return checkExpectedType(expression,context);
}
