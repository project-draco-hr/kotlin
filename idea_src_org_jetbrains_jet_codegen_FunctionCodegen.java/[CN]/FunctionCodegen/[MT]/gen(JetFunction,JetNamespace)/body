{
  final List<JetParameter> parameters=f.getValueParameters();
  Type[] parameterTypes=new Type[parameters.size()];
  for (int i=0; i < parameters.size(); i++) {
    parameterTypes[i]=mapTypeReference(parameters.get(i).getTypeReference());
  }
  final JetTypeReference returnTypeRef=f.getReturnTypeRef();
  Type returnType=returnTypeRef == null ? Type.VOID_TYPE : mapTypeReference(returnTypeRef);
  Method method=new Method(f.getName(),returnType,parameterTypes);
  final MethodVisitor mv=v.visitMethod(Opcodes.ACC_PUBLIC | Opcodes.ACC_STATIC,method.getName(),method.getDescriptor(),null,null);
  mv.visitCode();
  final JetExpression bodyExpression=f.getBodyExpression();
  bodyExpression.accept(new ExpressionCodegen(mv));
  if (needReturn(bodyExpression)) {
    mv.visitInsn(Opcodes.RETURN);
  }
  mv.visitMaxs(0,0);
  mv.visitEnd();
}
