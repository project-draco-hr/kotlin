{
  if (qualifiedName.startsWith("java."))   return PsiClass.EMPTY_ARRAY;
  List<PsiClass> answer=new SmartList<PsiClass>();
  final List<JetFile> filesInScope=collectProjectJetFiles(project,scope);
  for (  JetFile file : filesInScope) {
    JetNamespace rootNamespace=file.getRootNamespace();
    final String packageName=JetPsiUtil.getFQName(rootNamespace);
    if (packageName != null && qualifiedName.startsWith(packageName)) {
      if (qualifiedName.equals(fqn(packageName,"namespace"))) {
        answer.add(new JetLightClass(psiManager,file,qualifiedName));
      }
 else {
        for (        JetDeclaration declaration : rootNamespace.getDeclarations()) {
          scanClasses(answer,declaration,qualifiedName,packageName,file);
        }
      }
    }
  }
  return answer.toArray(new PsiClass[answer.size()]);
}
