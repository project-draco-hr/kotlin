{
  registrar.registerReferenceProvider(psiElement(JetSimpleNameExpression.class),new PsiReferenceProvider(){
    @NotNull @Override public PsiReference[] getReferencesByElement(    @NotNull PsiElement element,    @NotNull ProcessingContext processingContext){
      return new PsiReference[]{new JetSimpleNameReference((JetSimpleNameExpression)element)};
    }
  }
);
  registrar.registerReferenceProvider(psiElement(JetNamespaceHeader.class),new PsiReferenceProvider(){
    @NotNull @Override public PsiReference[] getReferencesByElement(    @NotNull PsiElement element,    @NotNull ProcessingContext context){
      return new PsiReference[]{new JetPackageReference((JetNamespaceHeader)element)};
    }
  }
);
  registrar.registerReferenceProvider(psiElement(JetThisReferenceExpression.class),new PsiReferenceProvider(){
    @NotNull @Override public PsiReference[] getReferencesByElement(    @NotNull PsiElement element,    @NotNull ProcessingContext processingContext){
      return new PsiReference[]{new JetThisReference((JetThisReferenceExpression)element)};
    }
  }
);
  registrar.registerReferenceProvider(psiElement(JetArrayAccessExpression.class),new PsiReferenceProvider(){
    @NotNull @Override public PsiReference[] getReferencesByElement(    @NotNull PsiElement element,    @NotNull ProcessingContext processingContext){
      return JetArrayAccessReference.create((JetArrayAccessExpression)element);
    }
  }
);
}
