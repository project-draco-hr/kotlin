{
  ProtoBuf.Class.Builder builder=ProtoBuf.Class.newBuilder();
  int flags=Flags.getClassFlags(classDescriptor.getVisibility(),classDescriptor.getModality(),classDescriptor.getKind(),classDescriptor.isInner());
  builder.setFlags(flags);
  builder.setName(nameTable.getSimpleNameIndex(classDescriptor.getName()));
  DescriptorSerializer local=createChildSerializer();
  for (  TypeParameterDescriptor typeParameterDescriptor : classDescriptor.getTypeConstructor().getParameters()) {
    builder.addTypeParameters(local.typeParameter(typeParameterDescriptor));
  }
  for (  JetType supertype : classDescriptor.getTypeConstructor().getSupertypes()) {
    builder.addSupertypes(local.type(supertype));
  }
  for (  DeclarationDescriptor descriptor : classDescriptor.getDefaultType().getMemberScope().getAllDescriptors()) {
    if (descriptor instanceof CallableMemberDescriptor) {
      CallableMemberDescriptor member=(CallableMemberDescriptor)descriptor;
      if (member.getKind() == CallableMemberDescriptor.Kind.FAKE_OVERRIDE)       continue;
      builder.addMembers(local.callableProto(member));
    }
  }
  return builder;
}
