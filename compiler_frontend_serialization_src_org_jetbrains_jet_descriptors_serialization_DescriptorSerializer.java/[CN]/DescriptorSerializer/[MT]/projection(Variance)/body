{
switch (projectionKind) {
case INVARIANT:
    return ProtoBuf.Type.Argument.Projection.INV;
case IN_VARIANCE:
  return ProtoBuf.Type.Argument.Projection.IN;
case OUT_VARIANCE:
return ProtoBuf.Type.Argument.Projection.OUT;
}
throw new IllegalStateException("Unknown projectionKind: " + projectionKind);
}
