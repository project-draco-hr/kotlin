{
  process(project,trace,outerScope,new NamespaceLike.Adapter(containingDeclaration){
    @Override public NamespaceDescriptorImpl getNamespace(    String name){
      throw new UnsupportedOperationException();
    }
    @Override public void addNamespace(    @NotNull NamespaceDescriptor namespaceDescriptor){
      throw new UnsupportedOperationException();
    }
    @Override public void addClassifierDescriptor(    @NotNull MutableClassDescriptorLite classDescriptor){
    }
    @Override public void addObjectDescriptor(    @NotNull MutableClassDescriptorLite objectDescriptor){
    }
    @Override public void addFunctionDescriptor(    @NotNull SimpleFunctionDescriptor functionDescriptor){
      throw new UnsupportedOperationException();
    }
    @Override public void addPropertyDescriptor(    @NotNull PropertyDescriptor propertyDescriptor){
    }
    @Override public ClassObjectStatus setClassObjectDescriptor(    @NotNull MutableClassDescriptorLite classObjectDescriptor){
      return ClassObjectStatus.NOT_ALLOWED;
    }
  }
,Collections.<PsiElement>singletonList(object),Predicates.equalTo(object.getContainingFile()),JetControlFlowDataTraceFactory.EMPTY,ModuleConfiguration.EMPTY,true);
}
