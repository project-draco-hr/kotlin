{
  int[] keys=this.keys;
  if (keys != null) {
    int fraction=key * A;
    int index=fraction >>> (32 - power);
    int entry=keys[index];
    if (entry == key) {
      return index;
    }
    if (entry != EMPTY) {
      int mask=(1 << power) - 1;
      int step=tableLookupStep(fraction,mask,power);
      int n=0;
      do {
        if (check) {
          if (n >= occupiedCount)           Context.codeBug();
          ++n;
        }
        index=(index + step) & mask;
        entry=keys[index];
        if (entry == key) {
          return index;
        }
      }
 while (entry != EMPTY);
    }
  }
  return -1;
}
