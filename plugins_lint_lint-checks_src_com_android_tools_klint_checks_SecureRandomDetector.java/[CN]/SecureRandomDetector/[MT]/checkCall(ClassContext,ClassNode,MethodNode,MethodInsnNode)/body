{
  String owner=call.owner;
  String desc=call.desc;
  if (owner.equals(OWNER_SECURE_RANDOM)) {
    if (desc.startsWith(LONG_ARG)) {
      checkValidSetSeed(context,call);
    }
 else     if (desc.startsWith("([B)")) {
    }
  }
 else   if (owner.equals(OWNER_RANDOM) && desc.startsWith(LONG_ARG)) {
    Analyzer analyzer=new Analyzer(new BasicInterpreter(){
      @Override public BasicValue newValue(      Type type){
        if (type != null && type.getDescriptor().equals(VM_SECURE_RANDOM)) {
          return new BasicValue(type);
        }
        return super.newValue(type);
      }
    }
);
    try {
      Frame[] frames=analyzer.analyze(classNode.name,method);
      InsnList instructions=method.instructions;
      Frame frame=frames[instructions.indexOf(call)];
      int stackSlot=frame.getStackSize();
      for (      Type type : Type.getArgumentTypes(desc)) {
        stackSlot-=type.getSize();
      }
      BasicValue stackValue=(BasicValue)frame.getStack(stackSlot);
      Type type=stackValue.getType();
      if (type != null && type.getDescriptor().equals(VM_SECURE_RANDOM)) {
        checkValidSetSeed(context,call);
      }
    }
 catch (    AnalyzerException e) {
      context.log(e,null);
    }
  }
 else   if (owner.equals(OWNER_RANDOM) && desc.startsWith(LONG_ARG)) {
  }
}
