{
  if (!descriptorFilter.value(descriptor)) {
    return;
  }
  addElement(DescriptorLookupConverter.createLookupElement(resolveSession,bindingContext,descriptor));
  if (descriptor instanceof FunctionDescriptor) {
    FunctionDescriptor functionDescriptor=(FunctionDescriptor)descriptor;
    List<ValueParameterDescriptor> parameters=functionDescriptor.getValueParameters();
    if (parameters.size() == 1) {
      final JetType parameterType=parameters.get(0).getType();
      if (KotlinBuiltIns.getInstance().isFunctionOrExtensionFunctionType(parameterType)) {
        int parameterCount=KotlinBuiltIns.getInstance().getParameterTypeProjectionsFromFunctionType(parameterType).size();
        if (parameterCount > 1) {
          LookupElement lookupElement=DescriptorLookupConverter.createLookupElement(resolveSession,bindingContext,descriptor);
          addElement(new LookupElementDecorator<LookupElement>(lookupElement){
            @Override public void renderElement(            LookupElementPresentation presentation){
              super.renderElement(presentation);
              presentation.setItemText(getLookupString() + " " + HandlersPackage.buildLambdaPresentation(parameterType));
            }
            @Override public void handleInsert(            InsertionContext context){
              new JetFunctionInsertHandler(CaretPosition.IN_BRACKETS,new GenerateLambdaInfo(parameterType,true)).handleInsert(context,this);
            }
          }
);
        }
      }
    }
  }
}
