{
  super.visitReferenceExpression(expression);
  if (!myCheckAccess) {
    return;
  }
  PsiReference reference=expression.getReference();
  if (reference == null) {
    return;
  }
  PsiElement resolved=reference.resolve();
  if (resolved != null) {
    if (resolved instanceof PsiField) {
      PsiField field=(PsiField)resolved;
      PsiClass containingClass=field.getContainingClass();
      if (containingClass == null) {
        return;
      }
      String owner=IntellijLintUtils.getInternalName(containingClass);
      if (owner == null) {
        return;
      }
      String name=field.getName();
      int api=mApiDatabase.getFieldVersion(owner,name);
      if (api == -1) {
        return;
      }
      int minSdk=getMinSdk(myContext);
      if (isSuppressed(api,expression,minSdk)) {
        return;
      }
      com.android.tools.klint.detector.api.Location location=IntellijLintUtils.getLocation(myContext.file,expression);
      String fqcn=containingClass.getQualifiedName();
      String message=String.format("Field requires API level %1$d (current min is %2$d): %3$s",api,minSdk,fqcn + '#' + name);
      com.android.tools.klint.detector.api.Issue issue=UNSUPPORTED;
      PsiType type=field.getType();
      if (PsiType.INT.equals(type) || PsiType.CHAR.equals(type) || PsiType.BOOLEAN.equals(type)|| PsiType.DOUBLE.equals(type)|| PsiType.FLOAT.equals(type)|| PsiType.BYTE.equals(type)|| type.equalsToText(CommonClassNames.JAVA_LANG_STRING)) {
        issue=INLINED;
        if (isBenignConstantUsage(expression,name,owner)) {
          return;
        }
      }
      myContext.report(issue,location,message);
    }
  }
}
