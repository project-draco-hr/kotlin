{
  PsiElement element=e;
  while (element != null && element != file) {
    if (element instanceof PsiModifierListOwner) {
      PsiModifierListOwner owner=(PsiModifierListOwner)element;
      PsiModifierList modifierList=owner.getModifierList();
      PsiAnnotation annotation=null;
      if (modifierList != null) {
        annotation=modifierList.findAnnotation(TARGET_API_FQCN);
      }
      if (annotation != null) {
        for (        PsiNameValuePair pair : annotation.getParameterList().getAttributes()) {
          PsiAnnotationMemberValue v=pair.getValue();
          if (v instanceof PsiLiteral) {
            PsiLiteral literal=(PsiLiteral)v;
            Object value=literal.getValue();
            if (value instanceof Integer) {
              return (Integer)value;
            }
 else             if (value instanceof String) {
              return codeNameToApi((String)value);
            }
          }
 else           if (v instanceof PsiArrayInitializerMemberValue) {
            PsiArrayInitializerMemberValue mv=(PsiArrayInitializerMemberValue)v;
            for (            PsiAnnotationMemberValue mmv : mv.getInitializers()) {
              if (mmv instanceof PsiLiteral) {
                PsiLiteral literal=(PsiLiteral)mmv;
                Object value=literal.getValue();
                if (value instanceof Integer) {
                  return (Integer)value;
                }
 else                 if (value instanceof String) {
                  return codeNameToApi((String)value);
                }
              }
            }
          }
 else           if (v instanceof PsiExpression) {
            if (v instanceof PsiReferenceExpression) {
              String fqcn=((PsiReferenceExpression)v).getQualifiedName();
              return codeNameToApi(fqcn);
            }
 else {
              return codeNameToApi(v.getText());
            }
          }
        }
      }
    }
    element=element.getParent();
  }
  return -1;
}
