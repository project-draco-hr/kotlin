{
  final JetFile file=(JetFile)sourcePosition.getFile();
  JetTypeMapper typeMapper=prepareTypeMapper(file);
  final Collection<String> names=new ArrayList<String>();
  JetClassOrObject jetClass=PsiTreeUtil.getParentOfType(sourcePosition.getElementAt(),JetClassOrObject.class);
  if (jetClass != null) {
    names.addAll(typeMapper.allJvmNames(jetClass));
  }
 else {
    JetNamespace namespace=PsiTreeUtil.getParentOfType(sourcePosition.getElementAt(),JetNamespace.class);
    if (namespace != null) {
      names.add(NamespaceCodegen.getJVMClassName(CodegenUtil.getFQName(namespace)));
    }
 else {
      names.add(NamespaceCodegen.getJVMClassName(CodegenUtil.getFQName(file.getRootNamespace())));
    }
  }
  return names;
}
