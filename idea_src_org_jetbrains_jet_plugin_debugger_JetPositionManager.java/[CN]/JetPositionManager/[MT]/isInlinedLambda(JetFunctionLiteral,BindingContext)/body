{
  PsiElement functionLiteralExpression=functionLiteral.getParent();
  if (functionLiteralExpression == null)   return false;
  PsiElement parent=functionLiteralExpression.getParent();
  PsiElement valueArgument=functionLiteralExpression;
  while (parent instanceof JetParenthesizedExpression || parent instanceof JetBinaryExpressionWithTypeRHS || parent instanceof JetLabeledExpression) {
    valueArgument=parent;
    parent=parent.getParent();
  }
  while (parent instanceof ValueArgument || parent instanceof JetValueArgumentList) {
    parent=parent.getParent();
  }
  if (!(parent instanceof JetElement))   return false;
  ResolvedCall<?> call=BindingContextUtilPackage.getResolvedCall((JetElement)parent,context);
  if (call == null)   return false;
  InlineStrategy inlineType=InlineUtil.getInlineType(call.getResultingDescriptor());
  if (!inlineType.isInline())   return false;
  for (  Map.Entry<ValueParameterDescriptor,ResolvedValueArgument> entry : call.getValueArguments().entrySet()) {
    ValueParameterDescriptor valueParameterDescriptor=entry.getKey();
    ResolvedValueArgument resolvedValueArgument=entry.getValue();
    for (    ValueArgument next : resolvedValueArgument.getArguments()) {
      JetExpression expression=next.getArgumentExpression();
      if (valueArgument == expression) {
        return InlineAnalyzerExtension.checkInlinableParameter(valueParameterDescriptor,expression,call.getResultingDescriptor(),null);
      }
    }
  }
  return false;
}
