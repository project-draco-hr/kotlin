{
  final JetTypeMapper mapper=myTypeMappers.get(file);
  if (mapper != null) {
    return mapper;
  }
  final BindingContext bindingContext=AnalyzerFacade.analyzeFileWithCache(file);
  final JetStandardLibrary standardLibrary=JetStandardLibrary.getJetStandardLibrary(myDebugProcess.getProject());
  final JetTypeMapper typeMapper=new JetTypeMapper(standardLibrary,bindingContext);
  file.acceptChildren(new JetVisitorVoid(){
    @Override public void visitJetElement(    JetElement element){
      element.acceptChildren(this);
    }
    @Override public void visitClass(    JetClass klass){
      GenerationState.prepareAnonymousClasses(klass,typeMapper);
    }
  }
);
  myTypeMappers.put(file,typeMapper);
  return typeMapper;
}
