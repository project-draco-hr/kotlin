{
  String testFileName=name + ".jet";
  String expectedText=loadFile(testFileName);
  List<TestFile> testFileFiles=JetTestUtils.createTestFiles(testFileName,expectedText,new JetTestUtils.TestFileFactory<TestFile>(){
    @Override public TestFile create(    String fileName,    String text){
      return new TestFile(fileName,text);
    }
  }
);
  boolean importJdk=expectedText.contains("+JDK");
  List<JetFile> jetFiles=Lists.newArrayList();
  for (  TestFile testFileFile : testFileFiles) {
    jetFiles.add(testFileFile.jetFile);
  }
  BindingContext bindingContext;
  if (importJdk) {
    bindingContext=AnalyzerFacade.analyzeFilesWithJavaIntegration(getProject(),jetFiles,Predicates.<PsiFile>alwaysTrue(),JetControlFlowDataTraceFactory.EMPTY);
  }
 else {
    bindingContext=AnalyzingUtils.analyzeFiles(getProject(),Configuration.EMPTY,jetFiles,Predicates.<PsiFile>alwaysTrue(),JetControlFlowDataTraceFactory.EMPTY);
  }
  boolean ok=true;
  StringBuilder actualText=new StringBuilder();
  for (  TestFile testFileFile : testFileFiles) {
    ok&=testFileFile.getActualText(bindingContext,actualText);
  }
  assertEquals(expectedText,actualText.toString());
  assertTrue("something is wrong is this test",ok);
}
