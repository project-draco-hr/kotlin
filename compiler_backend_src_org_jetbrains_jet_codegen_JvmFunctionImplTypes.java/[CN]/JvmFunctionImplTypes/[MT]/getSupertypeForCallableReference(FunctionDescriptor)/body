{
  int arity=descriptor.getValueParameters().size();
  ReceiverParameterDescriptor receiverParameter=descriptor.getReceiverParameter();
  ReceiverParameterDescriptor expectedThisObject=descriptor.getExpectedThisObject();
  List<TypeProjection> typeArguments=new ArrayList<TypeProjection>(arity + 2);
  if (receiverParameter != null) {
    typeArguments.add(new TypeProjectionImpl(receiverParameter.getType()));
  }
 else   if (expectedThisObject != null) {
    typeArguments.add(new TypeProjectionImpl(expectedThisObject.getType()));
  }
  for (  ValueParameterDescriptor parameter : descriptor.getValueParameters()) {
    typeArguments.add(new TypeProjectionImpl(parameter.getType()));
  }
  typeArguments.add(new TypeProjectionImpl(descriptor.getReturnType()));
  ClassDescriptor classDescriptor;
  KFunctions kFunctions=getKFunctionsImplList().get(arity);
  if (expectedThisObject != null) {
    classDescriptor=kFunctions.kMemberFunctionImpl;
  }
 else   if (receiverParameter != null) {
    classDescriptor=kFunctions.kExtensionFunctionImpl;
  }
 else {
    classDescriptor=kFunctions.kFunctionImpl;
  }
  return new JetTypeImpl(classDescriptor.getDefaultType().getAnnotations(),classDescriptor.getTypeConstructor(),false,typeArguments,classDescriptor.getMemberScope(typeArguments));
}
