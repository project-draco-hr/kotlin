{
  GenerationState state;
  try {
    AnalyzeExhaust binding=WholeProjectAnalyzerFacade.analyzeProjectWithCacheOnAFile(file);
    if (binding.isError()) {
      return printStackTraceToString(binding.getError());
    }
    state=new GenerationState(myProject,ClassBuilderFactories.TEXT,binding,Collections.singletonList(file));
    state.compileCorrectFiles(CompilationErrorHandler.THROW_EXCEPTION);
  }
 catch (  Exception e) {
    return printStackTraceToString(e);
  }
  StringBuilder answer=new StringBuilder();
  final ClassFileFactory factory=state.getFactory();
  for (  String filename : factory.files()) {
    answer.append("// ================ ");
    answer.append(filename);
    answer.append(" =================\n");
    answer.append(factory.asText(filename)).append("\n\n");
  }
  return answer.toString();
}
