{
  JetExpression receiverExpression=expression.getReceiverExpression();
  if (receiverExpression != null) {
    final JetScope resolutionScope=context.get(BindingContext.RESOLUTION_SCOPE,receiverExpression);
    final JetType expressionType=context.get(BindingContext.EXPRESSION_TYPE,receiverExpression);
    if (expressionType != null && resolutionScope != null) {
      return includeExternalCallableExtensions(expressionType.getMemberScope().getAllDescriptors(),resolutionScope,new ExpressionReceiver(receiverExpression,expressionType));
    }
  }
 else {
    JetScope resolutionScope=context.get(BindingContext.RESOLUTION_SCOPE,expression);
    if (resolutionScope != null) {
      if (expression.getParent() instanceof JetImportDirective) {
        return excludeNonPackageDescriptors(resolutionScope.getAllDescriptors());
      }
 else {
        java.util.HashSet<DeclarationDescriptor> descriptorsSet=Sets.newHashSet();
        ArrayList<ReceiverDescriptor> result=new ArrayList<ReceiverDescriptor>();
        resolutionScope.getImplicitReceiversHierarchy(result);
        for (        ReceiverDescriptor receiverDescriptor : result) {
          JetType receiverType=receiverDescriptor.getType();
          descriptorsSet.addAll(receiverType.getMemberScope().getAllDescriptors());
        }
        descriptorsSet.addAll(resolutionScope.getAllDescriptors());
        return excludeNotCallableExtensions(descriptorsSet,resolutionScope);
      }
    }
  }
  return Collections.emptyList();
}
