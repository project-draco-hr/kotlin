{
  if (isBeginTransaction(context,node)) {
    ResolvedVariable boundVariable=getVariable(context,node);
    if (boundVariable == null && isCommittedInChainedCalls(context,node)) {
      return true;
    }
    if (boundVariable != null) {
      Node method=JavaContext.findSurroundingMethod(node);
      if (method == null) {
        return true;
      }
      FinishVisitor commitVisitor=new FinishVisitor(context,boundVariable){
        @Override protected boolean isCleanupCall(        @NonNull MethodInvocation call){
          if (isTransactionCommitMethodCall(mContext,call)) {
            Expression operand=call.astOperand();
            if (operand != null) {
              ResolvedNode resolved=mContext.resolve(operand);
              if (resolved != null && mVariables.contains(resolved)) {
                return true;
              }
 else               if (resolved instanceof ResolvedMethod && operand instanceof MethodInvocation && isCommittedInChainedCalls(mContext,(MethodInvocation)operand)) {
                while (operand instanceof MethodInvocation) {
                  operand=((MethodInvocation)operand).astOperand();
                }
                if (operand instanceof VariableReference) {
                  resolved=mContext.resolve(operand);
                  if (resolved != null && mVariables.contains(resolved)) {
                    return true;
                  }
                }
              }
            }
          }
 else           if (isShowFragmentMethodCall(mContext,call)) {
            StrictListAccessor<Expression,MethodInvocation> arguments=call.astArguments();
            if (arguments.size() == 2) {
              Expression first=arguments.first();
              ResolvedNode resolved=mContext.resolve(first);
              if (resolved != null && mVariables.contains(resolved)) {
                return true;
              }
            }
          }
          return false;
        }
      }
;
      method.accept(commitVisitor);
      if (commitVisitor.isCleanedUp() || commitVisitor.variableEscapes()) {
        return true;
      }
    }
    String message="This transaction should be completed with a `commit()` call";
    context.report(COMMIT_FRAGMENT,node,context.getLocation(node.astName()),message);
  }
  return false;
}
