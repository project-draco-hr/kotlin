{
  Set<JetType> typesToShorten=KotlinPackage.flatMapTo(types,new LinkedHashSet<JetType>(),new Function1<JetType,Iterable<JetType>>(){
    @Override public Iterable<JetType> invoke(    JetType type){
      return UtilPackage.getAllReferencedTypes(type);
    }
  }
);
  ShortenReferences.INSTANCE$.processAllReferencesInFile(KotlinPackage.map(typesToShorten,new Function1<JetType,DeclarationDescriptor>(){
    @Override public DeclarationDescriptor invoke(    JetType type){
      return DescriptorUtils.getClassDescriptorForType(type);
    }
  }
),file);
}
