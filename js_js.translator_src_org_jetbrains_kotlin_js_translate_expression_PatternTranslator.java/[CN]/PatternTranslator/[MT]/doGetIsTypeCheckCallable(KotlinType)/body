{
  if (isAnyOrNullableAny(type))   return namer().isAny();
  if (isFunctionTypeOrSubtype(type))   return namer().isTypeOf(program().getStringLiteral("function"));
  if (isArray(type))   return Namer.IS_ARRAY_FUN_REF;
  JsExpression builtinCheck=getIsTypeCheckCallableForBuiltin(type);
  if (builtinCheck != null)   return builtinCheck;
  TypeParameterDescriptor typeParameterDescriptor=getTypeParameterDescriptorOrNull(type);
  if (typeParameterDescriptor != null) {
    if (typeParameterDescriptor.isReified()) {
      return getIsTypeCheckCallableForReifiedType(typeParameterDescriptor);
    }
    return namer().isAny();
  }
  JsNameRef typeName=getClassNameReference(type);
  return namer().isInstanceOf(typeName);
}
