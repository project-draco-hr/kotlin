{
  KotlinType type=BindingUtils.getTypeByReference(bindingContext(),typeReference);
  JsExpression checkFunReference=doGetIsTypeCheckCallable(type);
  boolean isReifiedType=isReifiedTypeParameter(type);
  if (!isReifiedType && isNullableType(type) || isReifiedType && findChildByType(typeReference,KtNodeTypes.NULLABLE_TYPE) != null) {
    checkFunReference=namer().orNull(checkFunReference);
  }
  return new JsInvocation(checkFunReference,subject);
}
