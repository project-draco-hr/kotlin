{
  return new ClassBuilderFactory(){
    @Override public ClassBuilder newClassBuilder(){
      return new ClassBuilder.Concrete(new ClassWriter(ClassWriter.COMPUTE_FRAMES | ClassWriter.COMPUTE_MAXS){
        @Override protected String getCommonSuperClass(        String type1,        String type2){
          try {
            return super.getCommonSuperClass(type1,type2);
          }
 catch (          Throwable t) {
            return "java/lang/Object";
          }
        }
      }
,stubs);
    }
    @Override public String asText(    ClassBuilder builder){
      throw new UnsupportedOperationException("BINARIES generator asked for text");
    }
    @Override public byte[] asBytes(    ClassBuilder builder){
      ClassWriter visitor=(ClassWriter)builder.getVisitor();
      return visitor.toByteArray();
    }
  }
;
}
