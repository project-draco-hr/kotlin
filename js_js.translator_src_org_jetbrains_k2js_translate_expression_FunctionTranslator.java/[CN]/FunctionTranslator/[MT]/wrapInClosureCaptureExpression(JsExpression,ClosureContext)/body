{
  JsFunction dummyFunction=new JsFunction(context().scope());
  JsInvocation dummyFunctionInvocation=new JsInvocation(dummyFunction);
  for (  VariableDescriptor variableDescriptor : closureContext.getDescriptors()) {
    dummyFunction.getParameters().add(new JsParameter(context().getNameForDescriptor(variableDescriptor)));
    dummyFunctionInvocation.getArguments().add(ReferenceTranslator.translateAsLocalNameReference(variableDescriptor,context()));
    if (aliasForContainingClassThis != null) {
      dummyFunction.getParameters().add(new JsParameter(aliasForContainingClassThis.name()));
      dummyFunctionInvocation.getArguments().add(aliasForContainingClassThis.initExpression());
    }
  }
  dummyFunction.setBody(new JsBlock(new JsReturn(wrappedExpression)));
  return dummyFunctionInvocation;
}
