{
  StringBuilder out=new StringBuilder();
  Printer p=new Printer(out);
  p.print(FileUtil.loadFile(new File("injector-generator/copyright.txt")));
  p.println("package ",testClassPackage,";");
  p.println();
  p.println("import org.junit.Assert;");
  p.println("import org.junit.Test;");
  p.println();
  p.println("import java.io.File;");
  p.println("import java.io.FileFilter;");
  p.println("import java.lang.reflect.Method;");
  p.println("import java.util.HashSet;");
  p.println("import java.util.Set;");
  p.println();
  p.println("import ",baseTestClassPackage,".",baseTestClassName,";");
  p.println();
  p.println("/* This class is generated by " + generatorName + ". DO NOT MODIFY MANUALLY */");
  p.println("public class ",testClassName," extends ",baseTestClassName," {");
  p.pushIndent();
  File[] ktFiles=testDataDir.listFiles(new FileFilter(){
    @Override public boolean accept(    File pathname){
      return pathname.getName().endsWith("." + testDataFileExtension);
    }
  }
);
  for (  File file : ktFiles) {
    p.println("@Test");
    p.println("public void test",FileUtil.getNameWithoutExtension(StringUtil.capitalize(file.getName())),"() throws Exception {");
    p.pushIndent();
    p.println("doTest(\"",file.getPath(),"\");");
    p.popIndent();
    p.println("}");
    p.println();
  }
  generateAllTestsPresent(p);
  p.popIndent();
  p.println("}");
  String testSourceFilePath=baseDir + testClassPackage.replace(".","/") + "/"+ testClassName+ ".java";
  FileUtil.writeToFile(new File(testSourceFilePath),out.toString());
}
