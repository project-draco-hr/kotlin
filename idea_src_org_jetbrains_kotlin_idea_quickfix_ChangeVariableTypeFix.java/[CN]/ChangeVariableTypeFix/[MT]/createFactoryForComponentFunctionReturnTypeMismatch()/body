{
  return new KotlinSingleIntentionActionFactory(){
    @Nullable @Override public IntentionAction createAction(    @NotNull Diagnostic diagnostic){
      KtMultiDeclarationEntry entry=ChangeFunctionReturnTypeFix.getMultiDeclarationEntryThatTypeMismatchComponentFunction(diagnostic);
      BindingContext context=ResolutionUtils.analyze(entry);
      ResolvedCall<FunctionDescriptor> resolvedCall=context.get(BindingContext.COMPONENT_RESOLVED_CALL,entry);
      if (resolvedCall == null)       return null;
      KtFunction componentFunction=(KtFunction)DescriptorToSourceUtils.descriptorToDeclaration(resolvedCall.getCandidateDescriptor());
      if (componentFunction == null)       return null;
      KotlinType expectedType=resolvedCall.getCandidateDescriptor().getReturnType();
      return expectedType == null ? null : new ChangeVariableTypeFix(entry,expectedType);
    }
  }
;
}
