{
  super.visitNewExpression(expression);
  if (expression.getArrayInitializer() != null)   myResult=expressionToExpression(expression.getArrayInitializer());
 else   if (expression.getArrayDimensions().length > 0) {
    final List<Expression> callExpression=expressionsToExpressionList(expression.getArrayDimensions());
    callExpression.add(new IdentifierImpl("{null}"));
    myResult=new NewClassExpression(typeToType(expression.getType()),new ExpressionList(callExpression));
  }
 else {
    final PsiAnonymousClass anonymousClass=expression.getAnonymousClass();
    myResult=new NewClassExpression(expressionToExpression(expression.getQualifier()),elementToElement(expression.getClassOrAnonymousClassReference()),elementToElement(expression.getArgumentList()),anonymousClass != null ? anonymousClassToAnonymousClass(anonymousClass) : null);
    final PsiMethod constructor=expression.resolveMethod();
    if (constructor != null && !isConstructorPrimary(constructor)) {
      myResult=new CallChainExpression(new IdentifierImpl(constructor.getName(),false),new MethodCallExpression(new IdentifierImpl("init"),elementToElement(expression.getArgumentList()),false));
    }
  }
}
