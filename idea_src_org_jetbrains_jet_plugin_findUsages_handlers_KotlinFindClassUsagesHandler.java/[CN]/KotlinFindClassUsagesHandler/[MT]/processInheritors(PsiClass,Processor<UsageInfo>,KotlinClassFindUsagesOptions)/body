{
  ClassInheritorsSearch.SearchParameters searchParameters=new ClassInheritorsSearch.SearchParameters(klass,options.searchScope,options.isCheckDeepInheritance,true,true,Condition.TRUE,INHERITANCE_CHECKER);
  return ClassInheritorsSearch.search(searchParameters).forEach(new PsiElementProcessorAdapter<PsiClass>(new PsiElementProcessor<PsiClass>(){
    @Override public boolean execute(    @NotNull PsiClass element){
      if ((element.isInterface() && options.isDerivedInterfaces) || (!element.isInterface() && options.isDerivedClasses)) {
        return processUsage(processor,element,options);
      }
      return true;
    }
  }
));
}
