{
  final JetFinallySection finallyBlock=expression.getFinallyBlock();
  if (finallyBlock != null) {
    builder.enterTryFinally(new GenerationTrigger(){
      @Override public void generate(){
        value(finallyBlock.getFinalExpression(),true,inCondition);
      }
    }
);
  }
  Label onException=builder.createUnboundLabel();
  builder.nondeterministicJump(onException);
  value(expression.getTryBlock(),true,inCondition);
  List<JetCatchClause> catchClauses=expression.getCatchClauses();
  if (!catchClauses.isEmpty()) {
    Label afterCatches=builder.createUnboundLabel();
    builder.jump(afterCatches);
    builder.bindLabel(onException);
    for (Iterator<JetCatchClause> iterator=catchClauses.iterator(); iterator.hasNext(); ) {
      JetCatchClause catchClause=iterator.next();
      JetExpression catchBody=catchClause.getCatchBody();
      if (catchBody != null) {
        value(catchBody,true,false);
      }
      if (iterator.hasNext()) {
        builder.nondeterministicJump(afterCatches);
      }
    }
    builder.bindLabel(afterCatches);
  }
 else {
    builder.bindLabel(onException);
  }
  if (finallyBlock != null) {
    builder.exitTryFinally();
    value(finallyBlock.getFinalExpression(),true,inCondition);
  }
}
