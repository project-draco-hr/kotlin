{
  Collection<JetFile> filesForPackage=lightClassGenerationSupport.findFilesForPackage(qualifiedName,scope);
  if (PackagePartClassUtils.getPackageFilesWithCallables(filesForPackage).isEmpty())   return;
  KotlinLightClassForPackage lightClass=KotlinLightClassForPackage.create(psiManager,qualifiedName,scope,filesForPackage);
  if (lightClass == null)   return;
  answer.add(lightClass);
  if (filesForPackage.size() > 1) {
    for (    JetFile file : filesForPackage) {
      answer.add(new FakeLightClassForFileOfPackage(psiManager,lightClass,file));
    }
  }
}
