{
  this.project=project;
  psiManager=PsiManager.getInstance(project);
  this.lightClassGenerationSupport=lightClassGenerationSupport;
  VirtualFileManager.getInstance().addVirtualFileListener(new VirtualFileListener(){
    @Override public void fileCreated(    VirtualFileEvent event){
      invalidateJetFilesCache();
    }
    @Override public void fileDeleted(    VirtualFileEvent event){
      invalidateJetFilesCache();
    }
    @Override public void fileMoved(    VirtualFileMoveEvent event){
      invalidateJetFilesCache();
    }
    @Override public void fileCopied(    VirtualFileCopyEvent event){
      invalidateJetFilesCache();
    }
    @Override public void propertyChanged(    VirtualFilePropertyEvent event){
    }
    @Override public void contentsChanged(    VirtualFileEvent event){
    }
    @Override public void beforePropertyChange(    VirtualFilePropertyEvent event){
    }
    @Override public void beforeContentsChange(    VirtualFileEvent event){
    }
    @Override public void beforeFileDeletion(    VirtualFileEvent event){
    }
    @Override public void beforeFileMovement(    VirtualFileMoveEvent event){
    }
  }
);
}
