{
  final JetClassObject classObject=getClassObject();
  if (classObject != null) {
    Type type=Type.getObjectType(state.getTypeMapper().jvmName(classObject));
    v.newField(classObject,Opcodes.ACC_PUBLIC | Opcodes.ACC_STATIC,"$classobj",type.getDescriptor(),null,null);
    staticInitializerChunks.add(new CodeChunk(){
      @Override public void generate(      InstructionAdapter v){
        String name=state.getTypeMapper().jvmName(classObject);
        final Type classObjectType=Type.getObjectType(name);
        v.anew(classObjectType);
        v.dup();
        v.invokespecial(name,"<init>","()V");
        v.putstatic(state.getTypeMapper().jvmName(descriptor,OwnerKind.IMPLEMENTATION),"$classobj",classObjectType.getDescriptor());
      }
    }
);
  }
}
