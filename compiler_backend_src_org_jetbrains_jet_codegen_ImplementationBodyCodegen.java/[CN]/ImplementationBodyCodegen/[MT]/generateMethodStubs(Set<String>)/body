{
  if (signatures.isEmpty())   return;
  Set<String> existingMethodSignatures=collectSignaturesOfExistingNonAbstractMethods();
  for (  String signature : signatures) {
    if (!existingMethodSignatures.add(signature))     return;
    int access=descriptor.getKind() == ClassKind.TRAIT ? ACC_PUBLIC | ACC_ABSTRACT : ACC_PUBLIC;
    int paren=signature.indexOf('(');
    MethodVisitor mv=v.newMethod(NO_ORIGIN,access,signature.substring(0,paren),signature.substring(paren),null,null);
    if (descriptor.getKind() != ClassKind.TRAIT) {
      mv.visitCode();
      genThrow(new InstructionAdapter(mv),"java/lang/UnsupportedOperationException","Mutating immutable collection");
      FunctionCodegen.endVisit(mv,"built-in stub for " + signature,null);
    }
  }
}
