{
  if (isAnonymousObject(descriptor)) {
    writeKotlinSyntheticClassAnnotation(v,KotlinSyntheticClass.Kind.ANONYMOUS_OBJECT);
    return;
  }
  if (!isTopLevelOrInnerClass(descriptor)) {
    writeKotlinSyntheticClassAnnotation(v,KotlinSyntheticClass.Kind.LOCAL_CLASS);
    return;
  }
  if (state.getClassBuilderMode() != ClassBuilderMode.FULL)   return;
  DescriptorSerializer serializer=new DescriptorSerializer(new JavaSerializerExtension(v.getSerializationBindings()));
  ProtoBuf.Class classProto=serializer.classProto(descriptor).build();
  ClassData data=new ClassData(createNameResolver(serializer.getNameTable()),classProto);
  AnnotationVisitor av=v.getVisitor().visitAnnotation(asmDescByFqNameWithoutInnerClasses(JvmAnnotationNames.KOTLIN_CLASS),true);
  av.visit(JvmAnnotationNames.ABI_VERSION_FIELD_NAME,JvmAbi.VERSION);
  AnnotationVisitor array=av.visitArray(JvmAnnotationNames.DATA_FIELD_NAME);
  for (  String string : BitEncoding.encodeBytes(data.toBytes())) {
    array.visit(null,string);
  }
  array.visitEnd();
  av.visitEnd();
}
