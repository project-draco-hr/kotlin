{
  final FunctionCodegen functionCodegen=new FunctionCodegen(delegateContext,v,state);
  final PropertyCodegen propertyCodegen=new PropertyCodegen(delegateContext,v,functionCodegen,state);
  ClassDescriptor classDescriptor=bindingContext.get(BindingContext.CLASS,toClass);
  for (  DeclarationDescriptor declaration : descriptor.getDefaultType().getMemberScope().getAllDescriptors()) {
    if (declaration instanceof CallableMemberDescriptor) {
      CallableMemberDescriptor callableMemberDescriptor=(CallableMemberDescriptor)declaration;
      if (callableMemberDescriptor.getKind() == CallableMemberDescriptor.Kind.DELEGATION) {
        Set<? extends CallableMemberDescriptor> overriddenDescriptors=callableMemberDescriptor.getOverriddenDescriptors();
        for (        CallableMemberDescriptor overriddenDescriptor : overriddenDescriptors) {
          if (overriddenDescriptor.getContainingDeclaration() == classDescriptor) {
            if (declaration instanceof PropertyDescriptor) {
              propertyCodegen.genDelegate((PropertyDescriptor)declaration,(PropertyDescriptor)overriddenDescriptor,field);
            }
 else             if (declaration instanceof SimpleFunctionDescriptor) {
              functionCodegen.genDelegate((SimpleFunctionDescriptor)declaration,overriddenDescriptor,field);
            }
          }
        }
      }
    }
  }
}
