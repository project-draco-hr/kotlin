{
  List<TypeParameterDescriptor> typeParameters=descriptor.getTypeConstructor().getParameters();
  SignatureWriter signatureWriter=new SignatureWriter();
  SignatureVisitor signatureVisitor=JetTypeMapper.DEBUG_SIGNATURE_WRITER ? new CheckSignatureAdapter(CheckSignatureAdapter.CLASS_SIGNATURE,signatureWriter) : signatureWriter;
  for (  TypeParameterDescriptor typeParameter : typeParameters) {
    signatureVisitor.visitFormalTypeParameter(typeParameter.getName());
    SignatureVisitor classBoundVisitor=signatureVisitor.visitClassBound();
    JetTypeMapper.visitAsmType(classBoundVisitor,JetTypeMapper.TYPE_OBJECT);
  }
  SignatureVisitor superclassSignatureVisitor=signatureVisitor.visitSuperclass();
  superclassSignatureVisitor.visitClassType("java/lang/Object");
  superclassSignatureVisitor.visitEnd();
  return signatureWriter.toString();
}
