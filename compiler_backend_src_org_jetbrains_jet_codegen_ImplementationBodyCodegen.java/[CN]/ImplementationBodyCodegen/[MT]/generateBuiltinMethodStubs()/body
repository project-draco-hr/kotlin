{
  KotlinBuiltIns builtIns=KotlinBuiltIns.getInstance();
  Set<String> methodStubs=new LinkedHashSet<String>();
  if (isSubclass(descriptor,builtIns.getCollection())) {
    methodStubs.add("add(Ljava/lang/Object;)Z");
    methodStubs.add("remove(Ljava/lang/Object;)Z");
    methodStubs.add("addAll(Ljava/util/Collection;)Z");
    methodStubs.add("removeAll(Ljava/util/Collection;)Z");
    methodStubs.add("retainAll(Ljava/util/Collection;)Z");
    methodStubs.add("clear()V");
  }
  if (isSubclass(descriptor,builtIns.getList())) {
    methodStubs.add("set(ILjava/lang/Object;)Ljava/lang/Object;");
    methodStubs.add("add(ILjava/lang/Object;)V");
    methodStubs.add("remove(I)Ljava/lang/Object;");
  }
  if (isSubclass(descriptor,builtIns.getMap())) {
    methodStubs.add("put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
    methodStubs.add("remove(Ljava/lang/Object;)Ljava/lang/Object;");
    methodStubs.add("putAll(Ljava/util/Map;)V");
    methodStubs.add("clear()V");
  }
  if (isSubclass(descriptor,builtIns.getMapEntry())) {
    methodStubs.add("setValue(Ljava/lang/Object;)Ljava/lang/Object;");
  }
  if (isSubclass(descriptor,builtIns.getIterator())) {
    methodStubs.add("remove()V");
  }
  generateMethodStubs(methodStubs);
}
