{
  iv.load(0,JetTypeMapper.TYPE_OBJECT);
  iv.aconst(typeMapper.mapType(descriptor.getDefaultType(),OwnerKind.IMPLEMENTATION));
  iv.iconst(0);
  if (CodegenUtil.hasOuterTypeInfo(descriptor)) {
    iv.load(1,JetTypeMapper.TYPE_OBJECT);
    iv.invokeinterface("jet/JetObject","getTypeInfo","()Ljet/typeinfo/TypeInfo;");
  }
  if (typeParamCount != 0) {
    iv.iconst(typeParamCount);
    iv.newarray(JetTypeMapper.TYPE_TYPEINFOPROJECTION);
    for (int i=0; i < typeParamCount; i++) {
      iv.dup();
      iv.iconst(i);
      iv.load(firstTypeParameter + i,JetTypeMapper.TYPE_OBJECT);
      iv.checkcast(JetTypeMapper.TYPE_TYPEINFOPROJECTION);
      iv.astore(JetTypeMapper.TYPE_OBJECT);
    }
    if (CodegenUtil.hasOuterTypeInfo(descriptor)) {
      iv.invokestatic("jet/typeinfo/TypeInfo","getTypeInfo","(Ljava/lang/Class;ZLjet/typeinfo/TypeInfo;[Ljet/typeinfo/TypeInfoProjection;)Ljet/typeinfo/TypeInfo;");
    }
 else     iv.invokestatic("jet/typeinfo/TypeInfo","getTypeInfo","(Ljava/lang/Class;Z[Ljet/typeinfo/TypeInfoProjection;)Ljet/typeinfo/TypeInfo;");
  }
 else {
    if (CodegenUtil.hasOuterTypeInfo(descriptor)) {
      iv.invokestatic("jet/typeinfo/TypeInfo","getTypeInfo","(Ljava/lang/Class;ZLjet/typeinfo/TypeInfo;)Ljet/typeinfo/TypeInfo;");
    }
 else     iv.invokestatic("jet/typeinfo/TypeInfo","getTypeInfo","(Ljava/lang/Class;Z)Ljet/typeinfo/TypeInfo;");
  }
  iv.invokevirtual(typeMapper.mapType(descriptor.getDefaultType(),OwnerKind.IMPLEMENTATION).getInternalName(),"$setTypeInfo","(Ljet/typeinfo/TypeInfo;)V");
}
