{
  if (myEnumConstants.size() > 0) {
{
      Type type=typeMapper.mapType(JetStandardLibrary.getInstance().getArrayType(descriptor.getDefaultType()),MapTypeMode.IMPL);
      MethodVisitor mv=v.newMethod(myClass,ACC_PUBLIC | ACC_STATIC,"values","()" + type.getDescriptor(),null,null);
      mv.visitCode();
      mv.visitFieldInsn(GETSTATIC,typeMapper.mapType(descriptor.getDefaultType(),MapTypeMode.VALUE).getInternalName(),VALUES,type.getDescriptor());
      mv.visitMethodInsn(INVOKEVIRTUAL,type.getInternalName(),"clone","()Ljava/lang/Object;");
      mv.visitTypeInsn(CHECKCAST,type.getInternalName());
      mv.visitInsn(ARETURN);
      FunctionCodegen.endVisit(mv,"values()",myClass);
    }
{
      Type type=typeMapper.mapType(descriptor.getDefaultType(),MapTypeMode.IMPL);
      MethodVisitor mv=v.newMethod(myClass,ACC_PUBLIC | ACC_STATIC,"valueOf","(Ljava/lang/String;)" + type.getDescriptor(),null,null);
      mv.visitCode();
      mv.visitLdcInsn(type);
      mv.visitVarInsn(ALOAD,0);
      mv.visitMethodInsn(INVOKESTATIC,"java/lang/Enum","valueOf","(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;");
      mv.visitTypeInsn(CHECKCAST,type.getInternalName());
      mv.visitInsn(ARETURN);
      FunctionCodegen.endVisit(mv,"values()",myClass);
    }
  }
}
