{
  GenerationState.prepareAnonymousClasses((JetElement)aClass,state.getTypeMapper());
  ClassDescriptor descriptor=state.getBindingContext().get(BindingContext.CLASS,aClass);
  final CodegenContext contextForInners=context.intoClass(descriptor,OwnerKind.IMPLEMENTATION);
  for (  JetDeclaration declaration : aClass.getDeclarations()) {
    if (declaration instanceof JetClass && !(declaration instanceof JetEnumEntry)) {
      generate(contextForInners,(JetClass)declaration);
    }
  }
  generateImplementation(context,aClass,OwnerKind.IMPLEMENTATION,contextForInners.accessors);
}
