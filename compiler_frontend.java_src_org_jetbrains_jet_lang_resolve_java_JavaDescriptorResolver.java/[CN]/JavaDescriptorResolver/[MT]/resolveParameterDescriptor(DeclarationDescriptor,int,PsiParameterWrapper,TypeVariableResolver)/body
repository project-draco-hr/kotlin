{
  if (parameter.getJetTypeParameter().isDefined()) {
    return JvmMethodParameterMeaning.typeInfo(new Object());
  }
  PsiType psiType=parameter.getPsiParameter().getType();
  String name=parameter.getPsiParameter().getName() != null ? parameter.getPsiParameter().getName() : "p" + i;
  if (parameter.getJetValueParameter().name().length() > 0) {
    name=parameter.getJetValueParameter().name();
  }
  String typeFromAnnotation=parameter.getJetValueParameter().type();
  boolean receiver=parameter.getJetValueParameter().receiver();
  boolean hasDefaultValue=parameter.getJetValueParameter().hasDefaultValue();
  JetType outType;
  if (typeFromAnnotation.length() > 0) {
    outType=semanticServices.getTypeTransformer().transformToType(typeFromAnnotation,typeVariableResolver);
  }
 else {
    outType=semanticServices.getTypeTransformer().transformToType(psiType,typeVariableResolver);
  }
  JetType varargElementType;
  if (psiType instanceof PsiEllipsisType) {
    varargElementType=JetStandardLibrary.getInstance().getArrayElementType(outType);
  }
 else {
    varargElementType=null;
  }
  if (receiver) {
    return JvmMethodParameterMeaning.receiver(outType);
  }
 else {
    JetType transformedType;
    if (parameter.getJetValueParameter().nullable()) {
      transformedType=TypeUtils.makeNullableAsSpecified(outType,parameter.getJetValueParameter().nullable());
    }
 else     if (parameter.getPsiParameter().getModifierList().findAnnotation(JvmAbi.JETBRAINS_NOT_NULL_ANNOTATION.getFqName()) != null) {
      transformedType=TypeUtils.makeNullableAsSpecified(outType,false);
    }
 else {
      transformedType=outType;
    }
    return JvmMethodParameterMeaning.regular(new ValueParameterDescriptorImpl(containingDeclaration,i,Collections.<AnnotationDescriptor>emptyList(),name,false,transformedType,hasDefaultValue,varargElementType));
  }
}
