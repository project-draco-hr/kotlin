{
  FqName fqName=new FqName(psiClass.getQualifiedName());
  PsiClass containingClass=psiClass.getContainingClass();
  if (containingClass != null) {
    FqName containerFqName=new FqName(containingClass.getQualifiedName());
    ClassDescriptor clazz=resolveClass(containerFqName,DescriptorSearchRule.INCLUDE_KOTLIN);
    if (clazz == null) {
      throw new IllegalStateException("PsiClass not found by name " + containerFqName + ", required to be container declaration of "+ fqName);
    }
    if (isInnerEnum(psiClass,clazz)) {
      ClassDescriptor classObjectDescriptor=clazz.getClassObjectDescriptor();
      if (classObjectDescriptor == null) {
        throw new IllegalStateException("Class object for a class with inner enum should've been created earlier: " + clazz);
      }
      return classObjectDescriptor;
    }
    return clazz;
  }
  NamespaceDescriptor ns=resolveNamespace(fqName.parent(),DescriptorSearchRule.INCLUDE_KOTLIN);
  if (ns == null) {
    throw new IllegalStateException("cannot resolve namespace " + fqName.parent() + ", required to be container for "+ fqName);
  }
  return ns;
}
