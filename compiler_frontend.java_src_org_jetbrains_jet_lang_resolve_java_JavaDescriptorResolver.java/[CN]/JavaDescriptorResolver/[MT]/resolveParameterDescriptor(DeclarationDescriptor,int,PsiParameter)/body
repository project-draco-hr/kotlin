{
  PsiType psiType=parameter.getType();
  JetType varargElementType;
  if (psiType instanceof PsiEllipsisType) {
    PsiEllipsisType psiEllipsisType=(PsiEllipsisType)psiType;
    varargElementType=semanticServices.getTypeTransformer().transformToType(psiEllipsisType.getComponentType());
  }
 else {
    varargElementType=null;
  }
  boolean nullable=true;
  String name=parameter.getName() != null ? parameter.getName() : "p" + i;
  for (  PsiAnnotation annotation : parameter.getModifierList().getAnnotations()) {
    PsiNameValuePair[] attributes=annotation.getParameterList().getAttributes();
    attributes.toString();
    if (annotation.getQualifiedName().equals("jet.typeinfo.JetParameter")) {
      PsiLiteralExpression nameExpression=(PsiLiteralExpression)annotation.findAttributeValue("name");
      if (nameExpression != null) {
        name=(String)nameExpression.getValue();
      }
      PsiLiteralExpression nullableExpression=(PsiLiteralExpression)annotation.findAttributeValue("nullable");
      if (nullableExpression != null) {
        nullable=(Boolean)nullableExpression.getValue();
      }
 else {
        nullable=false;
      }
    }
  }
  JetType outType=semanticServices.getTypeTransformer().transformToType(psiType);
  return new ValueParameterDescriptorImpl(containingDeclaration,i,Collections.<AnnotationDescriptor>emptyList(),name,null,TypeUtils.makeNullableAsSpecified(outType,nullable),false,varargElementType);
}
