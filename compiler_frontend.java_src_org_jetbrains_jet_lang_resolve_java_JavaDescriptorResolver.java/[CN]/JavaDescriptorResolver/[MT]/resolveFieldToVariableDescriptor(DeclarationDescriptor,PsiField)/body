{
  VariableDescriptor variableDescriptor=fieldDescriptorCache.get(field);
  if (variableDescriptor != null) {
    return variableDescriptor;
  }
  JetType type=semanticServices.getTypeTransformer().transformToType(field.getType());
  boolean isFinal=field.hasModifierProperty(PsiModifier.FINAL);
  PropertyDescriptor propertyDescriptor=new PropertyDescriptor(containingDeclaration,Collections.<AnnotationDescriptor>emptyList(),Modality.FINAL,resolveVisibilityFromPsiModifiers(field),!isFinal,null,DescriptorUtils.getExpectedThisObjectIfNeeded(containingDeclaration),field.getName(),type);
  semanticServices.getTrace().record(BindingContext.VARIABLE,field,propertyDescriptor);
  fieldDescriptorCache.put(field,propertyDescriptor);
  return propertyDescriptor;
}
