{
  if (qualifiedName.endsWith(JvmAbi.TRAIT_IMPL_SUFFIX)) {
    return null;
  }
  ClassDescriptor kotlinClassDescriptor=semanticServices.getKotlinClassDescriptor(qualifiedName);
  if (kotlinClassDescriptor != null) {
    return kotlinClassDescriptor;
  }
  ResolverBinaryClassData classData=classDescriptorCache.get(qualifiedName);
  if (classData == null) {
    PsiClass psiClass=findClass(qualifiedName);
    if (psiClass == null) {
      return null;
    }
    classData=createJavaClassDescriptor(psiClass);
  }
  return classData.getClassDescriptor();
}
