{
  PsiClass classObjectPsiClass=getInnerClassClassObject(psiClass);
  if (classObjectPsiClass == null) {
    return null;
  }
  checkPsiClassIsNotJet(psiClass);
  FqName fqName=new FqName(classObjectPsiClass.getQualifiedName());
  ResolverBinaryClassData classData=new ClassDescriptorFromJvmBytecode(containing,ClassKind.OBJECT,classObjectPsiClass,fqName,this).getResolverBinaryClassData();
  classDescriptorCache.put(fqName,classData);
  classData.classDescriptor.setSupertypes(getSupertypes(new PsiClassWrapper(classObjectPsiClass),classData,new ArrayList<TypeParameterDescriptor>(0)));
  classData.classDescriptor.setName(JetPsiUtil.NO_NAME_PROVIDED);
  classData.classDescriptor.setModality(Modality.FINAL);
  classData.classDescriptor.setVisibility(containing.getVisibility());
  classData.classDescriptor.setTypeParameterDescriptors(new ArrayList<TypeParameterDescriptor>(0));
  classData.classDescriptor.createTypeConstructor();
  classData.classDescriptor.setScopeForMemberLookup(new JavaClassMembersScope(semanticServices,classData));
  return classData.classDescriptor;
}
