{
  for (  PsiClassType type : extendsListTypes) {
    PsiClass resolved=type.resolve();
    if (resolved != null && resolved.getQualifiedName().equals(JvmStdlibNames.JET_OBJECT.getFqName().getFqName())) {
      continue;
    }
    if (resolved != null && annotation && resolved.getQualifiedName().equals("java.lang.annotation.Annotation")) {
      continue;
    }
    JetType transform=semanticServices.getTypeTransformer().transformToType(type,JavaTypeTransformer.TypeUsage.SUPERTYPE,typeVariableResolver);
    result.add(TypeUtils.makeNotNullable(transform));
  }
}
