{
  PsiPackage psiPackage;
  psiPackage=semanticServices.getPsiClassFinder().findPsiPackage(fqName);
  PsiClass psiClass;
  lookingForPsi: {
    psiClass=getPsiClassForJavaPackageScope(fqName);
    if (psiClass != null || psiPackage != null) {
      break lookingForPsi;
    }
    psiClass=psiClassFinder.findPsiClass(fqName);
    if (psiClass == null) {
      return null;
    }
  }
  if (psiPackage != null) {
    trace.record(JavaBindingContext.NAMESPACE_IS_CLASS_STATICS,ns,false);
  }
  ResolverNamespaceData namespaceData=new ResolverNamespaceData(psiClass,psiPackage,fqName,ns);
  JavaPackageScope scope=new JavaPackageScope(fqName,semanticServices,namespaceData);
  namespaceData.memberScope=scope;
  ResolverNamespaceData oldValue=namespaceDescriptorCacheByFqn.put(fqName,namespaceData);
  if (oldValue != null) {
    throw new IllegalStateException("rewrite at " + fqName);
  }
  return namespaceData;
}
