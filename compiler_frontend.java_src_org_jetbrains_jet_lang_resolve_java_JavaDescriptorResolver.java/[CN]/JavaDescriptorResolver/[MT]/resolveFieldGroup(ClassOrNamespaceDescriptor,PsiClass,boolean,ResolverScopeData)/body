{
  Set<VariableDescriptor> descriptors=Sets.newHashSet();
  Map<String,NamedMembers> membersForProperties=scopeData.namedMembersMap;
  for (  Map.Entry<String,NamedMembers> entry : membersForProperties.entrySet()) {
    NamedMembers namedMembers=entry.getValue();
    if (namedMembers.propertyAccessors == null) {
      continue;
    }
    String propertyName=entry.getKey();
    resolveNamedGroupProperties(owner,scopeData,staticMembers,namedMembers,propertyName,"class or namespace " + psiClass.getQualifiedName());
    descriptors.addAll(namedMembers.propertyDescriptors);
  }
  for (  JetType supertype : getSupertypes(scopeData)) {
    for (    DeclarationDescriptor descriptor : supertype.getMemberScope().getAllDescriptors()) {
      if (descriptor instanceof VariableDescriptor) {
        descriptors.add((VariableDescriptor)descriptor);
      }
    }
  }
  return descriptors;
}
