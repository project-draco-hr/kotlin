{
  StringBuilder out=new StringBuilder();
  Printer p=new Printer(out);
  p.print(FileUtil.loadFile(new File("injector-generator/copyright.txt")));
  p.println("package ",suiteClassPackage,";");
  p.println();
  for (  String importedClassName : targetTestFramework.getImports()) {
    p.println("import ",importedClassName,";");
  }
  p.println();
  p.println("import java.io.File;");
  p.println("import java.io.FileFilter;");
  p.println("import java.lang.reflect.Method;");
  p.println("import java.util.HashSet;");
  p.println("import java.util.Set;");
  p.println("import org.jetbrains.jet.JetTestUtils;");
  p.println();
  p.println("import ",baseTestClassPackage,".",baseTestClassName,";");
  p.println();
  p.println("/* This class is generated by ",generatorName,". DO NOT MODIFY MANUALLY */");
  targetTestFramework.generateSuiteClassAnnotations(this,p);
  if (testClassModels.size() == 1) {
    TestClassModel theOnlyTestClass=testClassModels.iterator().next();
    generateTestClass(p,new DelegatingTestClassModel(theOnlyTestClass){
      @Override public String getName(){
        return suiteClassName;
      }
    }
,false);
  }
 else {
    p.println("public class ",suiteClassName," {");
    p.pushIndent();
    for (    TestClassModel testDataSource : testClassModels) {
      generateTestClass(p,testDataSource,true);
      p.println();
    }
    targetTestFramework.generateExtraSuiteClassMethods(this,p);
    p.popIndent();
    p.println("}");
  }
  String testSourceFilePath=baseDir + "/" + suiteClassPackage.replace(".","/")+ "/"+ suiteClassName+ ".java";
  File testSourceFile=new File(testSourceFilePath);
  FileUtil.writeToFile(testSourceFile,out.toString());
  System.out.println("Output written to file:\n" + testSourceFile.getAbsolutePath());
}
