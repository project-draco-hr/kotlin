{
  List<JsParameter> jsParameters=new SmartList<JsParameter>();
  Map<DeclarationDescriptor,JsExpression> aliases=new HashMap<DeclarationDescriptor,JsExpression>();
  for (  TypeParameterDescriptor type : descriptor.getTypeParameters()) {
    if (type.isReified()) {
      JsName paramNameForType=context().getNameForDescriptor(type);
      jsParameters.add(new JsParameter(paramNameForType));
      String suggestedName=Namer.isInstanceSuggestedName(type);
      JsName paramName=functionObject.getScope().declareName(suggestedName);
      jsParameters.add(new JsParameter(paramName));
      aliases.put(type,paramName.makeRef());
    }
  }
  functionBodyContext=functionBodyContext.innerContextWithDescriptorsAliased(aliases);
  if (extensionFunctionReceiverName == null && descriptor.getValueParameters().isEmpty()) {
    return jsParameters;
  }
  mayBeAddThisParameterForExtensionFunction(jsParameters);
  addParameters(jsParameters,descriptor,context());
  return jsParameters;
}
