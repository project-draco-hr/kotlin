{
  if (namedDeclaration instanceof JetObjectDeclarationName) {
    JetNamedDeclaration objectDeclaration=PsiTreeUtil.getParentOfType(namedDeclaration,JetObjectDeclaration.class);
    if (objectDeclaration == null) {
      objectDeclaration=PsiTreeUtil.getParentOfType(namedDeclaration,JetEnumEntry.class);
    }
    if (objectDeclaration == null) {
      return null;
    }
    return getFQName(objectDeclaration);
  }
  Name name=namedDeclaration.getNameAsName();
  if (name == null) {
    return null;
  }
  PsiElement parent=namedDeclaration.getParent();
  if (parent instanceof JetClassBody) {
    parent=parent.getParent();
  }
  FqName firstPart=null;
  if (parent instanceof JetFile) {
    firstPart=getFQName((JetFile)parent);
  }
 else   if (parent instanceof JetNamedFunction || parent instanceof JetClass) {
    firstPart=getFQName((JetNamedDeclaration)parent);
  }
 else   if (namedDeclaration instanceof JetParameter) {
    if (((JetParameter)namedDeclaration).getValOrVarNode() != null && parent != null && parent.getParent() instanceof JetClassOrObject) {
      firstPart=getFQName((JetClassOrObject)parent.getParent());
    }
  }
 else   if (parent instanceof JetObjectDeclaration) {
    if (parent.getParent() instanceof JetClassObject) {
      JetClassOrObject classOrObject=PsiTreeUtil.getParentOfType(parent,JetClassOrObject.class);
      if (classOrObject != null) {
        firstPart=getFQName(classOrObject);
      }
    }
 else {
      firstPart=getFQName((JetNamedDeclaration)parent);
    }
  }
  if (firstPart == null) {
    return null;
  }
  return firstPart.child(name);
}
