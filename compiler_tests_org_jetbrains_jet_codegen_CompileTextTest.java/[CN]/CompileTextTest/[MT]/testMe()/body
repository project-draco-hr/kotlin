{
  createEnvironmentWithMockJdk();
  String text="import org.jetbrains.jet.codegen.CompileTextTest; fun x() = CompileTextTest()";
  CompilerDependencies dependencies=CompileCompilerDependenciesTest.compilerDependenciesForTests(CompilerSpecialMode.REGULAR,false);
  JetCoreEnvironment environment=new JetCoreEnvironment(CompileEnvironmentUtil.createMockDisposable(),dependencies);
  CompileEnvironmentConfiguration configuration=new CompileEnvironmentConfiguration(environment,dependencies,MessageCollector.PLAIN_TEXT_TO_SYSTEM_ERR);
  configuration.getEnvironment().addToClasspathFromClassLoader(getClass().getClassLoader());
  ClassLoader classLoader=KotlinToJVMBytecodeCompiler.compileText(configuration,text);
  Class<?> namespace=classLoader.loadClass("namespace");
  Method x=namespace.getDeclaredMethod("x");
  Object invoke=x.invoke(null);
  assertTrue(invoke instanceof CompileTextTest);
}
