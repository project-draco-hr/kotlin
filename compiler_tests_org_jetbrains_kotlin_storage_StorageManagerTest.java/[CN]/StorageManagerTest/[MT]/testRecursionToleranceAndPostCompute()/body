{
  final CounterImpl counter=new CounterImpl();
class C {
    NotNullLazyValue<String> rec=m.createLazyValueWithPostCompute(new Function0<String>(){
      @Override public String invoke(){
        return rec.invoke();
      }
    }
,new Function1<Boolean,String>(){
      @Override public String invoke(      Boolean aBoolean){
        return "tolerant";
      }
    }
,new Function1<String,Unit>(){
      @Override public Unit invoke(      String s){
        counter.inc();
        assertEquals("tolerant",s);
        return Unit.INSTANCE;
      }
    }
);
  }
  C c=new C();
  assertEquals("tolerant",c.rec.invoke());
  c.rec.invoke();
  assertEquals("postCompute() called more than once",1,counter.getCount());
}
