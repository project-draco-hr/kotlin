{
  PsiField field=psiClass.findFieldByName(name,true);
  if (field == null)   return null;
  if (field.hasModifierProperty(PsiModifier.STATIC) != staticMembers) {
    return null;
  }
  JetType type=semanticServices.getTypeTransformer().transformToType(field.getType());
  boolean isFinal=field.hasModifierProperty(PsiModifier.FINAL);
  PropertyDescriptor propertyDescriptor=new PropertyDescriptor(containingDeclaration,Collections.<Annotation>emptyList(),new MemberModifiers(false,false,false),!isFinal,null,field.getName(),isFinal ? null : type,type);
  semanticServices.getTrace().recordDeclarationResolution(field,propertyDescriptor);
  return propertyDescriptor;
}
