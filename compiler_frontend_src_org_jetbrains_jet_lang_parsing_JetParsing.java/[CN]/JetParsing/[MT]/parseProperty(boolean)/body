{
  if (at(VAL_KEYWORD) || at(VAR_KEYWORD)) {
    advance();
  }
 else {
    errorAndAdvance("Expecting 'val' or 'var'");
  }
  boolean typeParametersDeclared=at(LT) ? parseTypeParameterList(TokenSet.create(IDENTIFIER,EQ,COLON,SEMICOLON)) : false;
  TokenSet propertyNameFollow=TokenSet.create(COLON,EQ,LBRACE,SEMICOLON);
  myBuilder.disableJoiningComplexTokens();
  int lastDot=matchTokenStreamPredicate(new FirstBefore(new AtSet(DOT,SAFE_ACCESS),new AbstractTokenStreamPredicate(){
    @Override public boolean matching(    boolean topLevel){
      if (topLevel && (at(EQ) || at(COLON)))       return true;
      if (topLevel && at(IDENTIFIER)) {
        IElementType lookahead=lookahead(1);
        return lookahead != LT && lookahead != DOT && lookahead != SAFE_ACCESS && lookahead != QUEST;
      }
      return false;
    }
  }
));
  parseReceiverType("property",propertyNameFollow,lastDot);
  myBuilder.restoreJoiningComplexTokensState();
  if (at(COLON)) {
    advance();
    parseTypeRef();
  }
  parseTypeConstraintsGuarded(typeParametersDeclared);
  if (local) {
    if (at(EQ)) {
      advance();
      myExpressionParsing.parseExpression();
    }
  }
 else {
    if (at(EQ)) {
      advance();
      myExpressionParsing.parseExpression();
      consumeIf(SEMICOLON);
    }
    if (parsePropertyGetterOrSetter()) {
      parsePropertyGetterOrSetter();
    }
    if (!atSet(EOL_OR_SEMICOLON,RBRACE)) {
      if (getLastToken() != SEMICOLON) {
        errorUntil("Property getter or setter expected",TokenSet.create(EOL_OR_SEMICOLON));
      }
    }
 else {
      consumeIf(SEMICOLON);
    }
  }
  return PROPERTY;
}
