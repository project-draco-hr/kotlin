{
  if (element instanceof KtConstantExpression)   return false;
  if (element instanceof KtThisExpression)   return false;
  if (element instanceof KtSimpleNameExpression)   return false;
  if (element instanceof KtBinaryExpression && OperatorConventions.ASSIGNMENT_OPERATIONS.containsKey(((KtBinaryExpression)element).getOperationToken()))   return true;
  if (element instanceof KtUnaryExpression && OperatorConventions.INCREMENT_OPERATIONS.contains(((KtUnaryExpression)element).getOperationToken()))   return true;
  if (element instanceof KtCallExpression) {
    ResolvedCall<? extends CallableDescriptor> resolvedCall=CallUtilKt.getResolvedCall((KtCallExpression)element,context);
    return resolvedCall != null && resolvedCall.getResultingDescriptor() instanceof ConstructorDescriptor;
  }
  for (  PsiElement child : element.getChildren()) {
    if (needSeparateVariable(child))     return true;
  }
  return false;
}
