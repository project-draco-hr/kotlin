{
  if (deep >= 10) {
    resultElements.set(originalElements);
    return bindingContext;
  }
  Set<JetElement> collectedElements=new HashSet<JetElement>();
  collectedElements.addAll(originalElements);
  Map<Call,ResolvedCall<?>> contents=bindingContext.getSliceContents(BindingContext.RESOLVED_CALL);
  for (  ResolvedCall call : contents.values()) {
    CallableDescriptor descriptor=call.getResultingDescriptor();
    if (!(descriptor instanceof DeserializedSimpleFunctionDescriptor) && InlineUtil.isInline(descriptor)) {
      PsiElement declaration=DescriptorToSourceUtilsIde.INSTANCE$.getAnyDeclaration(project,descriptor);
      if (declaration != null && declaration instanceof JetElement) {
        collectedElements.add((JetElement)declaration);
      }
    }
  }
  if (collectedElements.size() != originalElements.size()) {
    AnalysisResult newResult=resolutionFacade.analyzeFullyAndGetResult(collectedElements);
    if (newResult.isError()) {
      resultElements.set(collectedElements);
      return newResult.getBindingContext();
    }
    return processInlinedDeclarations(project,resolutionFacade,newResult.getBindingContext(),collectedElements,deep + 1,resultElements);
  }
  resultElements.set(collectedElements);
  return bindingContext;
}
