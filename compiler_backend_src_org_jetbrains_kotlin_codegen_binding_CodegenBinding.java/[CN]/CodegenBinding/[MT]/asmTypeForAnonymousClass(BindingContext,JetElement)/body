{
  if (expression instanceof JetObjectLiteralExpression) {
    expression=((JetObjectLiteralExpression)expression).getObjectDeclaration();
  }
  ClassDescriptor descriptor=bindingContext.get(CLASS,expression);
  if (descriptor != null) {
    return getAsmType(bindingContext,descriptor);
  }
  SimpleFunctionDescriptor functionDescriptor=bindingContext.get(FUNCTION,expression);
  if (functionDescriptor != null) {
    return asmTypeForAnonymousClass(bindingContext,functionDescriptor);
  }
  VariableDescriptor variableDescriptor=bindingContext.get(VARIABLE,expression);
  if (variableDescriptor != null) {
    return asmTypeForAnonymousClass(bindingContext,variableDescriptor);
  }
  throw new IllegalStateException("Couldn't compute ASM type for " + PsiUtilsKt.getElementTextWithContext(expression));
}
