{
  PsiElement parent=element.getParent();
  if (!(parent instanceof JetNamedDeclaration)) {
    return false;
  }
  JetNamedDeclaration declaration=(JetNamedDeclaration)parent;
  if (declaration instanceof JetProperty && !PsiTreeUtil.isAncestor(((JetProperty)declaration).getInitializer(),element,false)) {
    if (((JetProperty)declaration).getPropertyTypeRef() != null) {
      setText(JetBundle.message("specify.type.explicitly.remove.action.name"));
      return true;
    }
 else {
      setText(JetBundle.message("specify.type.explicitly.add.action.name"));
    }
  }
 else   if (declaration instanceof JetNamedFunction && ((JetNamedFunction)declaration).getReturnTypeRef() == null && !((JetNamedFunction)declaration).hasBlockBody()) {
    setText(JetBundle.message("specify.type.explicitly.add.return.type.action.name"));
  }
 else   if (declaration instanceof JetParameter && JetNodeTypes.LOOP_PARAMETER == declaration.getNode().getElementType()) {
    if (((JetParameter)declaration).getTypeReference() != null) {
      setText(JetBundle.message("specify.type.explicitly.remove.action.name"));
      return true;
    }
 else {
      setText(JetBundle.message("specify.type.explicitly.add.action.name"));
    }
  }
 else {
    return false;
  }
  if (ErrorUtils.isErrorType(getTypeForDeclaration(declaration))) {
    return false;
  }
  return !isDisabledForError() || !hasPublicMemberDiagnostic(declaration);
}
