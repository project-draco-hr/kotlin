{
  DeclarationDescriptor parentDescriptor=descriptor.getContainingDeclaration();
  boolean isAnnotation=parentDescriptor instanceof ClassDescriptor && ((ClassDescriptor)parentDescriptor).getKind() == ClassKind.ANNOTATION_CLASS;
  String name=isAnnotation ? descriptor.getName().getName() : PropertyCodegen.getterName(descriptor.getName());
  BothSignatureWriter signatureWriter=new BothSignatureWriter(BothSignatureWriter.Mode.METHOD,true);
  writeFormalTypeParameters(descriptor.getTypeParameters(),signatureWriter);
  signatureWriter.writeParametersStart();
  writeThisIfNeeded(descriptor,kind,signatureWriter);
  writeReceiverIfNeeded(descriptor.getReceiverParameter(),signatureWriter);
  signatureWriter.writeParametersEnd();
  signatureWriter.writeReturnType();
  mapType(descriptor.getType(),signatureWriter,JetTypeMapperMode.VALUE,Variance.OUT_VARIANCE);
  signatureWriter.writeReturnTypeEnd();
  JvmMethodSignature jvmMethodSignature=signatureWriter.makeJvmMethodSignature(name);
  return new JvmPropertyAccessorSignature(jvmMethodSignature,jvmMethodSignature.getKotlinReturnType());
}
