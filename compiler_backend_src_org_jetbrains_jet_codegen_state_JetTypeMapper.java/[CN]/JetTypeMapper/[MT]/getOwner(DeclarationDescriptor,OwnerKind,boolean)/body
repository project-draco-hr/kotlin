{
  JetTypeMapperMode mapTypeMode=ownerKindToMapTypeMode(kind);
  DeclarationDescriptor containingDeclaration=descriptor.getContainingDeclaration();
  if (containingDeclaration instanceof NamespaceDescriptor) {
    return asmTypeForNamespace((NamespaceDescriptor)containingDeclaration,descriptor,isInsideModule);
  }
 else   if (containingDeclaration instanceof ClassDescriptor) {
    ClassDescriptor classDescriptor=(ClassDescriptor)containingDeclaration;
    if (classDescriptor.getKind() == ClassKind.OBJECT) {
      mapTypeMode=JetTypeMapperMode.IMPL;
    }
    Type asmType=mapType(classDescriptor.getDefaultType(),mapTypeMode);
    if (asmType.getSort() != Type.OBJECT) {
      throw new IllegalStateException();
    }
    return asmType;
  }
 else   if (containingDeclaration instanceof ScriptDescriptor) {
    return asmTypeForScriptDescriptor(bindingContext,(ScriptDescriptor)containingDeclaration);
  }
 else {
    throw new UnsupportedOperationException("don't know how to generate owner for parent " + containingDeclaration);
  }
}
