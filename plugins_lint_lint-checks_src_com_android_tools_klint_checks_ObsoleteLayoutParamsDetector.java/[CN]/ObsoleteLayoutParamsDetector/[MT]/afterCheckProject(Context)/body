{
  if (mIncludes == null) {
    return;
  }
  for (  Pair<String,Location.Handle> pending : mPending) {
    Handle handle=pending.getSecond();
    Location location=handle.resolve();
    File file=location.getFile();
    String layout=file.getName();
    if (layout.endsWith(DOT_XML)) {
      layout=layout.substring(0,layout.length() - DOT_XML.length());
    }
    List<Pair<File,String>> includes=mIncludes.get(layout);
    if (includes == null) {
      continue;
    }
    String name=pending.getFirst();
    String parent=PARAM_TO_VIEW.get(name);
    if (parent == null) {
      continue;
    }
    boolean isValid=false;
    for (    Pair<File,String> include : includes) {
      String parentTag=include.getSecond();
      if (isValidParamForParent(context,name,parent,parentTag)) {
        isValid=true;
        break;
      }
 else       if (!isValid && name.equals(ATTR_LAYOUT_COLUMN) && isValidParamForParent(context,name,TABLE_ROW,parentTag)) {
        isValid=true;
        break;
      }
    }
    if (!isValid) {
      Object clientData=handle.getClientData();
      if (clientData instanceof Node) {
        if (context.getDriver().isSuppressed(null,ISSUE,(Node)clientData)) {
          return;
        }
      }
      StringBuilder sb=new StringBuilder(40);
      for (      Pair<File,String> include : includes) {
        if (sb.length() > 0) {
          sb.append(", ");
        }
        File from=include.getFirst();
        String parentTag=include.getSecond();
        sb.append(String.format("included from within a `%1$s` in `%2$s`",parentTag,from.getParentFile().getName() + File.separator + from.getName()));
      }
      String message=String.format("Invalid layout param '`%1$s`' (%2$s)",name,sb.toString());
      context.report(ISSUE,location,message);
    }
  }
}
