{
  boolean isNegated=getOperationToken(expression).equals(JetTokens.EXCLEQ);
  if (right == JsLiteral.NULL || left == JsLiteral.NULL) {
    return TranslationUtils.nullCheck(right == JsLiteral.NULL ? left : right,isNegated);
  }
 else   if (canUseSimpleEquals(expression,context)) {
    return new JsBinaryOperation(isNegated ? JsBinaryOperator.REF_NEQ : JsBinaryOperator.REF_EQ,left,right);
  }
  JsExpression result=TopLevelFIF.KOTLIN_EQUALS.apply(left,Arrays.asList(right),context);
  return isNegated ? JsAstUtils.negated(result) : result;
}
