{
  this.project=project;
  this.bindingTrace=bindingTrace;
  this.globalContext=org.jetbrains.jet.context.ContextPackage.GlobalContext();
  this.module=org.jetbrains.jet.lang.resolve.java.AnalyzerFacadeForJVM.createJavaModule("<fake-jdr-module>");
  this.storageManager=globalContext.getStorageManager();
  this.javaClassFinder=new JavaClassFinderImpl();
  this.virtualFileFinder=org.jetbrains.jet.lang.resolve.kotlin.VirtualFileFinder.SERVICE.getInstance(project);
  this.deserializedDescriptorResolver=new DeserializedDescriptorResolver();
  this.psiBasedExternalAnnotationResolver=new PsiBasedExternalAnnotationResolver();
  this.traceBasedExternalSignatureResolver=new TraceBasedExternalSignatureResolver();
  this.traceBasedErrorReporter=new TraceBasedErrorReporter();
  this.psiBasedMethodSignatureChecker=new PsiBasedMethodSignatureChecker();
  this.traceBasedJavaResolverCache=new TraceBasedJavaResolverCache();
  this.globalJavaResolverContext=new GlobalJavaResolverContext(storageManager,getJavaClassFinder(),virtualFileFinder,deserializedDescriptorResolver,psiBasedExternalAnnotationResolver,traceBasedExternalSignatureResolver,traceBasedErrorReporter,psiBasedMethodSignatureChecker,traceBasedJavaResolverCache);
  this.lazyJavaPackageFragmentProvider=new LazyJavaPackageFragmentProvider(globalJavaResolverContext,getModule());
  this.javaDescriptorResolver=new JavaDescriptorResolver(lazyJavaPackageFragmentProvider,getModule());
  this.annotationDescriptorDeserializer=new AnnotationDescriptorDeserializer(storageManager);
  this.javaClassFinder.setProject(project);
  traceBasedExternalSignatureResolver.setExternalAnnotationResolver(psiBasedExternalAnnotationResolver);
  traceBasedExternalSignatureResolver.setTrace(bindingTrace);
  traceBasedJavaResolverCache.setTrace(bindingTrace);
  traceBasedErrorReporter.setTrace(bindingTrace);
  psiBasedMethodSignatureChecker.setExternalAnnotationResolver(psiBasedExternalAnnotationResolver);
  psiBasedMethodSignatureChecker.setExternalSignatureResolver(traceBasedExternalSignatureResolver);
  deserializedDescriptorResolver.setAnnotationDeserializer(annotationDescriptorDeserializer);
  deserializedDescriptorResolver.setErrorReporter(traceBasedErrorReporter);
  deserializedDescriptorResolver.setJavaDescriptorResolver(javaDescriptorResolver);
  deserializedDescriptorResolver.setJavaPackageFragmentProvider(lazyJavaPackageFragmentProvider);
  deserializedDescriptorResolver.setStorageManager(storageManager);
  annotationDescriptorDeserializer.setErrorReporter(traceBasedErrorReporter);
  annotationDescriptorDeserializer.setJavaDescriptorResolver(javaDescriptorResolver);
  annotationDescriptorDeserializer.setKotlinClassFinder(virtualFileFinder);
  javaClassFinder.initialize();
}
