{
  for (  JetFile file : files) {
    if (file.isScript())     continue;
    FqName packageFqName=file.getPackageFqName();
    PackageViewDescriptor packageDescriptor=session.getModuleDescriptor().getPackage(packageFqName);
    if (packageDescriptor.isEmpty()) {
      LOG.warn("No descriptor found for package " + packageFqName + " in file "+ file.getName()+ "\n"+ file.getText());
      session.forceResolveAll();
      continue;
    }
    for (    JetDeclaration declaration : file.getDeclarations()) {
      if (declaration instanceof JetFunction) {
        JetFunction jetFunction=(JetFunction)declaration;
        Name name=jetFunction.getNameAsSafeName();
        Collection<FunctionDescriptor> functions=packageDescriptor.getMemberScope().getFunctions(name,LookupLocation.NO_LOCATION_FROM_IDE);
        for (        FunctionDescriptor descriptor : functions) {
          ForceResolveUtil.forceResolveAllContents(descriptor);
        }
      }
 else       if (declaration instanceof JetProperty) {
        JetProperty jetProperty=(JetProperty)declaration;
        Name name=jetProperty.getNameAsSafeName();
        Collection<VariableDescriptor> properties=packageDescriptor.getMemberScope().getProperties(name,LookupLocation.NO_LOCATION_FROM_IDE);
        for (        VariableDescriptor descriptor : properties) {
          ForceResolveUtil.forceResolveAllContents(descriptor);
        }
      }
 else       if (declaration instanceof JetClassOrObject) {
      }
 else {
        LOG.error("Unsupported declaration kind: " + declaration + " in file "+ file.getName()+ "\n"+ file.getText());
      }
    }
  }
}
