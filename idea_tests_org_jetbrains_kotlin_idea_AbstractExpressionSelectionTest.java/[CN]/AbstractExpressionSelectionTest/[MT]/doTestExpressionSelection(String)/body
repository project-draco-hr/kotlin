{
  configureByFile(path);
  final String expectedExpression=KotlinTestUtils.getLastCommentInFile((KtFile)getFile());
  try {
    KotlinRefactoringUtil2.INSTANCE.selectElement(getEditor(),(KtFile)getFile(),Collections.singletonList(CodeInsightUtils.ElementKind.EXPRESSION),new Function1<PsiElement,Unit>(){
      @Override public Unit invoke(      PsiElement element){
        assertNotNull("Selected expression mustn't be null",element);
        assertEquals(expectedExpression,element.getText());
        return Unit.INSTANCE;
      }
    }
);
  }
 catch (  KotlinRefactoringUtil2.IntroduceRefactoringException e) {
    assertEquals(expectedExpression,"");
  }
}
