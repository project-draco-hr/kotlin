{
  if (KotlinBuiltIns.getInstance().isDeprecated(target)) {
    reportAnnotation(expression,target);
  }
 else   if (PsiTreeUtil.getParentOfType(expression,JetUserType.class) == null && PsiTreeUtil.getParentOfType(expression,JetModifierList.class) == null) {
    ClassDescriptor classObjectDescriptor=target.getClassObjectDescriptor();
    if (classObjectDescriptor != null && KotlinBuiltIns.getInstance().isDeprecated(classObjectDescriptor)) {
      reportAnnotation(expression,classObjectDescriptor);
    }
  }
}
