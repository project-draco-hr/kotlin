{
  ExpressionTypingContext context=contextWithExpectedType.replaceExpectedType(TypeUtils.NO_EXPECTED_TYPE);
  JetExpression leftHandSide=expression.getLeftHandSide();
  JetType knownType=facade.safeGetTypeInfo(leftHandSide,context.replaceScope(context.scope)).getType();
  DataFlowInfo newDataFlowInfo=context.dataFlowInfo;
  if (expression.getTypeRef() != null) {
    DataFlowValue dataFlowValue=DataFlowValueFactory.INSTANCE.createDataFlowValue(leftHandSide,knownType,context.trace.getBindingContext());
    newDataFlowInfo=checkTypeForIs(context,knownType,expression.getTypeRef(),dataFlowValue).thenInfo;
    context.trace.record(BindingContext.DATAFLOW_INFO_AFTER_CONDITION,expression,newDataFlowInfo);
  }
  return DataFlowUtils.checkType(JetStandardLibrary.getInstance().getBooleanType(),expression,contextWithExpectedType,newDataFlowInfo);
}
