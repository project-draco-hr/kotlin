{
  FunctionDescriptor functionDescriptor=bindingContext.get(FUNCTION,expression);
  if (functionDescriptor == null)   return;
  ResolvedCall<?> referencedFunction=bindingContext.get(RESOLVED_CALL,expression.getCallableReference());
  if (referencedFunction == null)   return;
  JetType superType=functionTypesUtil.getSuperTypeForClosure((FunctionDescriptor)referencedFunction.getResultingDescriptor(),true);
  String name=inventAnonymousClassName(expression);
  ClassDescriptor classDescriptor=recordClassForFunction(functionDescriptor,superType);
  recordClosure(expression,classDescriptor,name);
  pushClassDescriptor(classDescriptor);
  nameStack.push(name);
  super.visitCallableReferenceExpression(expression);
  nameStack.pop();
  popClassDescriptor();
}
