{
  FunctionDescriptor functionDescriptor=bindingContext.get(CALLABLE_REFERENCE,expression);
  if (functionDescriptor == null)   return;
  ResolvedCall<? extends CallableDescriptor> referencedFunction=bindingContext.get(RESOLVED_CALL,expression.getCallableReference());
  if (referencedFunction == null)   return;
  JetType superType=getSuperTypeForClosure((FunctionDescriptor)referencedFunction.getResultingDescriptor(),true);
  String name=inventAnonymousClassName(expression);
  ClassDescriptor classDescriptor=recordClassForFunction(functionDescriptor,superType);
  recordClosure(expression,classDescriptor,name,true);
  classStack.push(classDescriptor);
  nameStack.push(name);
  super.visitCallableReferenceExpression(expression);
  nameStack.pop();
  classStack.pop();
}
