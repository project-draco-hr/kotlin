{
  this.variance=variance;
  this.containingDeclaration=containingDeclaration;
  this.index=index;
  this.name=name;
  this.reified=isReified;
  this.typeConstructor=storageManager.createLazyValue(new Function0<TypeConstructor>(){
    @Override public TypeConstructor invoke(){
      return createTypeConstructor();
    }
  }
);
  this.defaultType=storageManager.createLazyValue(new Function0<JetType>(){
    @Override public JetType invoke(){
      return createDefaultType(storageManager);
    }
  }
);
  this.upperBounds=storageManager.createLazyValue(new Function0<Set<JetType>>(){
    @Override public Set<JetType> invoke(){
      return resolveUpperBounds();
    }
  }
);
  this.upperBoundsAsType=storageManager.createLazyValue(new Function0<JetType>(){
    @Override public JetType invoke(){
      return computeUpperBoundsAsType();
    }
  }
);
}
