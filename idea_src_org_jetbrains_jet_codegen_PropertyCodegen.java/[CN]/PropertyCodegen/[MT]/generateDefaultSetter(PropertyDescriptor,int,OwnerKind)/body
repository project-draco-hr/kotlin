{
  if (kind == OwnerKind.NAMESPACE) {
    flags|=Opcodes.ACC_STATIC;
  }
 else   if (kind == OwnerKind.INTERFACE) {
    flags|=Opcodes.ACC_ABSTRACT;
  }
  final String signature=mapper.mapSetterSignature(propertyDescriptor).getDescriptor();
  MethodVisitor mv=v.visitMethod(flags,setterName(propertyDescriptor.getName()),signature,null,null);
  if (kind != OwnerKind.INTERFACE) {
    mv.visitCode();
    InstructionAdapter iv=new InstructionAdapter(mv);
    final Type type=mapper.mapType(propertyDescriptor.getOutType());
    int paramCode=0;
    if (kind != OwnerKind.NAMESPACE) {
      iv.load(0,JetTypeMapper.TYPE_OBJECT);
      paramCode=1;
    }
    if (kind instanceof OwnerKind.DelegateKind) {
      OwnerKind.DelegateKind dk=(OwnerKind.DelegateKind)kind;
      iv.load(0,JetTypeMapper.TYPE_OBJECT);
      dk.getDelegate().put(JetTypeMapper.TYPE_OBJECT,iv);
      iv.load(paramCode,type);
      iv.invokeinterface(dk.getOwnerClass(),setterName(propertyDescriptor.getName()),signature);
    }
 else {
      iv.load(paramCode,type);
      iv.visitFieldInsn(kind == OwnerKind.NAMESPACE ? Opcodes.PUTSTATIC : Opcodes.PUTFIELD,mapper.getOwner(propertyDescriptor,kind),propertyDescriptor.getName(),type.getDescriptor());
    }
    iv.visitInsn(Opcodes.RETURN);
    mv.visitMaxs(0,0);
    mv.visitEnd();
  }
}
