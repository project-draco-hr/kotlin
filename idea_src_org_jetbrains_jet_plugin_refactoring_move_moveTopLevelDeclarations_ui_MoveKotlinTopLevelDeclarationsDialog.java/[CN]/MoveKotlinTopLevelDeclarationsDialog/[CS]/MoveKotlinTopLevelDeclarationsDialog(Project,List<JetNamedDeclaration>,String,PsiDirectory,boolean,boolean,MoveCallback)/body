{
  super(project,true);
  this.elementsToMove=elementsToMove;
  this.moveCallback=moveCallback;
  init();
  setTitle(MoveHandler.REFACTORING_NAME);
  if (elementsToMove.size() == 1) {
    PsiElement element=elementsToMove.get(0);
    elementDescription.setText(JetRefactoringBundle.message("refactoring.move.specifc.element",UsageViewUtil.getType(element),UsageViewUtil.getLongName(element)));
  }
 else   if (elementsToMove.size() > 1) {
    elementDescription.setText(JetRefactoringBundle.message("refactoring.move.selected.elements"));
  }
  if (targetPackageName != null && targetPackageName.length() != 0) {
    classPackageChooser.prependItem(targetPackageName);
  }
  cbSearchInComments.setSelected(searchInComments);
  cbSearchTextOccurences.setSelected(searchForTextOccurences);
  ((DestinationFolderComboBox)destinationFolderCB).setData(myProject,targetDirectory,new Pass<String>(){
    @Override public void pass(    String s){
      setErrorText(s);
    }
  }
,classPackageChooser.getChildComponent());
  UIUtil.setEnabled(targetPanel,hasAnySourceRoots(),true);
  validateButtons();
}
