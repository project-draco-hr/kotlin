{
  PsiElement method=changeInfo.getMethod();
  if (!(JetRefactoringUtilKt.isTrueJavaMethod(method)))   return;
  PsiMethod psiMethod=(PsiMethod)method;
  if (!psiMethod.isConstructor())   return;
  UtilsKt.processDelegationCallConstructorUsages(psiMethod,psiMethod.getUseScope(),new Function1<JetCallElement,Boolean>(){
    @Override public Boolean invoke(    JetCallElement element){
      if (element instanceof JetConstructorDelegationCall) {
        result.add(new JavaConstructorDeferredUsageInDelegationCall((JetConstructorDelegationCall)element));
      }
      return true;
    }
  }
);
}
