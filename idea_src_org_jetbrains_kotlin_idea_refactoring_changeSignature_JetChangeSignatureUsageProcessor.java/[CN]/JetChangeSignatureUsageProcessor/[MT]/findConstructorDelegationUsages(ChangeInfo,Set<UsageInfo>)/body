{
  PsiElement method=changeInfo.getMethod();
  if (!(RefactoringPackage.isTrueJavaMethod(method)))   return;
  PsiMethod psiMethod=(PsiMethod)method;
  if (!psiMethod.isConstructor())   return;
  UsagesSearchPackage.processDelegationCallConstructorUsages(psiMethod,psiMethod.getUseScope(),new Function1<JetConstructorDelegationCall,Unit>(){
    @Override public Unit invoke(    JetConstructorDelegationCall element){
      result.add(new JavaConstructorDeferredUsageInDelegationCall(element));
      return null;
    }
  }
);
}
