{
  JetPsiFactory psiFactory=new JetPsiFactory(function.getProject());
  for (  UsageInfo usageInfo : refUsages.get()) {
    if (!(usageInfo instanceof JetParameterUsage))     continue;
    String newExprText=((JetParameterUsage)usageInfo).getReplacementText(changeInfo);
    if (!newExprText.startsWith("this@"))     continue;
    if (usageInfo.getElement() instanceof KDocName)     continue;
    JetExpression originalExpr=(JetExpression)usageInfo.getElement();
    JetScope scope=ResolvePackage.analyze(originalExpr,BodyResolveMode.FULL).get(BindingContext.RESOLUTION_SCOPE,originalExpr);
    if (scope == null)     continue;
    JetThisExpression newExpr=(JetThisExpression)psiFactory.createExpression(newExprText);
    JetSimpleNameExpression labelExpr=newExpr.getTargetLabel();
    if (labelExpr == null)     continue;
    BindingContext newContext=AnalyzerPackage.analyzeInContext(newExpr,scope,new BindingTraceContext(),DataFlowInfo.EMPTY,TypeUtils.NO_EXPECTED_TYPE,DescriptorUtils.getContainingModule(scope.getContainingDeclaration()));
    if (newContext.get(BindingContext.AMBIGUOUS_LABEL_TARGET,labelExpr) != null) {
      result.putValue(originalExpr,"Parameter reference can't be safely replaced with " + newExprText + " since "+ labelExpr.getText()+ " is ambiguous in this context");
    }
  }
}
