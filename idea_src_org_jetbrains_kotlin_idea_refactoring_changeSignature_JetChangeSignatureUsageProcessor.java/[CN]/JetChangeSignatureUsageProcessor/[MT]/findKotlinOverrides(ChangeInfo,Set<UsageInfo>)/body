{
  PsiElement method=changeInfo.getMethod();
  if (!JetRefactoringUtilKt.isTrueJavaMethod(method))   return;
  for (  PsiMethod overridingMethod : OverridingMethodsSearch.search((PsiMethod)method)) {
    PsiElement unwrappedElement=LightClassUtilsKt.getNamedUnwrappedElement(overridingMethod);
    if (!(unwrappedElement instanceof KtNamedFunction))     continue;
    KtNamedFunction function=(KtNamedFunction)unwrappedElement;
    FunctionDescriptor functionDescriptor=(FunctionDescriptor)ResolutionUtils.resolveToDescriptor(function);
    result.add(new DeferredJavaMethodOverrideOrSAMUsage(function,functionDescriptor,null));
    findDeferredUsagesOfParameters(changeInfo,result,function,functionDescriptor);
  }
}
