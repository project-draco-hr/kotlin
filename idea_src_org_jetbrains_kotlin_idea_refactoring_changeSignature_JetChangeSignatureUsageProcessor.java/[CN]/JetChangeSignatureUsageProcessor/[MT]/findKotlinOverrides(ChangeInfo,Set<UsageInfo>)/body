{
  PsiElement method=changeInfo.getMethod();
  if (!RefactoringPackage.isTrueJavaMethod(method))   return;
  for (  PsiMethod overridingMethod : OverridingMethodsSearch.search((PsiMethod)method)) {
    PsiElement unwrappedElement=AsJavaPackage.getNamedUnwrappedElement(overridingMethod);
    if (!(unwrappedElement instanceof JetNamedFunction))     continue;
    JetNamedFunction function=(JetNamedFunction)unwrappedElement;
    FunctionDescriptor functionDescriptor=(FunctionDescriptor)ResolvePackage.resolveToDescriptor(function);
    result.add(new DeferredJavaMethodOverrideOrSAMUsage(function,functionDescriptor,null));
    findDeferredUsagesOfParameters(changeInfo,result,function,functionDescriptor);
  }
}
