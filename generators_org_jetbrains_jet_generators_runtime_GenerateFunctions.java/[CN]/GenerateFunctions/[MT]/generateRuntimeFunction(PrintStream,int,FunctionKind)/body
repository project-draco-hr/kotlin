{
  generateRuntimeClassHeader(out);
  out.println("import org.jetbrains.jet.rt.annotation.AssertInvisibleInResolver;");
  out.println();
  out.println("@AssertInvisibleInResolver");
  out.print("public interface " + kind.getClassName(i));
  generateTypeParameters(out,i,kind);
  out.println(" {");
  out.print("    R invoke(");
  if (kind.hasReceiverParameter) {
    out.print("T receiver");
    if (i > 0) {
      out.print(", ");
    }
  }
  for (int j=1; j <= i; j++) {
    out.print("P" + j + " p"+ j);
    if (j < i) {
      out.print(", ");
    }
  }
  out.println(");");
  out.println("}");
}
