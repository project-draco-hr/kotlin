{
  generateRuntimeClassHeader(out);
  out.print("public abstract class " + kind.classNamePrefix + i);
  out.print("<");
  if (kind.hasReceiverParameter) {
    out.print("T, ");
  }
  for (int j=1; j <= i; j++) {
    out.print("P" + j + ", ");
  }
  out.print("R> extends DefaultJetObject {");
  out.println();
  out.print("    public abstract R invoke(");
  if (kind.hasReceiverParameter) {
    out.print("T receiver");
    if (i > 0) {
      out.print(", ");
    }
  }
  for (int j=1; j <= i; j++) {
    out.print("P" + j + " p"+ j);
    if (j < i) {
      out.print(", ");
    }
  }
  out.print(");");
  out.println();
  out.println("}");
}
