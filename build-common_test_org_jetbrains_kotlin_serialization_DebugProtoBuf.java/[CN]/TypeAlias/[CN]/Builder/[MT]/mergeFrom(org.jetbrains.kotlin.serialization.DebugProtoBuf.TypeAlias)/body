{
  if (other == org.jetbrains.kotlin.serialization.DebugProtoBuf.TypeAlias.getDefaultInstance())   return this;
  if (other.hasFlags()) {
    setFlags(other.getFlags());
  }
  if (other.hasName()) {
    setName(other.getName());
  }
  if (typeParameterBuilder_ == null) {
    if (!other.typeParameter_.isEmpty()) {
      if (typeParameter_.isEmpty()) {
        typeParameter_=other.typeParameter_;
        bitField0_=(bitField0_ & ~0x00000004);
      }
 else {
        ensureTypeParameterIsMutable();
        typeParameter_.addAll(other.typeParameter_);
      }
      onChanged();
    }
  }
 else {
    if (!other.typeParameter_.isEmpty()) {
      if (typeParameterBuilder_.isEmpty()) {
        typeParameterBuilder_.dispose();
        typeParameterBuilder_=null;
        typeParameter_=other.typeParameter_;
        bitField0_=(bitField0_ & ~0x00000004);
        typeParameterBuilder_=org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getTypeParameterFieldBuilder() : null;
      }
 else {
        typeParameterBuilder_.addAllMessages(other.typeParameter_);
      }
    }
  }
  if (other.hasUnderlyingType()) {
    mergeUnderlyingType(other.getUnderlyingType());
  }
  if (other.hasUnderlyingTypeId()) {
    setUnderlyingTypeId(other.getUnderlyingTypeId());
  }
  if (other.hasExpandedType()) {
    mergeExpandedType(other.getExpandedType());
  }
  if (other.hasExpandedTypeId()) {
    setExpandedTypeId(other.getExpandedTypeId());
  }
  if (annotationBuilder_ == null) {
    if (!other.annotation_.isEmpty()) {
      if (annotation_.isEmpty()) {
        annotation_=other.annotation_;
        bitField0_=(bitField0_ & ~0x00000080);
      }
 else {
        ensureAnnotationIsMutable();
        annotation_.addAll(other.annotation_);
      }
      onChanged();
    }
  }
 else {
    if (!other.annotation_.isEmpty()) {
      if (annotationBuilder_.isEmpty()) {
        annotationBuilder_.dispose();
        annotationBuilder_=null;
        annotation_=other.annotation_;
        bitField0_=(bitField0_ & ~0x00000080);
        annotationBuilder_=org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getAnnotationFieldBuilder() : null;
      }
 else {
        annotationBuilder_.addAllMessages(other.annotation_);
      }
    }
  }
  this.mergeExtensionFields(other);
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
