{
  if (other == org.jetbrains.kotlin.serialization.DebugProtoBuf.Constructor.getDefaultInstance())   return this;
  if (other.hasFlags()) {
    setFlags(other.getFlags());
  }
  if (valueParameterBuilder_ == null) {
    if (!other.valueParameter_.isEmpty()) {
      if (valueParameter_.isEmpty()) {
        valueParameter_=other.valueParameter_;
        bitField0_=(bitField0_ & ~0x00000002);
      }
 else {
        ensureValueParameterIsMutable();
        valueParameter_.addAll(other.valueParameter_);
      }
      onChanged();
    }
  }
 else {
    if (!other.valueParameter_.isEmpty()) {
      if (valueParameterBuilder_.isEmpty()) {
        valueParameterBuilder_.dispose();
        valueParameterBuilder_=null;
        valueParameter_=other.valueParameter_;
        bitField0_=(bitField0_ & ~0x00000002);
        valueParameterBuilder_=org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getValueParameterFieldBuilder() : null;
      }
 else {
        valueParameterBuilder_.addAllMessages(other.valueParameter_);
      }
    }
  }
  this.mergeExtensionFields(other);
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
