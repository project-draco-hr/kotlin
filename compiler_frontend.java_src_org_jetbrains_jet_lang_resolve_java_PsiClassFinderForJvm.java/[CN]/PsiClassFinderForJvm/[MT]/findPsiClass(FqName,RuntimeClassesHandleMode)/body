{
  PsiClass original=javaFacade.findClass(qualifiedName.getFqName(),javaSearchScope);
  if (original != null) {
    FqName actualQualifiedName=new FqName(original.getQualifiedName());
    if (!actualQualifiedName.equals(qualifiedName)) {
      throw new IllegalStateException("requested " + qualifiedName + ", got "+ actualQualifiedName);
    }
  }
  if (original instanceof JetJavaMirrorMarker) {
    throw new IllegalStateException("JetJavaMirrorMaker is not possible in resolve.java, resolving: " + qualifiedName);
  }
  if (original == null) {
    return null;
  }
  PsiAnnotation assertInvisibleAnnotation=JavaDescriptorResolver.findAnnotation(original,JvmStdlibNames.ASSERT_INVISIBLE_IN_RESOLVER.getFqName().getFqName());
  if (assertInvisibleAnnotation != null) {
    if (runtimeClassesHandleMode == RuntimeClassesHandleMode.IGNORE) {
      return null;
    }
 else     if (runtimeClassesHandleMode == RuntimeClassesHandleMode.THROW) {
      throw new IllegalStateException("classpath is configured incorrectly:" + " class " + qualifiedName + " from runtime must not be loaded by compiler");
    }
 else {
      throw new IllegalStateException("unknown parameter value: " + runtimeClassesHandleMode);
    }
  }
  return original;
}
