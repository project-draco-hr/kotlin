{
  ClassifierDescriptor descriptor=type.getConstructor().getDeclarationDescriptor();
  if (!(descriptor instanceof ClassDescriptor))   return Collections.singletonList(type);
  ClassDescriptor originalClass=(ClassDescriptor)descriptor;
  Collection<ClassDescriptor> kotlinClasses=platformToKotlinClassMap.mapPlatformClass(originalClass);
  if (kotlinClasses.isEmpty())   return Collections.singletonList(type);
  List<KotlinType> result=Lists.newArrayListWithCapacity(2);
  result.add(type);
  for (  ClassDescriptor classDescriptor : kotlinClasses) {
    KotlinType kotlinType=TypeUtils.substituteProjectionsForParameters(classDescriptor,type.getArguments());
    result.add(kotlinType);
  }
  return result;
}
