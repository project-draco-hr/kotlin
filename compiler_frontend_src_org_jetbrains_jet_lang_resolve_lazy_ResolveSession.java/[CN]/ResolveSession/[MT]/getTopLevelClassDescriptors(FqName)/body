{
  if (fqName.isRoot())   return Collections.emptyList();
  PackageMemberDeclarationProvider provider=declarationProviderFactory.getPackageMemberDeclarationProvider(fqName.parent());
  if (provider == null)   return Collections.emptyList();
  return KotlinPackage.map(provider.getClassOrObjectDeclarations(fqName.shortName()),new Function1<JetClassOrObject,ClassDescriptor>(){
    @Override public ClassDescriptor invoke(    JetClassOrObject classOrObject){
      return getClassDescriptor(classOrObject);
    }
  }
);
}
