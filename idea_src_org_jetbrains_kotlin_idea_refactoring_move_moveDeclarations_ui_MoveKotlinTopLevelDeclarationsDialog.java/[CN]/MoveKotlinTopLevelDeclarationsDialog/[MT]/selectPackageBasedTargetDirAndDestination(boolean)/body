{
  String packageName=getTargetPackage();
  RecentsManager.getInstance(myProject).registerRecentEntry(RECENTS_KEY,packageName);
  PackageWrapper targetPackage=new PackageWrapper(PsiManager.getInstance(myProject),packageName);
  if (!targetPackage.exists() && askIfDoesNotExist) {
    int ret=Messages.showYesNoDialog(myProject,RefactoringBundle.message("package.does.not.exist",packageName),RefactoringBundle.message("move.title"),Messages.getQuestionIcon());
    if (ret != Messages.YES)     return null;
  }
  PsiDirectory selectedPsiDirectory;
  if (initialTargetDirectory == null) {
    DirectoryChooser.ItemWrapper selectedItem=(DirectoryChooser.ItemWrapper)destinationFolderCB.getComboBox().getSelectedItem();
    selectedPsiDirectory=selectedItem != null ? selectedItem.getDirectory() : null;
    if (selectedPsiDirectory == null)     return Pair.create(null,new MultipleRootsMoveDestination(targetPackage));
  }
 else {
    selectedPsiDirectory=initialTargetDirectory;
  }
  VirtualFile targetDirectory=selectedPsiDirectory.getVirtualFile();
  return Pair.create(targetDirectory,new AutocreatingSingleSourceRootMoveDestination(targetPackage,targetDirectory));
}
