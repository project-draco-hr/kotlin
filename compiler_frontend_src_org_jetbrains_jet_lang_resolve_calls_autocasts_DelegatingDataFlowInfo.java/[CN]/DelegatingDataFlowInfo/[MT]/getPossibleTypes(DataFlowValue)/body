{
  Set<JetType> types=typeInfo.get(key);
  if (getNullability(key).canBeNull()) {
    return parent == null ? types : Sets.union(types,parent.getPossibleTypes(key));
  }
  Set<JetType> enrichedTypes=Sets.newHashSetWithExpectedSize(types.size() + 1);
  JetType originalType=key.getType();
  if (originalType.isNullable()) {
    enrichedTypes.add(TypeUtils.makeNotNullable(originalType));
  }
  for (  JetType type : types) {
    enrichedTypes.add(TypeUtils.makeNotNullable(type));
  }
  return parent == null ? enrichedTypes : Sets.union(enrichedTypes,parent.getPossibleTypes(key));
}
