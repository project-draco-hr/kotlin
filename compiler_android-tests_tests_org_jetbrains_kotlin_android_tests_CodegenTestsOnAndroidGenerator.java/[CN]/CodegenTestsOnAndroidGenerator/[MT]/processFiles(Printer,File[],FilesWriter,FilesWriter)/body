{
  holderFull.writeFilesOnDiskIfNeeded();
  holderMock.writeFilesOnDiskIfNeeded();
  for (  File file : files) {
    if (SpecialFiles.getExcludedFiles().contains(file.getName())) {
      continue;
    }
    if (file.isDirectory()) {
      File[] listFiles=file.listFiles();
      if (listFiles != null) {
        processFiles(printer,listFiles,holderFull,holderMock);
      }
    }
 else     if (!FileUtilRt.getExtension(file.getName()).equals(KotlinFileType.INSTANCE.getDefaultExtension())) {
    }
 else {
      String fullFileText=FileUtil.loadFile(file,true);
      if (hasBoxMethod(fullFileText)) {
        FilesWriter filesHolder=InTextDirectivesUtils.isDirectiveDefined(fullFileText,"FULL_JDK") || InTextDirectivesUtils.isDirectiveDefined(fullFileText,"WITH_RUNTIME") || InTextDirectivesUtils.isDirectiveDefined(fullFileText,"WITH_REFLECT") ? holderFull : holderMock;
        FqName classWithBoxMethod=AndroidTestGeneratorKt.genFiles(file,fullFileText,filesHolder);
        if (classWithBoxMethod == null)         continue;
        String generatedTestName=generateTestName(file.getName());
        generateTestMethod(printer,generatedTestName,classWithBoxMethod.asString(),StringUtil.escapeStringCharacters(file.getPath()));
      }
    }
  }
}
