{
  final List<String> files=new ArrayList<String>(2);
  FileUtil.processFilesRecursively(new File(folderName),new Processor<File>(){
    @Override public boolean process(    File file){
      if (file.getName().endsWith(".kt")) {
        files.add(file.getPath());
      }
      return true;
    }
  }
);
  Collections.sort(files);
  ClassFileFactory factory1=null;
  ClassFileFactory factory2=null;
  try {
    factory1=(ClassFileFactory)compileA(new File(files.get(1)));
    factory2=(ClassFileFactory)compileB(new File(files.get(0)));
    invokeBox();
  }
 catch (  Throwable e) {
    String result="";
    if (factory1 != null) {
      result+="FIRST: \n\n" + factory1.createText();
    }
    if (factory2 != null) {
      result+="\n\nSECOND: \n\n" + factory2.createText();
    }
    System.out.println(result);
    throw UtilsPackage.rethrow(e);
  }
}
