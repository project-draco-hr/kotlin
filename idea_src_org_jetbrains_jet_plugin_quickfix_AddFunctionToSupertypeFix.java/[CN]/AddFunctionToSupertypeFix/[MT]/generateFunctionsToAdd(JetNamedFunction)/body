{
  FunctionDescriptor functionDescriptor=(FunctionDescriptor)ResolvePackage.resolveToDescriptor(functionElement);
  DeclarationDescriptor containingDeclaration=functionDescriptor.getContainingDeclaration();
  if (!(containingDeclaration instanceof ClassDescriptor))   return Collections.emptyList();
  List<FunctionDescriptor> functions=Lists.newArrayList();
  ClassDescriptor classDescriptor=(ClassDescriptor)containingDeclaration;
  for (  ClassDescriptor supertypeDescriptor : getSupertypes(classDescriptor)) {
    if (KotlinBuiltIns.getInstance().isAnyOrNullableAny(supertypeDescriptor.getDefaultType()))     continue;
    functions.add(generateFunctionSignatureForType(functionDescriptor,supertypeDescriptor));
  }
  return functions;
}
