{
  ClassNode classNode=new ClassNode();
  new ClassReader(file.asByteArray()).accept(classNode,0);
  SimpleVerifier verifier=new SimpleVerifier();
  verifier.setClassLoader(loader);
  Analyzer<BasicValue> analyzer=new Analyzer<BasicValue>(verifier);
  boolean noErrors=true;
  for (  MethodNode method : classNode.methods) {
    try {
      analyzer.analyze(classNode.name,method);
    }
 catch (    Throwable e) {
      System.out.println(file.asText());
      System.err.println(classNode.name + "::" + method.name+ method.desc);
      if (e instanceof AnalyzerException) {
        TraceMethodVisitor tmv=new TraceMethodVisitor(new Textifier());
        ((AnalyzerException)e).node.accept(tmv);
        PrintWriter pw=new PrintWriter(System.err);
        tmv.p.print(pw);
        pw.flush();
      }
      e.printStackTrace();
      noErrors=false;
    }
  }
  return noErrors;
}
