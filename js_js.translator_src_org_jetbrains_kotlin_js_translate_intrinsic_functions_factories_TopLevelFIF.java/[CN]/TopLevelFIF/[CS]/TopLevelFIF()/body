{
  add(EQUALS_IN_ANY,KOTLIN_EQUALS);
  add(pattern("kotlin","toString").isExtensionOf(FQ_NAMES.any.asString()),TO_STRING);
  add(pattern("kotlin","equals").isExtensionOf(FQ_NAMES.any.asString()),KOTLIN_EQUALS);
  add(HASH_CODE_IN_ANY,KOTLIN_HASH_CODE);
  add(pattern(NamePredicate.PRIMITIVE_NUMBERS,"equals"),KOTLIN_EQUALS);
  add(pattern("String|Boolean|Char|Number.equals"),KOTLIN_EQUALS);
  add(pattern("kotlin","arrayOfNulls"),new KotlinFunctionIntrinsic("nullArray"));
  add(pattern("kotlin","iterator").isExtensionOf(FQ_NAMES.iterator.asString()),RETURN_RECEIVER_INTRINSIC);
  add(pattern("kotlin.collections","Map","get").checkOverridden(),NATIVE_MAP_GET);
  add(pattern("kotlin.js","set").isExtensionOf(FQ_NAMES.mutableMap.asString()),NATIVE_MAP_SET);
  add(pattern("java.util","HashMap","<init>"),new MapSelectImplementationIntrinsic(false));
  add(pattern("java.util","HashSet","<init>"),new MapSelectImplementationIntrinsic(true));
  add(pattern("kotlin.js","Json","get"),ArrayFIF.GET_INTRINSIC);
  add(pattern("kotlin.js","Json","set"),ArrayFIF.SET_INTRINSIC);
  add(pattern("kotlin","Throwable","getMessage"),MESSAGE_PROPERTY_INTRINSIC);
}
