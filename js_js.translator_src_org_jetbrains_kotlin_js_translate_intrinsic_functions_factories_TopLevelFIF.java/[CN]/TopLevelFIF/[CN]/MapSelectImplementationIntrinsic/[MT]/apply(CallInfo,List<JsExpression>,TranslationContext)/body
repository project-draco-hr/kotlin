{
  JetType keyType=callInfo.getResolvedCall().getTypeArguments().values().iterator().next();
  Name keyTypeName=JsDescriptorUtils.getNameIfStandardType(keyType);
  String collectionClassName=null;
  if (keyTypeName != null) {
    if (NamePredicate.PRIMITIVE_NUMBERS.apply(keyTypeName)) {
      collectionClassName=isSet ? "PrimitiveNumberHashSet" : "PrimitiveNumberHashMap";
    }
 else     if (PrimitiveType.BOOLEAN.getTypeName().equals(keyTypeName)) {
      collectionClassName=isSet ? "PrimitiveBooleanHashSet" : "PrimitiveBooleanHashMap";
    }
 else     if (keyTypeName.asString().equals("String")) {
      collectionClassName=isSet ? "DefaultPrimitiveHashSet" : "DefaultPrimitiveHashMap";
    }
  }
  if (collectionClassName == null) {
    collectionClassName=isSet ? "ComplexHashSet" : "ComplexHashMap";
  }
  return new JsNew(context.namer().kotlin(collectionClassName),arguments);
}
