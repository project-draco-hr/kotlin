{
  TemporaryBindingTrace traceWithFakeArgumentInfo=TemporaryBindingTrace.create(context.trace,"trace to store fake argument for",name);
  int index=0;
  List<JetExpression> fakeArguments=Lists.newArrayList();
  for (  JetType type : argumentTypes) {
    JetReferenceExpression fakeArgument=JetPsiFactory.createSimpleName(context.expressionTypingServices.getProject(),"fakeArgument" + index++);
    fakeArguments.add(fakeArgument);
    traceWithFakeArgumentInfo.record(EXPRESSION_TYPE,fakeArgument,type);
    traceWithFakeArgumentInfo.record(PROCESSED,fakeArgument);
  }
  return makeAndResolveFakeCall(receiver,context.replaceBindingTrace(traceWithFakeArgumentInfo),fakeArguments,name).getSecond();
}
