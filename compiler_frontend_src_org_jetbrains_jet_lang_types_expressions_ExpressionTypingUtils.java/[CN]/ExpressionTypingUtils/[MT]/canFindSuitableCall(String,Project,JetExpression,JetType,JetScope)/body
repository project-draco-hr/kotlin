{
  WritableScopeWithImports writableScopeWithImports=new WritableScopeImpl(scope,scope.getContainingDeclaration(),RedeclarationHandler.DO_NOTHING);
  JetImportDirective importDirective=JetPsiFactory.createImportDirective(project,callableFQN);
  ImportsResolver.ImportResolver importResolver=new ImportsResolver.ImportResolver(new BindingTraceContext(),false);
  Collection<? extends DeclarationDescriptor> declarationDescriptors=importResolver.processImportReference(importDirective,scope,new Importer.StandardImporter(writableScopeWithImports,false));
  List<CallableDescriptor> callableExtensionDescriptors=new ArrayList<CallableDescriptor>();
  ReceiverDescriptor receiverDescriptor=new ExpressionReceiver(receiverExpression,receiverType);
  for (  DeclarationDescriptor declarationDescriptor : declarationDescriptors) {
    if (declarationDescriptor instanceof CallableDescriptor) {
      CallableDescriptor callableDescriptor=(CallableDescriptor)declarationDescriptor;
      if (checkIsExtensionCallable(receiverDescriptor,callableDescriptor)) {
        callableExtensionDescriptors.add(callableDescriptor);
      }
    }
  }
  return callableExtensionDescriptors;
}
