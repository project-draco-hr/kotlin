{
  if (arguments.help) {
    usage(errStream);
    return OK;
  }
  System.setProperty("java.awt.headless","true");
  MessageRenderer messageRenderer=arguments.tags ? MessageRenderer.TAGS : MessageRenderer.PLAIN;
  if (arguments.version) {
    errStream.println(messageRenderer.render(Severity.INFO,"Kotlin Compiler version " + CompilerVersion.VERSION,null,-1,-1));
  }
  CompileEnvironment environment=new CompileEnvironment(messageRenderer,arguments.verbose);
  try {
    configureEnvironment(environment,arguments,errStream);
    boolean noErrors;
    if (arguments.module != null) {
      noErrors=environment.compileModuleScript(arguments.module,arguments.jar,arguments.outputDir,arguments.includeRuntime);
    }
 else {
      noErrors=environment.compileBunchOfSources(arguments.src,arguments.jar,arguments.outputDir,arguments.includeRuntime);
    }
    return noErrors ? OK : COMPILATION_ERROR;
  }
 catch (  Throwable t) {
    errStream.println(messageRenderer.renderException(t));
    return INTERNAL_ERROR;
  }
 finally {
    environment.dispose();
  }
}
