{
  CompileSession scriptCompileSession=new CompileSession(environment);
  scriptCompileSession.addSources(moduleFile);
  URL url=KotlinCompiler.class.getClassLoader().getResource("ModuleBuilder.kt");
  if (url != null) {
    String path=url.getPath();
    if (path.startsWith("file:")) {
      path=path.substring(5);
    }
    final VirtualFile vFile=environment.getJarFileSystem().findFileByPath(path);
    if (vFile == null) {
      System.out.println("Couldn't load ModuleBuilder.kt from runtime jar: " + url);
      return;
    }
    scriptCompileSession.addSources(vFile);
  }
 else {
    final String homeDirectory=getHomeDirectory();
    final File file=new File(homeDirectory,"stdlib/ktSrc/ModuleBuilder.kt");
    scriptCompileSession.addSources(environment.getLocalFileSystem().findFileByPath(file.getPath()));
  }
  if (!scriptCompileSession.analyze()) {
    return;
  }
  final ClassFileFactory factory=scriptCompileSession.generate();
  final IModuleSetBuilder moduleSetBuilder=runDefineModules(moduleFile,factory);
  for (  IModuleBuilder moduleBuilder : moduleSetBuilder.getModules()) {
    compileModule(environment,moduleBuilder,new File(moduleFile).getParent());
  }
}
