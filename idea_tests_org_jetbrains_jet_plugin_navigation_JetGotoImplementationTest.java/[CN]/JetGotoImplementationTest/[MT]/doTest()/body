{
  configureByFile(getTestName(false) + ".kt");
  List<String> expectedReferences=Arrays.asList(InTextDirectivesUtils.findListWithPrefix("// REF:",getEditor().getDocument().getText()));
  Collections.sort(expectedReferences);
  final GotoTargetHandler.GotoData gotoData=new GotoImplementationHandler().getSourceAndTargetElements(getEditor(),getFile());
  if (gotoData != null) {
    List<String> psiElements=Lists.transform(Arrays.asList(gotoData.targets),new Function<PsiElement,String>(){
      @Override public String apply(      @Nullable PsiElement element){
        assertNotNull(element);
        if (element instanceof JetLightClass) {
          JetLightClass jetLightClass=(JetLightClass)element;
          JetLightClassListCellRenderer renderer=new JetLightClassListCellRenderer();
          return JetLightClassListCellRenderer.getContainerTextStatic(jetLightClass) + "." + renderer.getElementText(jetLightClass);
        }
        assertTrue(element instanceof NavigationItem);
        ItemPresentation presentation=((NavigationItem)element).getPresentation();
        assertNotNull(presentation);
        return presentation.getLocationString() + "." + presentation.getPresentableText();
      }
    }
);
    assertOrderedEquals(Ordering.natural().sortedCopy(psiElements),expectedReferences);
  }
 else {
    assertEmpty(expectedReferences);
  }
}
