{
  FqName parentFqName=childClassFQName.parent();
  if (isInnerClass) {
    ClassDescriptor parentClass=resolveClass(parentFqName,DescriptorSearchRule.INCLUDE_KOTLIN);
    if (parentClass == null) {
      throw new IllegalStateException("Could not resolve " + parentFqName + " required to be parent for "+ childClassFQName);
    }
    return parentClass;
  }
 else {
    NamespaceDescriptor parentNamespace=namespaceResolver.resolveNamespace(parentFqName,DescriptorSearchRule.INCLUDE_KOTLIN);
    if (parentNamespace == null) {
      throw new IllegalStateException("Could not resolve " + parentFqName + " required to be parent for "+ childClassFQName);
    }
    return parentNamespace;
  }
}
