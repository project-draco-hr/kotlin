{
  for (  PrimitiveType type : PrimitiveType.NUMBER_TYPES) {
    if (type == PrimitiveType.CHAR || type == PrimitiveType.LONG)     continue;
    String typeName=type.getTypeName().asString();
    standardClasses.declare().forFQ("kotlin.ranges." + typeName + "Range").kotlinClass("NumberRange");
    standardClasses.declare().forFQ("kotlin.ranges." + typeName + "Progression").kotlinClass("NumberProgression");
  }
  standardClasses.declare().forFQ("kotlin.ranges.LongRange").kotlinClass("LongRange");
  standardClasses.declare().forFQ("kotlin.ranges.CharRange").kotlinClass("CharRange");
  standardClasses.declare().forFQ("kotlin.ranges.LongProgression").kotlinClass("LongProgression");
  standardClasses.declare().forFQ("kotlin.ranges.CharProgression").kotlinClass("CharProgression");
  standardClasses.declare().forFQ("kotlin.Enum").kotlinClass("Enum");
  standardClasses.declare().forFQ("kotlin.Comparable").kotlinClass("Comparable");
  standardClasses.declare().forFQ("kotlin.Throwable").kotlinClass("Throwable");
  standardClasses.declare().forFQ("kotlin.Annotation").kotlinClass("Annotation");
}
