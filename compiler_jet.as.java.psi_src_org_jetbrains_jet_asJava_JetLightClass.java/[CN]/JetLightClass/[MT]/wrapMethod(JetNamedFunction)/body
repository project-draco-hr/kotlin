{
  if (PsiTreeUtil.getParentOfType(function,JetFunction.class,JetProperty.class) != null) {
    return null;
  }
  JetLightClass wrapper=wrapDelegate(function,PsiCodegenPredictor.getPredefinedJvmClassNameForFun(function));
  if (wrapper == null) {
    return null;
  }
  for (  PsiMethod method : wrapper.getMethods()) {
    if (method instanceof PsiCompiledElement && ((PsiCompiledElement)method).getMirror() == function) {
      return method;
    }
  }
  return null;
}
