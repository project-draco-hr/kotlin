{
  if (foundType == null) {
    return null;
  }
  if (!AbiVersionUtil.isAbiVersionCompatible(version)) {
    return KotlinClassHeader.createIncompatibleVersionErrorHeader(version);
  }
switch (foundType) {
case CLASS:
    if (annotationData == null)     return null;
  return KotlinClassHeader.createClassHeader(version,annotationData);
case PACKAGE:
if (annotationData == null) return null;
return KotlinClassHeader.createPackageFacadeHeader(version,annotationData);
case PACKAGE_FRAGMENT:
return KotlinClassHeader.createPackageFragmentHeader(version);
case TRAIT_IMPL:
return KotlinClassHeader.createTraitImplHeader(version);
default :
throw new UnsupportedOperationException("Unknown compatible HeaderType: " + foundType);
}
}
