{
  return new AnnotationArgumentVisitor(){
    @Override public void visit(    @Nullable Name name,    @Nullable Object value){
      visitIntValueForSupportedAnnotation(name,value,KotlinSyntheticClass.CLASS_NAME);
    }
    @Override public void visitEnum(    @NotNull Name name,    @NotNull JvmClassName enumClassName,    @NotNull Name enumEntryName){
      if (enumClassName.getInternalName().equals(KotlinSyntheticClass.KIND_INTERNAL_NAME) && name.equals(KotlinSyntheticClass.KIND_FIELD_NAME)) {
        syntheticClassKind=KotlinSyntheticClass.Kind.valueOfOrNull(enumEntryName.asString());
        if (syntheticClassKind != null)         return;
      }
      if (isAbiVersionCompatible(version)) {
        throw new IllegalStateException("Unexpected enum entry for synthetic class annotation: " + name + "="+ enumClassName+ "."+ enumEntryName);
      }
    }
    @Nullable @Override public AnnotationArrayArgumentVisitor visitArray(    @NotNull Name name){
      return unexpectedArgument(name,KotlinSyntheticClass.CLASS_NAME);
    }
    @Override public void visitEnd(){
    }
  }
;
}
