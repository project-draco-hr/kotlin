{
  final JetTypeReference receiverTypeRef=f.getReceiverTypeRef();
  final JetType receiverType=receiverTypeRef == null ? null : bindingContext.get(BindingContext.TYPE,receiverTypeRef);
  final List<JetParameter> parameters=f.getValueParameters();
  List<Type> parameterTypes=new ArrayList<Type>();
  if (receiverType != null) {
    parameterTypes.add(mapType(receiverType));
  }
  for (  JetParameter parameter : parameters) {
    final Type type=mapType(bindingContext.get(BindingContext.TYPE,parameter.getTypeReference()));
    valueParameterTypes.add(type);
    parameterTypes.add(type);
  }
  for (  JetTypeParameter p : f.getTypeParameters()) {
    parameterTypes.add(TYPE_TYPEINFO);
  }
  final JetTypeReference returnTypeRef=f.getReturnTypeRef();
  Type returnType;
  if (returnTypeRef == null) {
    final FunctionDescriptor functionDescriptor=bindingContext.get(BindingContext.FUNCTION,f);
    final JetType type=functionDescriptor.getReturnType();
    returnType=mapType(type);
  }
 else {
    returnType=mapType(bindingContext.get(BindingContext.TYPE,returnTypeRef));
  }
  return new Method(f.getName(),returnType,parameterTypes.toArray(new Type[parameterTypes.size()]));
}
