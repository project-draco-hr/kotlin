{
  int lastWordBegin=-1;
  int lastWordEnd=-1;
  int index=byteStart;
  while (index < byteEnd) {
    while (index < byteEnd) {
      byte b=utf8Text[index];
      if (b == '\\') {
        index++;
        charStart++;
        if (index < byteEnd) {
          b=utf8Text[index];
        }
      }
 else       if (isLetter(b)) {
        break;
      }
      index++;
      if ((b & 0x80) == 0 || (b & 0xC0) == 0xC0) {
        charStart++;
      }
    }
    if (index >= byteEnd) {
      return;
    }
    int charEnd=charStart;
    int begin=index;
    while (index < byteEnd) {
      byte b=utf8Text[index];
      if (b == '\\') {
        index++;
        charEnd++;
        if (index < byteEnd) {
          b=utf8Text[index++];
          if ((b & 0x80) == 0 || (b & 0xC0) == 0xC0) {
            charEnd++;
          }
        }
        break;
      }
 else       if (!isLetter(b)) {
        break;
      }
      index++;
      if ((b & 0x80) == 0 || (b & 0xC0) == 0xC0) {
        charEnd++;
      }
    }
    int end=index;
    List<String> replacements=mLookup.getTypos(utf8Text,begin,end);
    if (replacements != null && isTranslatable(element)) {
      reportTypo(context,node,text,charStart,replacements);
    }
    checkRepeatedWords(context,element,node,text,lastWordBegin,lastWordEnd,charStart,charEnd);
    lastWordBegin=charStart;
    lastWordEnd=charEnd;
    charStart=charEnd;
  }
}
