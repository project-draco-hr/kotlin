{
  generateTest("compiler/tests/","JetDiagnosticsTestGenerated",AbstractDiagnosticsTestWithEagerResolve.class,testModel("compiler/testData/diagnostics/tests"),testModel("compiler/testData/diagnostics/tests/script",true,"ktscript","doTest"));
  generateTest("compiler/tests/","DataClassCodegenTestGenerated",AbstractDataClassCodegenTest.class,testModel("compiler/testData/codegen/dataClasses","blackBoxFileByFullPath"));
  generateTest("compiler/tests/","IntrinsicsTestGenerated",AbstractIntrinsicsTestCase.class,testModel("compiler/testData/codegen/intrinsics","blackBoxFileByFullPath"));
  generateTest("compiler/tests/","MultiDeclTestGenerated",AbstractMultiDeclTestCase.class,testModel("compiler/testData/codegen/multiDecl","blackBoxFileByFullPath"));
  generateTest("compiler/tests/","WriteFlagsTestGenerated",AbstractWriteFlagsTest.class,testModel("compiler/testData/writeFlags"));
  generateTest("compiler/tests/","LabelGenTestGenerated",AbstractCodegenTest.class,testModel("compiler/testData/codegen/label"));
  generateTest("compiler/tests/","InstructionsTestGenerated",AbstractCodegenTest.class,testModel("compiler/testData/codegen/instructions"));
  generateTest("compiler/tests/","ExtensionPropertiesTestGenerated",AbstractCodegenTest.class,testModel("compiler/testData/codegen/extensionProperties"));
  generateTest("compiler/tests/","LoadCompiledKotlinTestGenerated",AbstractLoadCompiledKotlinTest.class,testModel("compiler/testData/loadKotlin"));
  generateTest("compiler/tests/","LoadJavaTestGenerated",AbstractLoadJavaTest.class,testModel("compiler/testData/loadJava",true,"java","doTest"));
  generateTest("compiler/tests/","LazyResolveDescriptorRendererTestGenerated",AbstractLazyResolveDescriptorRendererTest.class,testModel("compiler/testData/renderer"),testModel("compiler/testData/lazyResolve/descriptorRenderer"));
  generateTest("compiler/tests/","LazyResolveNamespaceComparingTestGenerated",AbstractLazyResolveNamespaceComparingTest.class,testModel("compiler/testData/loadKotlin","doTestSinglePackage"),testModel("compiler/testData/loadJava","doTestSinglePackage"),testModel("compiler/testData/lazyResolve/namespaceComparator","doTestSinglePackage"));
  generateTest("idea/tests/","JetPsiCheckerTestGenerated",AbstractJetPsiCheckerTest.class,testModel("idea/testData/checker",false,"kt","doTest"),testModel("idea/testData/checker/regression"),testModel("idea/testData/checker/rendering"),testModel("idea/testData/checker/infos"));
  generateTest("idea/tests/","DeprecatedHighlightingTestGenerated",AbstractDeprecatedHighlightingTest.class,testModel("idea/testData/highlighter/deprecated"));
}
