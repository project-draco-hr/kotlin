{
  initFields();
  int mutable_bitField0_=0;
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 10:
{
    if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
      entry_=new java.util.ArrayList<org.jetbrains.kotlin.serialization.js.JsProtoBuf.Library.FileEntry>();
      mutable_bitField0_|=0x00000001;
    }
    entry_.add(input.readMessage(org.jetbrains.kotlin.serialization.js.JsProtoBuf.Library.FileEntry.PARSER,extensionRegistry));
    break;
  }
}
}
}
 catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
entry_=java.util.Collections.unmodifiableList(entry_);
}
makeExtensionsImmutable();
}
}
