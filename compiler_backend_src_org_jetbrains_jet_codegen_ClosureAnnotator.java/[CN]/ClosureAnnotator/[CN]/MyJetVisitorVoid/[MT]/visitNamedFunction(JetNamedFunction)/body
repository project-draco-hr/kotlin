{
  FunctionDescriptor functionDescriptor=(FunctionDescriptor)bindingContext.get(BindingContext.DECLARATION_TO_DESCRIPTOR,function);
  DeclarationDescriptor containingDeclaration=functionDescriptor.getContainingDeclaration();
  if (containingDeclaration instanceof ClassDescriptor) {
    nameStack.push(nameStack.peek() + '$' + function.getName());
    super.visitNamedFunction(function);
    nameStack.pop();
  }
 else   if (containingDeclaration instanceof NamespaceDescriptor) {
    String peek=nameStack.peek();
    if (peek.isEmpty())     peek="namespace";
 else     peek=peek + "/namespace";
    nameStack.push(peek + '$' + function.getName());
    super.visitNamedFunction(function);
    nameStack.pop();
  }
 else {
    String name=recordAnonymousClass(function);
    ClassDescriptor classDescriptor=classDescriptorForFunctionDescriptor(functionDescriptor,name);
    recordName(classDescriptor,name);
    recordEnclosing(classDescriptor);
    classStack.push(classDescriptor);
    nameStack.push(name);
    super.visitNamedFunction(function);
    nameStack.pop();
    classStack.pop();
  }
}
