{
  JetExpression importedReference=importDirective.getImportedReference();
  if (importedReference == null || resolvedTo == null) {
    return;
  }
  Name aliasName=JetPsiUtil.getAliasName(importDirective);
  if (aliasName == null) {
    return;
  }
  boolean uselessHiddenImport=true;
  for (  DeclarationDescriptor target : resolvedTo) {
    DeclarationDescriptor isResolved=null;
    if (target instanceof ClassDescriptor) {
      isResolved=fileScope.getClassifier(aliasName);
    }
 else     if (target instanceof VariableDescriptor) {
      isResolved=fileScope.getLocalVariable(aliasName);
    }
 else     if (target instanceof PackageViewDescriptor) {
      isResolved=fileScope.getPackage(aliasName);
    }
    if (isResolved == null || isResolved.equals(target)) {
      uselessHiddenImport=false;
    }
  }
  if (uselessHiddenImport) {
    trace.report(USELESS_HIDDEN_IMPORT.on(importedReference));
  }
  if (!importDirective.isAllUnder() && importedReference instanceof JetSimpleNameExpression && importDirective.getAliasName() == null) {
    trace.report(USELESS_SIMPLE_IMPORT.on(importedReference));
  }
}
