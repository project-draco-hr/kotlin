{
  p.print('{');
  if (objectLiteral.isMultiline()) {
    p.indentIn();
  }
  boolean notFirst=false;
  for (  JsPropertyInitializer item : objectLiteral.getPropertyInitializers()) {
    if (notFirst) {
      p.print(',');
    }
    if (objectLiteral.isMultiline()) {
      newlineOpt();
    }
 else     if (notFirst) {
      spaceOpt();
    }
    notFirst=true;
    JsExpression labelExpr=item.getLabelExpr();
    if (labelExpr instanceof JsNameRef) {
      p.print(((JsNameRef)labelExpr).getIdent());
    }
 else     if (labelExpr instanceof JsStringLiteral) {
      p.print(((JsStringLiteral)labelExpr).getValue());
    }
 else {
      accept(labelExpr);
    }
    _colon();
    space();
    JsExpression valueExpr=item.getValueExpr();
    boolean wasEnclosed=parenPushIfCommaExpression(valueExpr);
    accept(valueExpr);
    if (wasEnclosed) {
      rightParen();
    }
  }
  if (objectLiteral.isMultiline()) {
    p.indentOut();
    newlineOpt();
  }
  p.print('}');
}
