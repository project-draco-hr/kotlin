{
  FunctionCodegen functionCodegen=new FunctionCodegen(context,v,state,this);
  PropertyCodegen propertyCodegen=new PropertyCodegen(context,v,functionCodegen,this);
  if (kind != OwnerKind.TRAIT_IMPL) {
    for (    JetDeclaration declaration : myClass.getDeclarations()) {
      if (shouldProcessFirst(declaration)) {
        generateDeclaration(propertyCodegen,declaration);
      }
    }
  }
  for (  JetDeclaration declaration : myClass.getDeclarations()) {
    if (!shouldProcessFirst(declaration)) {
      generateDeclaration(propertyCodegen,declaration);
    }
  }
  if (!DescriptorUtils.isTrait(descriptor)) {
    for (    DeclarationDescriptor memberDescriptor : descriptor.getDefaultType().getMemberScope().getAllDescriptors()) {
      if (memberDescriptor instanceof FunctionDescriptor) {
        FunctionDescriptor member=(FunctionDescriptor)memberDescriptor;
        if (member.getKind() == CallableMemberDescriptor.Kind.FAKE_OVERRIDE) {
          functionCodegen.generateBridges(member);
        }
      }
    }
  }
  generatePrimaryConstructorProperties(propertyCodegen,myClass);
}
