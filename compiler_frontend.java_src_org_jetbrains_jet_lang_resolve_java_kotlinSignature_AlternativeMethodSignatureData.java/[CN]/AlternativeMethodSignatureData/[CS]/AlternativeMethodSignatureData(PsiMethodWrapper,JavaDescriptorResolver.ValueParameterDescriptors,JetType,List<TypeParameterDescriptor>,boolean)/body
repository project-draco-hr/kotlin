{
  String signature=method.getSignatureAnnotation().signature();
  if (signature.isEmpty()) {
    setAnnotated(false);
    altFunDeclaration=null;
    return;
  }
  setAnnotated(true);
  Project project=method.getPsiMethod().getProject();
  altFunDeclaration=JetPsiFactory.createFunction(project,signature);
  originalToAltTypeParameters=SignaturesUtil.recreateTypeParametersAndReturnMapping(methodTypeParameters);
  try {
    checkForSyntaxErrors(altFunDeclaration);
    checkEqualFunctionNames(altFunDeclaration,method);
    computeTypeParameters(methodTypeParameters);
    computeValueParameters(valueParameterDescriptors);
    if (hasSuperMethods) {
      checkSameParameterTypes(valueParameterDescriptors,methodTypeParameters);
    }
    if (originalReturnType != null) {
      altReturnType=computeReturnType(originalReturnType,altFunDeclaration.getReturnTypeRef(),originalToAltTypeParameters);
    }
  }
 catch (  AlternativeSignatureMismatchException e) {
    setError(e.getMessage());
  }
}
