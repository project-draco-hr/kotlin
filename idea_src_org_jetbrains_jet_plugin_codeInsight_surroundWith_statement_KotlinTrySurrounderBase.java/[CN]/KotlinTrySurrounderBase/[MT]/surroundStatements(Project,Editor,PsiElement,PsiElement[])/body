{
  JetTryExpression tryExpression=(JetTryExpression)JetPsiFactory.createExpression(project,getCodeTemplate());
  tryExpression=(JetTryExpression)container.addAfter(tryExpression,statements[statements.length - 1]);
  final JetBlockExpression tryBlock=tryExpression.getTryBlock();
  KotlinSurrounderUtils.addStatementsInBlock(tryBlock,statements);
  container.deleteChildRange(statements[0],statements[statements.length - 1]);
  tryExpression=CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(tryExpression);
  return getTextRangeForCaret(tryExpression);
}
