{
  JetClassOrObject classOrObject=declarationProvider.getOwnerInfo().getCorrespondingClassOrObject();
  if (classOrObject == null) {
    return Collections.emptySet();
  }
  DelegationResolver.TypeResolver lazyTypeResolver=new DelegationResolver.TypeResolver(){
    @Nullable @Override public JetType resolve(    @NotNull JetTypeReference reference){
      return resolveSession.getTypeResolver().resolveType(thisDescriptor.getScopeForClassHeaderResolution(),reference,trace,false);
    }
  }
;
  DelegationResolver.MemberExtractor<T> lazyMemberExtractor=new DelegationResolver.MemberExtractor<T>(){
    @NotNull @Override public Collection<T> getMembersByType(    @NotNull JetType type){
      return extractor.extract(type,name);
    }
  }
;
  return generateDelegatedMembers(classOrObject,thisDescriptor,existingDescriptors,trace,lazyMemberExtractor,lazyTypeResolver);
}
