{
  if (isBackingFieldReference(referenceExpression)) {
    return BackingFieldAccessTranslator.newInstance(referenceExpression,context);
  }
  if (PropertyAccessTranslator.canBePropertyAccess(referenceExpression,context)) {
    return new SimpleWrappedVariableAccessTranslator(context,referenceExpression,receiver);
  }
  if (ClassObjectAccessTranslator.isClassObjectReference(referenceExpression,context)) {
    return ClassObjectAccessTranslator.newInstance(referenceExpression,context);
  }
  return ReferenceAccessTranslator.newInstance(referenceExpression,context);
}
