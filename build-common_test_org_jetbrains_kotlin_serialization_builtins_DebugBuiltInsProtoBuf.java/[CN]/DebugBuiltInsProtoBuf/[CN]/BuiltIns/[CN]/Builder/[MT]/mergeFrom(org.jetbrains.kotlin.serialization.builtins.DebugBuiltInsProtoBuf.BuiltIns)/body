{
  if (other == org.jetbrains.kotlin.serialization.builtins.DebugBuiltInsProtoBuf.BuiltIns.getDefaultInstance())   return this;
  if (other.hasStrings()) {
    mergeStrings(other.getStrings());
  }
  if (other.hasQualifiedNames()) {
    mergeQualifiedNames(other.getQualifiedNames());
  }
  if (other.hasPackage()) {
    mergePackage(other.getPackage());
  }
  if (classBuilder_ == null) {
    if (!other.class_.isEmpty()) {
      if (class_.isEmpty()) {
        class_=other.class_;
        bitField0_=(bitField0_ & ~0x00000008);
      }
 else {
        ensureClassIsMutable();
        class_.addAll(other.class_);
      }
      onChanged();
    }
  }
 else {
    if (!other.class_.isEmpty()) {
      if (classBuilder_.isEmpty()) {
        classBuilder_.dispose();
        classBuilder_=null;
        class_=other.class_;
        bitField0_=(bitField0_ & ~0x00000008);
        classBuilder_=org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getClassFieldBuilder() : null;
      }
 else {
        classBuilder_.addAllMessages(other.class_);
      }
    }
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
