{
  assertType("{ -> }","() -> Unit");
  assertType("fun(): Int = 1","() -> Int");
  assertType("{ 1}","() -> Int");
  assertType("{ a : Int -> 1}","(a : Int) -> Int");
  assertType("{ a : Int, b : String -> 1}","(a : Int, b : String) -> Int");
  assertType("{ a : Int -> 1}","(Int) -> Int");
  assertType("{ a : Int, b : String -> 1}","(Int, String) -> Int");
  assertType("fun Any.(): Int = 1","Any.() -> Int");
  assertType("fun Any.(a : Int) = 1","Any.(a : Int) -> Int");
  assertType("fun Any.(a : Int, b : String) = 1","Any.(a : Int, b : String) -> Int");
  assertType("fun Any.(a : Int) = 1","Any.(Int) -> Int");
  assertType("fun Any.(a : Int, b : String) = 1","Any.(Int, String) -> Int");
  assertType("fun Any.(a : Int, b : String) = b","Any.(Int, String) -> String");
}
