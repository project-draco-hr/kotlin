{
  JetFile file=DescriptorToSourceUtils.getContainingFile(descriptor);
  if (file != null) {
    Visibility visibility=descriptor.getVisibility();
    if (Visibilities.isPrivate(visibility)) {
      return fileClassesProvider.getFileClassInternalName(file);
    }
 else {
      return fileClassesProvider.getFacadeClassInternalName(file);
    }
  }
  CallableMemberDescriptor directMember=getDirectMember(descriptor);
  if (directMember instanceof DeserializedCallableMemberDescriptor) {
    Name implClassName=JvmFileClassUtil.getImplClassName((DeserializedCallableMemberDescriptor)directMember);
    DeclarationDescriptor containingDeclaration=descriptor.getContainingDeclaration();
    if (containingDeclaration instanceof PackageFragmentDescriptor) {
      PackageFragmentDescriptor packageFragmentDescriptor=(PackageFragmentDescriptor)containingDeclaration;
      JetScope scope=packageFragmentDescriptor.getMemberScope();
      if (scope instanceof LazyJavaPackageScope) {
        String facadeShortName=((LazyJavaPackageScope)scope).getFacadeSimpleNameForPartSimpleName(implClassName.asString());
        if (facadeShortName != null) {
          FqName facadeFqName=packageFragmentDescriptor.getFqName().child(Name.identifier(facadeShortName));
          return internalNameByFqNameWithoutInnerClasses(facadeFqName);
        }
      }
    }
  }
  throw new RuntimeException("Unreachable state");
}
