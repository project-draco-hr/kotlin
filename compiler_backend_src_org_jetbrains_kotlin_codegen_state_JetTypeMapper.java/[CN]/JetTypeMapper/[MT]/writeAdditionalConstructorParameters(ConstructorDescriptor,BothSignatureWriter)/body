{
  MutableClosure closure=bindingContext.get(CodegenBinding.CLOSURE,descriptor.getContainingDeclaration());
  ClassDescriptor captureThis=getDispatchReceiverParameterForConstructorCall(descriptor,closure);
  if (captureThis != null) {
    writeParameter(sw,JvmMethodParameterKind.OUTER,captureThis.getDefaultType());
  }
  JetType captureReceiverType=closure != null ? closure.getCaptureReceiverType() : null;
  if (captureReceiverType != null) {
    writeParameter(sw,JvmMethodParameterKind.RECEIVER,captureReceiverType);
  }
  ClassDescriptor containingDeclaration=descriptor.getContainingDeclaration();
  if (containingDeclaration.getKind() == ClassKind.ENUM_CLASS || containingDeclaration.getKind() == ClassKind.ENUM_ENTRY) {
    writeParameter(sw,JvmMethodParameterKind.ENUM_NAME_OR_ORDINAL,getBuiltIns(descriptor).getStringType());
    writeParameter(sw,JvmMethodParameterKind.ENUM_NAME_OR_ORDINAL,getBuiltIns(descriptor).getIntType());
  }
  if (closure == null)   return;
  for (  DeclarationDescriptor variableDescriptor : closure.getCaptureVariables().keySet()) {
    Type type;
    if (variableDescriptor instanceof VariableDescriptor && !(variableDescriptor instanceof PropertyDescriptor)) {
      Type sharedVarType=getSharedVarType(variableDescriptor);
      if (sharedVarType == null) {
        sharedVarType=mapType(((VariableDescriptor)variableDescriptor).getType());
      }
      type=sharedVarType;
    }
 else     if (isLocalFunction(variableDescriptor)) {
      type=asmTypeForAnonymousClass(bindingContext,(FunctionDescriptor)variableDescriptor);
    }
 else {
      type=null;
    }
    if (type != null) {
      closure.setCapturedParameterOffsetInConstructor(variableDescriptor,sw.getCurrentSignatureSize() + 1);
      writeParameter(sw,JvmMethodParameterKind.CAPTURED_LOCAL_VARIABLE,type);
    }
  }
  if (classBuilderMode == ClassBuilderMode.FULL) {
    ResolvedCall<ConstructorDescriptor> superCall=findFirstDelegatingSuperCall(descriptor);
    if (superCall == null)     return;
    writeSuperConstructorCallParameters(sw,descriptor,superCall,captureThis != null);
  }
}
