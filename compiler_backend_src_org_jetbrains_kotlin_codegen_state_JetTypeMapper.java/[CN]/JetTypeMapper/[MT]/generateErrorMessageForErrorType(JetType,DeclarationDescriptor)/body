{
  PsiElement declarationElement=DescriptorToSourceUtils.descriptorToDeclaration(descriptor);
  if (declarationElement == null) {
    return String.format("Error type encountered: %s (%s). " + "One of the possible reasons may be that this type is not directly accessible from this module. " + "To workaround this error, try adding an explicit dependency on the module or library which contains this type "+ "to the classpath",type,type.getClass().getSimpleName());
  }
  DeclarationDescriptor containingDeclaration=descriptor.getContainingDeclaration();
  PsiElement parentDeclarationElement=containingDeclaration != null ? DescriptorToSourceUtils.descriptorToDeclaration(containingDeclaration) : null;
  return String.format("Error type encountered: %s (%s). Descriptor: %s. For declaration %s:%s in %s:%s",type,type.getClass().getSimpleName(),descriptor,declarationElement,declarationElement.getText(),parentDeclarationElement,parentDeclarationElement != null ? parentDeclarationElement.getText() : "null");
}
