{
  Name referencedName=referenceExpression.getReferencedNameAsName();
  Collection<DeclarationDescriptor> descriptors=Sets.newLinkedHashSet();
  PackageViewDescriptor packageDescriptor=outerScope.getPackage(referencedName);
  if (packageDescriptor != null) {
    descriptors.add(packageDescriptor);
  }
  KotlinLookupLocation location=new KotlinLookupLocation(referenceExpression);
  ClassifierDescriptor classifierDescriptor=outerScope.getClassifier(referencedName,location);
  if (classifierDescriptor != null) {
    descriptors.add(classifierDescriptor);
  }
  if (lookupMode == LookupMode.EVERYTHING) {
    descriptors.addAll(outerScope.getFunctions(referencedName,location));
    descriptors.addAll(outerScope.getProperties(referencedName,location));
    VariableDescriptor localVariable=outerScope.getLocalVariable(referencedName);
    if (localVariable != null) {
      descriptors.add(localVariable);
    }
  }
  return new LookupResult(descriptors,outerScope,packageLevel);
}
