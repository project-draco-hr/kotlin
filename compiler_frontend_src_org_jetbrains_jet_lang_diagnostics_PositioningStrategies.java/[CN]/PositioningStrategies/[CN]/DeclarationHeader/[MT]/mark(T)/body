{
  if (element instanceof JetNamedFunction) {
    JetNamedFunction function=(JetNamedFunction)element;
    PsiElement endOfSignatureElement;
    JetParameterList valueParameterList=function.getValueParameterList();
    JetElement returnTypeRef=function.getReturnTypeRef();
    PsiElement nameIdentifier=function.getNameIdentifier();
    if (returnTypeRef != null) {
      endOfSignatureElement=returnTypeRef;
    }
 else     if (valueParameterList != null) {
      endOfSignatureElement=valueParameterList;
    }
 else     if (nameIdentifier != null) {
      endOfSignatureElement=nameIdentifier;
    }
 else {
      endOfSignatureElement=function;
    }
    return markRange(function,endOfSignatureElement);
  }
 else   if (element instanceof JetProperty) {
    JetProperty property=(JetProperty)element;
    PsiElement endOfSignatureElement;
    JetTypeReference propertyTypeRef=property.getTypeRef();
    PsiElement nameIdentifier=property.getNameIdentifier();
    if (propertyTypeRef != null) {
      endOfSignatureElement=propertyTypeRef;
    }
 else     if (nameIdentifier != null) {
      endOfSignatureElement=nameIdentifier;
    }
 else {
      endOfSignatureElement=property;
    }
    return markRange(property,endOfSignatureElement);
  }
 else   if (element instanceof JetPropertyAccessor) {
    JetPropertyAccessor accessor=(JetPropertyAccessor)element;
    PsiElement endOfSignatureElement=accessor.getReturnTypeReference();
    if (endOfSignatureElement == null) {
      ASTNode rpar=accessor.getRightParenthesis();
      endOfSignatureElement=rpar == null ? null : rpar.getPsi();
    }
    if (endOfSignatureElement == null) {
      endOfSignatureElement=accessor.getNamePlaceholder();
    }
    return markRange(accessor,endOfSignatureElement);
  }
 else   if (element instanceof JetClass) {
    PsiElement nameAsDeclaration=((JetClass)element).getNameIdentifier();
    if (nameAsDeclaration == null) {
      return markElement(element);
    }
    PsiElement primaryConstructorParameterList=((JetClass)element).getPrimaryConstructorParameterList();
    if (primaryConstructorParameterList == null) {
      return markElement(nameAsDeclaration);
    }
    return markRange(nameAsDeclaration,primaryConstructorParameterList);
  }
 else   if (element instanceof JetObjectDeclaration) {
    return NAME_IDENTIFIER.mark((JetObjectDeclaration)element);
  }
  return super.mark(element);
}
