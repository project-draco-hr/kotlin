{
  for (  KtTypeConstraint constraint : declaration.getTypeConstraints()) {
    KtSimpleNameExpression nameExpression=constraint.getSubjectTypeParameterName();
    if (nameExpression == null)     continue;
    Name name=nameExpression.getReferencedNameAsName();
    ClassifierDescriptor classifier=ScopeUtilsKt.getClassifier(scope,name,NoLookupLocation.UNSORTED);
    if (classifier instanceof TypeParameterDescriptor && classifier.getContainingDeclaration() == descriptor)     continue;
    if (classifier != null) {
      trace.report(NAME_IN_CONSTRAINT_IS_NOT_A_TYPE_PARAMETER.on(nameExpression,constraint,declaration));
      trace.record(BindingContext.REFERENCE_TARGET,nameExpression,classifier);
    }
 else {
      trace.report(UNRESOLVED_REFERENCE.on(nameExpression,nameExpression));
    }
    KtTypeReference boundTypeReference=constraint.getBoundTypeReference();
    if (boundTypeReference != null) {
      typeResolver.resolveType(scope,boundTypeReference,trace,true);
    }
  }
}
