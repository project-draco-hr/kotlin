{
  if (!shouldRecordInitializerForProperty(variableDescriptor,variableType))   return;
  if (!variable.hasInitializer())   return;
  variableDescriptor.setCompileTimeInitializer(storageManager.createRecursionTolerantNullableLazyValue(new Function0<ConstantValue<?>>(){
    @Nullable @Override public ConstantValue<?> invoke(){
      JetExpression initializer=variable.getInitializer();
      JetType initializerType=expressionTypingServices.safeGetType(scope,initializer,variableType,dataFlowInfo,trace);
      return ConstantExpressionEvaluator.evaluateToConstantValue(initializer,trace,initializerType);
    }
  }
,null));
}
