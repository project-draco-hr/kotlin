{
  List<JetType> supertypes=Lists.newArrayList();
  List<JetDelegationSpecifier> delegationSpecifiers=jetClass.getDelegationSpecifiers();
  Collection<JetType> declaredSupertypes=resolveDelegationSpecifiers(scope,delegationSpecifiers,typeResolver,trace,false);
  for (  JetType declaredSupertype : declaredSupertypes) {
    addValidSupertype(supertypes,declaredSupertype);
  }
  if (classDescriptor.getKind() == ClassKind.ENUM_CLASS && !containsClass(supertypes)) {
    supertypes.add(0,builtIns.getEnumType(classDescriptor.getDefaultType()));
  }
  if (supertypes.isEmpty()) {
    JetType defaultSupertype=getDefaultSupertype(jetClass,trace,classDescriptor.getKind() == ClassKind.ANNOTATION_CLASS);
    addValidSupertype(supertypes,defaultSupertype);
  }
  return supertypes;
}
