{
  KotlinType type=delegatedPropertyResolver.resolveDelegateExpression(delegateExpression,property,propertyDescriptor,scopeForInitializer,trace,dataFlowInfo);
  if (type != null) {
    LexicalScope delegateFunctionsScope=ScopeUtils.makeScopeForDelegateConventionFunctions(scopeForInitializer,propertyDescriptor);
    KotlinType getterReturnType=delegatedPropertyResolver.getDelegatedPropertyGetMethodReturnType(propertyDescriptor,delegateExpression,type,trace,delegateFunctionsScope);
    if (getterReturnType != null) {
      return getterReturnType;
    }
  }
  return ErrorUtils.createErrorType("Type from delegate");
}
