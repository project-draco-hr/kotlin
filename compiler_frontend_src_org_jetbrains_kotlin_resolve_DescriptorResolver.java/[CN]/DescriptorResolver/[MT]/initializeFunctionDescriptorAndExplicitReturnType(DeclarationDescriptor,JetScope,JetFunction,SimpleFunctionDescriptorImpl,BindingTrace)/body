{
  WritableScope innerScope=new WritableScopeImpl(scope,functionDescriptor,new TraceBasedRedeclarationHandler(trace),"Function descriptor header scope");
  innerScope.addLabeledDeclaration(functionDescriptor);
  List<TypeParameterDescriptorImpl> typeParameterDescriptors=resolveTypeParametersForCallableDescriptor(functionDescriptor,innerScope,function.getTypeParameters(),trace);
  innerScope.changeLockLevel(WritableScope.LockLevel.BOTH);
  resolveGenericBounds(function,functionDescriptor,innerScope,typeParameterDescriptors,trace);
  JetType receiverType=null;
  JetTypeReference receiverTypeRef=function.getReceiverTypeReference();
  if (receiverTypeRef != null) {
    receiverType=typeResolver.resolveType(innerScope,receiverTypeRef,trace,true);
  }
  List<ValueParameterDescriptor> valueParameterDescriptors=resolveValueParameters(functionDescriptor,innerScope,function.getValueParameters(),trace);
  innerScope.changeLockLevel(WritableScope.LockLevel.READING);
  JetTypeReference returnTypeRef=function.getTypeReference();
  JetType returnType=null;
  if (returnTypeRef != null) {
    returnType=typeResolver.resolveType(innerScope,returnTypeRef,trace,true);
  }
  Modality modality=resolveModalityFromModifiers(function,getDefaultModality(containingDescriptor,function.hasBody()));
  Visibility visibility=resolveVisibilityFromModifiers(function,getDefaultVisibility(function,containingDescriptor));
  functionDescriptor.initialize(receiverType,getDispatchReceiverParameterIfNeeded(containingDescriptor),typeParameterDescriptors,valueParameterDescriptors,returnType,modality,visibility);
}
