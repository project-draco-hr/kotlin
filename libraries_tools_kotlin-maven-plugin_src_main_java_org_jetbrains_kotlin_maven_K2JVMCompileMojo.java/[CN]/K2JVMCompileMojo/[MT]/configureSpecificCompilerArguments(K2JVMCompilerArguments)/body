{
  getLog().info("Classes directory is " + output);
  arguments.destination=output;
  arguments.noStdlib=true;
  if (module != null) {
    getLog().info("Compiling Kotlin module " + module);
    arguments.module=module;
  }
  ArrayList<String> classpathList=new ArrayList<String>(classpath);
  if (!classpathList.isEmpty()) {
    String classPathString=join(classpathList,File.pathSeparator);
    getLog().info("Classpath: " + classPathString);
    arguments.classpath=classPathString;
  }
  getLog().info("Classes directory is " + output);
  arguments.destination=output;
  arguments.noJdkAnnotations=true;
  arguments.annotations=getFullAnnotationsPath(getLog(),annotationPaths);
  getLog().info("Using kotlin annotations from " + arguments.annotations);
  try {
    Args.parse(arguments,ArrayUtil.toStringArray(args));
  }
 catch (  IllegalArgumentException e) {
    throw new MojoExecutionException(e.getMessage());
  }
  if (arguments.noOptimize) {
    getLog().info("Optimization is turned off");
  }
}
