{
  LinkedList<FinalListItem> sortedOpenClasses=(LinkedList<FinalListItem>)DFS.topologicalOrder(openList,new DFS.Neighbors<FinalListItem>(){
    @NotNull @Override public Iterable<FinalListItem> getNeighbors(    FinalListItem current){
      TLinkedList<FinalListItem> parents=new TLinkedList<FinalListItem>();
      ClassDescriptor classDescriptor=getClassDescriptor(context().bindingContext(),current.declaration);
      Collection<JetType> superTypes=classDescriptor.getTypeConstructor().getSupertypes();
      for (      JetType type : superTypes) {
        ClassDescriptor descriptor=getClassDescriptorForType(type);
        FinalListItem item=openClassDescriptorToItem.get(descriptor);
        if (item == null) {
          continue;
        }
        parents.add(item);
      }
      return parents;
    }
  }
);
  Iterator<FinalListItem> it=sortedOpenClasses.descendingIterator();
  while (it.hasNext()) {
    FinalListItem item=it.next();
    JsExpression translatedDeclaration=translateClassDeclaration(item.declaration,classDescriptorToLabel,context());
    generate(item,propertyInitializers,translatedDeclaration,vars);
  }
}
