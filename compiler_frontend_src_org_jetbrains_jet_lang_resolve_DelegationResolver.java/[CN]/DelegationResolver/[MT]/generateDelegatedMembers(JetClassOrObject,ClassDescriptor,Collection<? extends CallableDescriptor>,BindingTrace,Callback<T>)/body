{
  Collection<T> delegatedMembers=new HashSet<T>();
  for (  JetDelegationSpecifier delegationSpecifier : classOrObject.getDelegationSpecifiers()) {
    if (!(delegationSpecifier instanceof JetDelegatorByExpressionSpecifier)) {
      continue;
    }
    JetDelegatorByExpressionSpecifier specifier=(JetDelegatorByExpressionSpecifier)delegationSpecifier;
    JetTypeReference typeReference=specifier.getTypeReference();
    if (typeReference == null) {
      continue;
    }
    JetType delegatedTraitType=callback.getTypeByTypeReference(typeReference);
    if (delegatedTraitType == null) {
      continue;
    }
    Collection<T> delegatesForTrait=generateDelegatesForOneTrait(classOrObject,classDescriptor,existingMembers,trace,callback,delegatedMembers,delegatedTraitType);
    delegatedMembers.addAll(delegatesForTrait);
  }
  return delegatedMembers;
}
