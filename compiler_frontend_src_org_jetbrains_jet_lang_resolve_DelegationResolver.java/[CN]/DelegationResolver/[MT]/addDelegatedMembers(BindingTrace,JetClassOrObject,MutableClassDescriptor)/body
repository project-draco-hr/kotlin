{
  for (  JetDelegationSpecifier delegationSpecifier : jetClass.getDelegationSpecifiers()) {
    if (delegationSpecifier instanceof JetDelegatorByExpressionSpecifier) {
      JetDelegatorByExpressionSpecifier specifier=(JetDelegatorByExpressionSpecifier)delegationSpecifier;
      JetType type=trace.get(BindingContext.TYPE,specifier.getTypeReference());
      if (type != null) {
        final Collection<CallableMemberDescriptor> membersToSkip=getMembersFromClassSupertype(type);
        Collection<CallableMemberDescriptor> descriptorsToDelegate=Collections2.filter(extractCallableMembers(type),new Predicate<CallableMemberDescriptor>(){
          @Override public boolean apply(          @Nullable CallableMemberDescriptor descriptor){
            for (            CallableMemberDescriptor memberToSkip : membersToSkip) {
              if (haveSameSignatures(memberToSkip,descriptor)) {
                return false;
              }
            }
            return true;
          }
        }
);
        Collection<CallableMemberDescriptor> generatedDescriptors=generateDelegatedMembers(classDescriptor,descriptorsToDelegate);
        for (        CallableMemberDescriptor descriptor : generatedDescriptors) {
          if (descriptor instanceof PropertyDescriptor) {
            PropertyDescriptor propertyDescriptor=(PropertyDescriptor)descriptor;
            classDescriptor.getBuilder().addPropertyDescriptor(propertyDescriptor);
          }
 else           if (descriptor instanceof SimpleFunctionDescriptor) {
            SimpleFunctionDescriptor functionDescriptor=(SimpleFunctionDescriptor)descriptor;
            classDescriptor.getBuilder().addFunctionDescriptor(functionDescriptor);
          }
        }
      }
    }
  }
}
