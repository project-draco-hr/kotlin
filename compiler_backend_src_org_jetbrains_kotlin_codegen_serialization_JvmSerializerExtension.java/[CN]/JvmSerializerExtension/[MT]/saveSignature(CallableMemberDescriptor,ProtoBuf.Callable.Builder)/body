{
  SignatureSerializer signatureSerializer=new SignatureSerializer();
  if (callable instanceof FunctionDescriptor) {
    JvmProtoBuf.JvmMethodSignature signature;
    if (callable instanceof DeserializedSimpleFunctionDescriptor) {
      DeserializedSimpleFunctionDescriptor deserialized=(DeserializedSimpleFunctionDescriptor)callable;
      signature=signatureSerializer.copyMethodSignature(deserialized.getProto().getExtension(JvmProtoBuf.oldMethodSignature),deserialized.getNameResolver());
    }
 else {
      Method method=bindings.get(METHOD_FOR_FUNCTION,(FunctionDescriptor)callable);
      signature=method != null ? signatureSerializer.methodSignature(method) : null;
    }
    if (signature != null) {
      proto.setExtension(JvmProtoBuf.oldMethodSignature,signature);
    }
  }
 else   if (callable instanceof PropertyDescriptor) {
    PropertyDescriptor property=(PropertyDescriptor)callable;
    PropertyGetterDescriptor getter=property.getGetter();
    PropertySetterDescriptor setter=property.getSetter();
    Method getterMethod=getter == null ? null : bindings.get(METHOD_FOR_FUNCTION,getter);
    Method setterMethod=setter == null ? null : bindings.get(METHOD_FOR_FUNCTION,setter);
    Pair<Type,String> field=bindings.get(FIELD_FOR_PROPERTY,property);
    String fieldName;
    String fieldDesc;
    boolean isStaticInOuter;
    if (field != null) {
      fieldName=field.second;
      fieldDesc=field.first.getDescriptor();
      isStaticInOuter=bindings.get(STATIC_FIELD_IN_OUTER_CLASS,property);
    }
 else {
      fieldName=null;
      fieldDesc=null;
      isStaticInOuter=false;
    }
    Method syntheticMethod=bindings.get(SYNTHETIC_METHOD_FOR_PROPERTY,property);
    JvmProtoBuf.JvmPropertySignature signature;
    if (callable instanceof DeserializedPropertyDescriptor) {
      DeserializedPropertyDescriptor deserializedCallable=(DeserializedPropertyDescriptor)callable;
      signature=signatureSerializer.copyPropertySignature(deserializedCallable.getProto().getExtension(JvmProtoBuf.oldPropertySignature),deserializedCallable.getNameResolver());
    }
 else {
      signature=signatureSerializer.propertySignature(fieldName,fieldDesc,isStaticInOuter,syntheticMethod != null ? signatureSerializer.methodSignature(syntheticMethod) : null,getterMethod != null ? signatureSerializer.methodSignature(getterMethod) : null,setterMethod != null ? signatureSerializer.methodSignature(setterMethod) : null);
    }
    proto.setExtension(JvmProtoBuf.oldPropertySignature,signature);
  }
}
