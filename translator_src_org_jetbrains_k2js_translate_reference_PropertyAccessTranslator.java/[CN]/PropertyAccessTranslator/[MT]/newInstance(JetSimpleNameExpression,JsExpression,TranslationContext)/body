{
  PropertyDescriptor propertyDescriptor=getPropertyDescriptor(expression,context);
  if (isNativeObject(propertyDescriptor) || isBackingFieldReference(expression)) {
    return new NativePropertyAccessTranslator(propertyDescriptor,qualifier,context);
  }
  ResolvedCall<?> resolvedCall=getResolvedCall(context.bindingContext(),expression);
  return new KotlinPropertyAccessTranslator(propertyDescriptor,qualifier,resolvedCall,context);
}
