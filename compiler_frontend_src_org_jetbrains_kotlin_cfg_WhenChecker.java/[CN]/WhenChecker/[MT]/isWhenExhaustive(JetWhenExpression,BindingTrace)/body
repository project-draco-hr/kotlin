{
  JetType type=whenSubjectType(expression,trace.getBindingContext());
  if (type == null)   return false;
  ClassDescriptor classDescriptor=getClassDescriptorOfTypeIfEnum(type);
  boolean exhaustive;
  if (classDescriptor == null) {
    if (KotlinBuiltIns.isBoolean(TypeUtils.makeNotNullable(type))) {
      exhaustive=isWhenOnBooleanExhaustive(expression,trace);
    }
 else {
      exhaustive=false;
    }
  }
 else {
    exhaustive=isWhenOnEnumExhaustive(expression,trace,classDescriptor);
  }
  if (exhaustive && (!TypeUtils.isNullableType(type) || containsNullCase(expression,trace))) {
    trace.record(BindingContext.EXHAUSTIVE_WHEN,expression);
    return true;
  }
  return false;
}
