{
  WritableFunctionGroup writableFunctionGroup=new WritableFunctionGroup(methodName);
  PsiMethod[] allMethods=psiClass.getMethods();
  for (  PsiMethod method : allMethods) {
    if (method.hasModifierProperty(PsiModifier.STATIC) != staticMembers) {
      continue;
    }
    if (!methodName.equals(method.getName())) {
      continue;
    }
    final PsiParameter[] parameters=method.getParameterList().getParameters();
    FunctionDescriptorImpl functionDescriptor=new FunctionDescriptorImpl(JavaDescriptorResolver.JAVA_ROOT,Collections.<Attribute>emptyList(),methodName);
    functionDescriptor.initialize(resolveTypeParameters(method.getTypeParameters()),semanticServices.getDescriptorResolver().resolveParameterDescriptors(functionDescriptor,parameters),semanticServices.getTypeTransformer().transformToType(method.getReturnType()));
    semanticServices.getTrace().recordDeclarationResolution(method,functionDescriptor);
    writableFunctionGroup.addFunction(functionDescriptor);
  }
  return writableFunctionGroup;
}
