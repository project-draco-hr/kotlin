{
  return DFS.dfs(current.getUpperBounds(),new DFS.Neighbors<JetType>(){
    @NotNull @Override public Iterable<JetType> getNeighbors(    JetType current){
      return Collections2.transform(current.getArguments(),PROJECTIONS_TO_TYPES);
    }
  }
,new DFS.NodeHandlerWithListResult<JetType,TypeParameterDescriptor>(){
    @Override public boolean beforeChildren(    JetType current){
      ClassifierDescriptor declarationDescriptor=current.getConstructor().getDeclarationDescriptor();
      if (typeParameters.contains(declarationDescriptor)) {
        result.add((TypeParameterDescriptor)declarationDescriptor);
      }
      return true;
    }
  }
);
}
