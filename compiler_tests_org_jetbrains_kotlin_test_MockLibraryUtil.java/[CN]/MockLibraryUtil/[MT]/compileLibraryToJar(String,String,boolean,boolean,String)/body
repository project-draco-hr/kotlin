{
  try {
    File contentDir=KotlinTestUtils.tmpDir("testLibrary-" + jarName);
    File classesDir=new File(contentDir,"classes");
    File srcFile=new File(sourcesPath);
    List<File> kotlinFiles=FileUtil.findFilesByMask(Pattern.compile(".*\\.kt"),srcFile);
    if (srcFile.isFile() || !kotlinFiles.isEmpty()) {
      compileKotlin(sourcesPath,classesDir,allowKotlinPackage,extraClasspath);
    }
    List<File> javaFiles=FileUtil.findFilesByMask(Pattern.compile(".*\\.java"),srcFile);
    if (!javaFiles.isEmpty()) {
      List<String> classpath=new ArrayList<String>();
      classpath.add(ForTestCompileRuntime.runtimeJarForTests().getPath());
      classpath.add(KotlinTestUtils.getAnnotationsJar().getPath());
      Collections.addAll(classpath,extraClasspath);
      if (classesDir.exists()) {
        classpath.add(classesDir.getPath());
      }
 else {
        FileUtil.createDirectory(classesDir);
      }
      List<String> options=Arrays.asList("-classpath",StringUtil.join(classpath,File.pathSeparator),"-d",classesDir.getPath());
      KotlinTestUtils.compileJavaFiles(javaFiles,options);
    }
    return createJarFile(contentDir,classesDir,sourcesPath,jarName,addSources);
  }
 catch (  IOException e) {
    throw ExceptionUtilsKt.rethrow(e);
  }
}
