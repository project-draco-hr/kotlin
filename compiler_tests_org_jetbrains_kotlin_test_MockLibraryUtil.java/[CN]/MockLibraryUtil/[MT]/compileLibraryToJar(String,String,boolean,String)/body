{
  try {
    File contentDir=JetTestUtils.tmpDir("testLibrary-" + jarName);
    File classesDir=new File(contentDir,"classes");
    List<File> kotlinFiles=FileUtil.findFilesByMask(Pattern.compile(".*\\.kt"),new File(sourcesPath));
    if (!kotlinFiles.isEmpty()) {
      compileKotlin(sourcesPath,classesDir,extraClasspath);
    }
    List<File> javaFiles=FileUtil.findFilesByMask(Pattern.compile(".*\\.java"),new File(sourcesPath));
    if (!javaFiles.isEmpty()) {
      List<String> classpath=new ArrayList<String>();
      classpath.add(ForTestCompileRuntime.runtimeJarForTests().getPath());
      classpath.add(JetTestUtils.getAnnotationsJar().getPath());
      Collections.addAll(classpath,extraClasspath);
      if (classesDir.exists()) {
        classpath.add(classesDir.getPath());
      }
 else {
        FileUtil.createDirectory(classesDir);
      }
      List<String> options=Arrays.asList("-classpath",StringUtil.join(classpath,File.pathSeparator),"-d",classesDir.getPath());
      JetTestUtils.compileJavaFiles(javaFiles,options);
    }
    return createJarFile(contentDir,classesDir,sourcesPath,jarName,addSources);
  }
 catch (  IOException e) {
    throw ExceptionUtilsKt.rethrow(e);
  }
}
