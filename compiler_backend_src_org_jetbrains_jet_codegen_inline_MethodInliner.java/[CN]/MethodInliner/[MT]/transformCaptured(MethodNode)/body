{
  if (lambdaType == null) {
    return;
  }
  AbstractInsnNode cur=node.instructions.getFirst();
  while (cur != null) {
    if (cur.getType() == AbstractInsnNode.FIELD_INSN) {
      FieldInsnNode fieldInsnNode=(FieldInsnNode)cur;
      if (lambdaFieldRemapper.canProcess(fieldInsnNode.owner,lambdaType.getInternalName())) {
        CapturedParamInfo result=this.lambdaFieldRemapper.findField(fieldInsnNode,parameters.getCaptured());
        if (result == null) {
          throw new UnsupportedOperationException("Coudn't find field " + fieldInsnNode.owner + "."+ fieldInsnNode.name+ " ("+ fieldInsnNode.desc+ ") in captured vars of "+ lambdaType);
        }
        if (result.isSkipped()) {
        }
 else {
          cur=this.lambdaFieldRemapper.doTransform(node,fieldInsnNode,result);
        }
      }
 else {
        Type type1=Type.getType(fieldInsnNode.desc);
        if (!AsmUtil.isPrimitive(type1)) {
          String type=type1.getInternalName();
          if (inliningContext.typeMapping.containsKey(type)) {
            String newTypeOrSkip=inliningContext.typeMapping.get(type);
            if (newTypeOrSkip != null) {
              fieldInsnNode.owner=newTypeOrSkip;
            }
 else {
              AbstractInsnNode previous=fieldInsnNode.getPrevious();
              AbstractInsnNode nextInstruction=fieldInsnNode.getNext();
              if (!(nextInstruction instanceof FieldInsnNode)) {
                throw new IllegalStateException("Instruction after inlined one should be field access: " + nextInstruction);
              }
              if (!(previous instanceof FieldInsnNode)) {
                throw new IllegalStateException("Instruction before inlined one should be field access: " + previous);
              }
              cur=nextInstruction;
              node.instructions.remove(cur.getPrevious());
              ((FieldInsnNode)cur).owner=Type.getType(((FieldInsnNode)previous).desc).getInternalName();
              ((FieldInsnNode)cur).name=LambdaTransformer.getNewFieldName(((FieldInsnNode)cur).name);
            }
          }
        }
      }
    }
    cur=cur.getNext();
  }
}
