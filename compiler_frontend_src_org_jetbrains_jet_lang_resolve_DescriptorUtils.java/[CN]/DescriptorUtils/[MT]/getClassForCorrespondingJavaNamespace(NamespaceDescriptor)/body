{
  NamespaceDescriptorParent containingDeclaration=correspondingNamespace.getContainingDeclaration();
  if (!(containingDeclaration instanceof NamespaceDescriptor)) {
    return null;
  }
  NamespaceDescriptor namespaceDescriptor=(NamespaceDescriptor)containingDeclaration;
  ClassifierDescriptor classDescriptor=namespaceDescriptor.getMemberScope().getClassifier(correspondingNamespace.getName());
  if (classDescriptor != null && classDescriptor instanceof ClassDescriptor) {
    return (ClassDescriptor)classDescriptor;
  }
  ClassDescriptor classDescriptorForOuterClass=getClassForCorrespondingJavaNamespace(namespaceDescriptor);
  if (classDescriptorForOuterClass == null) {
    return null;
  }
  ClassifierDescriptor innerClassDescriptor=classDescriptorForOuterClass.getUnsubstitutedInnerClassesScope().getClassifier(correspondingNamespace.getName());
  if (innerClassDescriptor instanceof ClassDescriptor) {
    return (ClassDescriptor)innerClassDescriptor;
  }
  return null;
}
