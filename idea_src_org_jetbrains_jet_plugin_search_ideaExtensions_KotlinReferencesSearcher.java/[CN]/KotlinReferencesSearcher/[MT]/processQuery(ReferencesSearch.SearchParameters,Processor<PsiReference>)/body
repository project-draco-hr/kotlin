{
  PsiElement element=queryParameters.getElementToSearch();
  final PsiNamedElement unwrappedElement=AsJavaPackage.getNamedUnwrappedElement(element);
  if (unwrappedElement == null || !ProjectRootsUtil.isInSourceWithGradleCheck(unwrappedElement))   return;
  ApplicationManager.getApplication().runReadAction(new Runnable(){
    @Override public void run(){
      KotlinPsiSearchHelper searchHelper=new KotlinPsiSearchHelper(queryParameters.getElementToSearch().getProject());
      UsagesSearchTarget<PsiNamedElement> searchTarget=new UsagesSearchTarget<PsiNamedElement>(unwrappedElement,queryParameters.getEffectiveSearchScope(),UsagesSearchLocation.EVERYWHERE,false);
      UsagesSearchRequestItem requestItem=new UsagesSearchRequestItem(searchTarget,UsagesSearchPackage.getSpecialNamesToSearch(unwrappedElement),UsagesSearchPackage.getIsTargetUsage());
      searchHelper.processFilesWithText(requestItem,consumer);
    }
  }
);
  searchLightElements(queryParameters,element);
}
