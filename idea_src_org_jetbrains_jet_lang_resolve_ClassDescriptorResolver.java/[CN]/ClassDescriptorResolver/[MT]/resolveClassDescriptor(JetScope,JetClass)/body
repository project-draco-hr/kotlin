{
  ClassDescriptorImpl classDescriptor=new ClassDescriptorImpl(scope.getContainingDeclaration(),AttributeResolver.INSTANCE.resolveAttributes(classElement.getModifierList()),classElement.getName());
  WritableScope parameterScope=new WritableScope(scope,classDescriptor);
  List<TypeParameterDescriptor> typeParameters=resolveTypeParameters(classDescriptor,parameterScope,classElement.getTypeParameters());
  List<JetDelegationSpecifier> delegationSpecifiers=classElement.getDelegationSpecifiers();
  Collection<? extends JetType> superclasses=delegationSpecifiers.isEmpty() ? Collections.singleton(JetStandardClasses.getAnyType()) : resolveTypes(parameterScope,delegationSpecifiers);
  boolean open=classElement.hasModifier(JetTokens.OPEN_KEYWORD);
  WritableScope members=resolveMembers(classDescriptor,classElement,typeParameters,scope,parameterScope,superclasses);
  return classDescriptor.initialize(!open,typeParameters,superclasses,members);
}
