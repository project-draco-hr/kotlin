{
  WritableScope parameterScope=new WritableScope(scope);
  List<TypeParameterDescriptor> typeParameters=resolveTypeParameters(parameterScope,classElement.getTypeParameters());
  List<JetDelegationSpecifier> delegationSpecifiers=classElement.getDelegationSpecifiers();
  Collection<? extends Type> superclasses=delegationSpecifiers.isEmpty() ? Collections.singleton(JetStandardClasses.getAnyType()) : resolveTypes(parameterScope,delegationSpecifiers);
  boolean open=classElement.hasModifier(JetTokens.OPEN_KEYWORD);
  WritableScope members=resolveMembers(classElement,typeParameters,scope,parameterScope,superclasses);
  return new ClassDescriptorImpl(AttributeResolver.INSTANCE.resolveAttributes(classElement.getModifierList()),!open,classElement.getName(),typeParameters,superclasses,members);
}
