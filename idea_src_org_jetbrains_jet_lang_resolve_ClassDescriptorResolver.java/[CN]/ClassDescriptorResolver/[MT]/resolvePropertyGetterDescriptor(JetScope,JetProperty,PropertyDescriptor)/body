{
  PropertyGetterDescriptor getterDescriptor;
  JetPropertyAccessor getter=property.getGetter();
  if (getter != null) {
    List<AnnotationDescriptor> annotations=annotationResolver.resolveAnnotations(scope,getter.getModifierList());
    JetType returnType=null;
    JetTypeReference returnTypeReference=getter.getReturnTypeReference();
    if (returnTypeReference != null) {
      returnType=typeResolver.resolveType(scope,returnTypeReference);
    }
    getterDescriptor=new PropertyGetterDescriptor(resolveModifiers(getter.getModifierList(),DEFAULT_MODIFIERS),propertyDescriptor,annotations,returnType,getter.getBodyExpression() != null,false);
    trace.record(BindingContext.PROPERTY_ACCESSOR,getter,getterDescriptor);
  }
 else {
    getterDescriptor=new PropertyGetterDescriptor(propertyDescriptor.getModifiers(),propertyDescriptor,Collections.<AnnotationDescriptor>emptyList(),propertyDescriptor.getOutType(),false,true);
  }
  return getterDescriptor;
}
