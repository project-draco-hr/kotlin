{
  List<JetDelegationSpecifier> delegationSpecifiers=jetClass.getDelegationSpecifiers();
  JetType defaultSupertype=JetStandardClasses.getAnyType();
  if (jetClass instanceof JetEnumEntry) {
    JetClassOrObject parent=PsiTreeUtil.getParentOfType(jetClass,JetClassOrObject.class);
    ClassDescriptor parentDescriptor=trace.getBindingContext().getClassDescriptor(parent);
    if (parentDescriptor.getTypeConstructor().getParameters().isEmpty()) {
      defaultSupertype=parentDescriptor.getDefaultType();
    }
 else     if (delegationSpecifiers.isEmpty()) {
      trace.getErrorHandler().genericError(((JetEnumEntry)jetClass).getNameIdentifier().getNode(),"generic arguments of the base type must be specified");
    }
  }
  Collection<? extends JetType> superclasses=delegationSpecifiers.isEmpty() ? Collections.singleton(defaultSupertype) : resolveDelegationSpecifiers(descriptor.getScopeForSupertypeResolution(),delegationSpecifiers,typeResolverNotCheckingBounds);
  for (  JetType superclass : superclasses) {
    descriptor.addSupertype(superclass);
  }
}
