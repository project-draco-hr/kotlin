{
  JsObjectLiteral objectLiteral=new JsObjectLiteral();
  JsNameRef packageMapNameRef=context().jsScope().declareName("_").makeRef();
  JsExpression packageMapValue;
  if (context().isNotEcma3()) {
    packageMapValue=AstUtil.newInvocation(JsAstUtils.CREATE_OBJECT,context().program().getNullLiteral(),objectLiteral);
  }
 else {
    packageMapValue=objectLiteral;
  }
  statements.add(JsAstUtils.newVar(packageMapNameRef.getName(),packageMapValue));
  for (  NamespaceTranslator translator : namespaceTranslators) {
    translator.addNamespaceDeclaration(objectLiteral.getPropertyInitializers());
  }
}
