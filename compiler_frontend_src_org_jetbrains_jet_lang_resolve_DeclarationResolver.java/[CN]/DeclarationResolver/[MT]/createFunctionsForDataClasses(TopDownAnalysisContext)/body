{
  for (  Map.Entry<JetClassOrObject,ClassDescriptorWithResolutionScopes> entry : c.getDeclaredClasses().entrySet()) {
    JetClassOrObject klass=entry.getKey();
    MutableClassDescriptor classDescriptor=(MutableClassDescriptor)entry.getValue();
    if (klass instanceof JetClass && klass.hasPrimaryConstructor() && KotlinBuiltIns.getInstance().isData(classDescriptor)) {
      ConstructorDescriptor constructor=DescriptorUtils.getConstructorOfDataClass(classDescriptor);
      createComponentFunctions(classDescriptor,constructor);
      createCopyFunction(classDescriptor,constructor);
    }
  }
}
