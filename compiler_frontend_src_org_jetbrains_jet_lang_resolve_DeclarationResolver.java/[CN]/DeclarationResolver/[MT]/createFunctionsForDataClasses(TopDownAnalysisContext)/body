{
  for (  Map.Entry<JetClassOrObject,ClassDescriptorWithResolutionScopes> entry : c.getDeclaredClasses().entrySet()) {
    JetClassOrObject klass=entry.getKey();
    MutableClassDescriptor classDescriptor=(MutableClassDescriptor)entry.getValue();
    if (klass instanceof JetClass && KotlinBuiltIns.getInstance().isData(classDescriptor)) {
      List<ValueParameterDescriptor> parameters=klass.hasPrimaryConstructor() ? getConstructorOfDataClass(classDescriptor).getValueParameters() : Collections.<ValueParameterDescriptor>emptyList();
      createComponentFunctions(classDescriptor,parameters);
      createCopyFunction(classDescriptor,parameters);
    }
  }
}
