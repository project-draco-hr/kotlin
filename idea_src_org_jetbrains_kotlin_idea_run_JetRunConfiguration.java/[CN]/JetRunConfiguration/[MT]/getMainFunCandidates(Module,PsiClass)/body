{
  if (psiClass instanceof KotlinLightClassForPackage) {
    String qualifiedName=psiClass.getQualifiedName();
    if (qualifiedName == null)     return Collections.emptyList();
    FqName mainFunFqName=new FqName(qualifiedName).parent().child(Name.identifier("main"));
    return JetTopLevelFunctionFqnNameIndex.getInstance().get(mainFunFqName.asString(),module.getProject(),module.getModuleRuntimeScope(true));
  }
  return KotlinPackage.filterNotNull(KotlinPackage.map(psiClass.findMethodsByName("main",false),new Function1<PsiMethod,JetNamedFunction>(){
    @Override public JetNamedFunction invoke(    PsiMethod method){
      if (!(method instanceof KotlinLightMethod))       return null;
      JetDeclaration declaration=((KotlinLightMethod)method).getOrigin();
      return declaration instanceof JetNamedFunction ? (JetNamedFunction)declaration : null;
    }
  }
));
}
