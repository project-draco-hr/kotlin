{
  List<ReplaceEdit> edits=new ArrayList<ReplaceEdit>();
  if (message.equals(ELLIPSIS_MESSAGE)) {
    int offset=text.indexOf("...");
    if (offset != -1) {
      edits.add(new ReplaceEdit(offset,3,"\u2026"));
    }
  }
 else   if (message.equals(EN_DASH_MESSAGE)) {
    int offset=text.indexOf('-');
    if (offset != -1) {
      edits.add(new ReplaceEdit(offset,1,"\u2013"));
    }
  }
 else   if (message.equals(EM_DASH_MESSAGE)) {
    int offset=text.indexOf("--");
    if (offset != -1) {
      edits.add(new ReplaceEdit(offset,2,"\u2014"));
    }
  }
 else   if (message.equals(TYPOGRAPHIC_APOSTROPHE_MESSAGE)) {
    int offset=text.indexOf('\'');
    if (offset != -1) {
      edits.add(new ReplaceEdit(offset,1,"\u2019"));
    }
  }
 else   if (message.equals(COPYRIGHT_MESSAGE)) {
    int offset=text.indexOf("(c)");
    if (offset == -1) {
      offset=text.indexOf("(C)");
    }
    if (offset != -1) {
      edits.add(new ReplaceEdit(offset,3,"\u00A9"));
    }
  }
 else   if (message.equals(SINGLE_QUOTE_MESSAGE)) {
    int offset=text.indexOf('\'');
    if (offset != -1) {
      int endOffset=text.indexOf('\'',offset + 1);
      if (endOffset != -1) {
        edits.add(new ReplaceEdit(offset,1,"\u2018"));
        edits.add(new ReplaceEdit(endOffset,1,"\u2019"));
      }
    }
  }
 else   if (message.equals(DBL_QUOTES_MESSAGE)) {
    int offset=text.indexOf('"');
    if (offset != -1) {
      int endOffset=text.indexOf('"',offset + 1);
      if (endOffset != -1) {
        edits.add(new ReplaceEdit(offset,1,"\u201C"));
        edits.add(new ReplaceEdit(endOffset,1,"\u201D"));
      }
    }
  }
 else   if (message.equals(GRAVE_QUOTE_MESSAGE)) {
    int offset=text.indexOf('`');
    if (offset != -1) {
      int endOffset=text.indexOf('\'',offset + 1);
      if (endOffset != -1) {
        edits.add(new ReplaceEdit(offset,1,"\u2018"));
        edits.add(new ReplaceEdit(endOffset,1,"\u2019"));
      }
    }
  }
 else {
    Matcher matcher=Pattern.compile(FRACTION_MESSAGE_PATTERN).matcher(message);
    if (matcher.find()) {
      String replace=matcher.group(3);
      int offset=text.indexOf(replace);
      if (offset != -1) {
        String replaceWith=matcher.group(2);
        edits.add(new ReplaceEdit(offset,replace.length(),replaceWith));
      }
    }
  }
  return edits;
}
