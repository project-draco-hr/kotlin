{
  return new TypeCheckingProcedure(new TypeCheckerTypingConstraints(){
    @Override public boolean assertEqualTypeConstructors(    @NotNull TypeConstructor constructor1,    @NotNull TypeConstructor constructor2){
      if (!constructor1.equals(constructor2)) {
        TypeConstructor img1=equalityAxioms.get(constructor1);
        TypeConstructor img2=equalityAxioms.get(constructor2);
        if (!(img1 != null && img1.equals(constructor2)) && !(img2 != null && img2.equals(constructor1))) {
          return false;
        }
      }
      return true;
    }
  }
).equalTypes(a,b);
}
