{
  final WritableScope toplevelScope=new WritableScope(outerScope);
  collectTypeDeclarators(toplevelScope,declarations);
  resolveTypeDeclarations();
  collectBehaviorDeclarators(toplevelScope,declarations);
  resolveBehaviorDeclarationBodies();
  return new BindingContext(){
    @Override public NamespaceDescriptor getNamespaceDescriptor(    JetNamespace declaration){
      throw new UnsupportedOperationException();
    }
    @Override public ClassDescriptor getClassDescriptor(    JetClass declaration){
      return classes.get(declaration);
    }
    @Override public FunctionDescriptor getFunctionDescriptor(    JetFunction declaration){
      return functions.get(declaration);
    }
    @Override public PropertyDescriptor getPropertyDescriptor(    JetProperty declaration){
      return properties.get(declaration);
    }
    @Override public Type getExpressionType(    JetExpression expression){
      return expressionTypes.get(expression);
    }
    @Override public DeclarationDescriptor resolve(    JetReferenceExpression referenceExpression){
      return resolutionResults.get(referenceExpression);
    }
    @Override public JetScope getTopLevelScope(){
      return toplevelScope;
    }
  }
;
}
