{
  semanticServices.getTypeInferrer(new BindingTrace(){
    @Override public void recordExpressionType(    JetExpression expression,    Type type){
      expressionTypes.put(expression,type);
    }
    @Override public void recordReferenceResolution(    JetReferenceExpression expression,    DeclarationDescriptor descriptor){
      resolutionResults.put(expression,descriptor);
    }
    @Override public void recordTypeResolution(    JetTypeReference typeReference,    Type type){
      types.put(typeReference,type);
    }
    @Override public void recordDeclarationResolution(    JetDeclaration declaration,    DeclarationDescriptor descriptor){
      throw new IllegalStateException();
    }
  }
).getType(scope,expression,preferBlock);
}
