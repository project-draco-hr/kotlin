{
  TypeHierarchyResolver typeHierarchyResolver=new TypeHierarchyResolver(semanticServices,trace);
  typeHierarchyResolver.getNamespaceScopes().put(namespace,standardLibraryNamespace.getMemberScope());
  typeHierarchyResolver.getNamespaceDescriptors().put(namespace,standardLibraryNamespace);
  typeHierarchyResolver.process(outerScope,standardLibraryNamespace,namespace.getDeclarations());
  DeclarationResolver declarationResolver=new DeclarationResolver(semanticServices,trace,typeHierarchyResolver);
  declarationResolver.process();
  BodyResolver bodyResolver=new BodyResolver(semanticServices,trace,typeHierarchyResolver,declarationResolver){
    @Override protected void checkProperty(    JetProperty property,    PropertyDescriptor propertyDescriptor,    @Nullable ClassDescriptor classDescriptor){
    }
    @Override protected void checkFunction(    JetDeclarationWithBody function,    FunctionDescriptor functionDescriptor){
    }
  }
;
  bodyResolver.resolveBehaviorDeclarationBodies();
}
