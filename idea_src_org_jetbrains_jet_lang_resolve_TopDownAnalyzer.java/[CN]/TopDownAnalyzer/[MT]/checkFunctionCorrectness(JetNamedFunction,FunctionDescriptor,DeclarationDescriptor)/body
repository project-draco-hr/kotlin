{
  if (containingDescriptor instanceof ClassDescriptor) {
    ClassDescriptor classDescriptor=(ClassDescriptor)containingDescriptor;
    if (functionDescriptor.getModifiers().isAbstract() && !classDescriptor.isAbstract()) {
      trace.getErrorHandler().genericError(function.getModifierList().getModifierNode(JetTokens.ABSTRACT_KEYWORD),"Abstract method " + function.getName() + " in non-abstract class "+ classDescriptor.getName());
    }
    if (function.getBodyExpression() == null && !functionDescriptor.getModifiers().isAbstract()) {
      trace.getErrorHandler().genericError(function.getNameIdentifier().getNode(),"Method without body must be abstract");
    }
    return;
  }
  if (functionDescriptor.getModifiers().isAbstract()) {
    trace.getErrorHandler().genericError(function.getModifierList().getModifierNode(JetTokens.ABSTRACT_KEYWORD),"Global function " + function.getName() + " can not be abstract");
  }
  if (function.getBodyExpression() == null && !functionDescriptor.getModifiers().isAbstract()) {
    trace.getErrorHandler().genericError(function.getNameIdentifier().getNode(),"Global function must have body");
  }
}
