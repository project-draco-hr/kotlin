{
  if (!klass.hasPrimaryConstructor())   return;
  JetScope memberScope=classDescriptor.getScopeForSupertypeResolution();
  ConstructorDescriptor constructorDescriptor=classDescriptorResolver.resolvePrimaryConstructorDescriptor(memberScope,classDescriptor,klass);
  for (  JetParameter parameter : klass.getPrimaryConstructorParameters()) {
    PropertyDescriptor propertyDescriptor=classDescriptorResolver.resolvePrimaryConstructorParameterToAProperty(classDescriptor,memberScope,parameter);
    classDescriptor.addPropertyDescriptor(propertyDescriptor);
    primaryConstructorParameterProperties.add(propertyDescriptor);
  }
  if (constructorDescriptor != null) {
    classDescriptor.setPrimaryConstructor(constructorDescriptor);
  }
}
