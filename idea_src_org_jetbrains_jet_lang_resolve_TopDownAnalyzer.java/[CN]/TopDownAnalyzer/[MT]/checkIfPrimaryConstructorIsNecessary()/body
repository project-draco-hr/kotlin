{
  for (  Map.Entry<JetClass,MutableClassDescriptor> entry : classes.entrySet()) {
    MutableClassDescriptor classDescriptor=entry.getValue();
    JetClass jetClass=entry.getKey();
    if (!jetClass.hasPrimaryConstructor()) {
      for (      PropertyDescriptor propertyDescriptor : classDescriptor.getProperties()) {
        if (trace.hasBackingField(propertyDescriptor)) {
          PsiElement nameIdentifier=jetClass.getNameIdentifier();
          if (nameIdentifier != null) {
            semanticServices.getErrorHandler().genericError(nameIdentifier.getNode(),"This class must have a primary constructor, because property " + propertyDescriptor.getName() + " has a backing field");
          }
          break;
        }
      }
    }
  }
}
