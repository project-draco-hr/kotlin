{
  for (  JetDeclaration declaration : declarations) {
    declaration.accept(new JetVisitor(){
      @Override public void visitClass(      JetClass klass){
        collectBehaviorDeclarators(classes.get(klass).getUnsubstitutedMemberScope(),klass.getDeclarations());
      }
      @Override public void visitClassObject(      JetClassObject classObject){
        processClassObject(classObject);
        collectBehaviorDeclarators(declaringScope,classObject.getObject().getDeclarations());
      }
      @Override public void visitNamespace(      JetNamespace namespace){
        collectBehaviorDeclarators(declaringScope,namespace.getDeclarations());
      }
      @Override public void visitFunction(      JetFunction function){
        processFunction(declaringScope,function);
      }
      @Override public void visitProperty(      JetProperty property){
        processProperty(declaringScope,property);
      }
      @Override public void visitDeclaration(      JetDeclaration dcl){
        throw new UnsupportedOperationException();
      }
    }
);
  }
}
