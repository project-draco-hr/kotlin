{
  Object tmp;
  int N=size;
  if (!(0 <= index && index <= N))   throw invalidIndex(index,N + 1);
switch (index) {
case 0:
    if (N == 0) {
      f0=value;
      break;
    }
  tmp=f0;
f0=value;
value=tmp;
case 1:
if (N == 1) {
f1=value;
break;
}
tmp=f1;
f1=value;
value=tmp;
case 2:
if (N == 2) {
f2=value;
break;
}
tmp=f2;
f2=value;
value=tmp;
case 3:
if (N == 3) {
f3=value;
break;
}
tmp=f3;
f3=value;
value=tmp;
case 4:
if (N == 4) {
f4=value;
break;
}
tmp=f4;
f4=value;
value=tmp;
case 5:
if (N == 5) {
f5=value;
break;
}
tmp=f5;
f5=value;
value=tmp;
index=FIELDS_STORE_SIZE;
default :
ensureCapacity(N + 1);
if (index != N) {
System.arraycopy(data,index - FIELDS_STORE_SIZE,data,index - FIELDS_STORE_SIZE + 1,N - index);
}
data[index - FIELDS_STORE_SIZE]=value;
}
size=N + 1;
}
