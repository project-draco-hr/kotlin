{
  TypeConstructor originalTypeConstructor=original.getTypeConstructor();
  if (originalSubstitutor.isEmpty()) {
    return originalTypeConstructor;
  }
  if (typeConstructor == null) {
    TypeSubstitutor substitutor=getSubstitutor();
    Collection<KtType> originalSupertypes=originalTypeConstructor.getSupertypes();
    Collection<KtType> supertypes=new ArrayList<KtType>(originalSupertypes.size());
    for (    KtType supertype : originalSupertypes) {
      supertypes.add(substitutor.substitute(supertype,Variance.INVARIANT));
    }
    typeConstructor=TypeConstructorImpl.createForClass(this,originalTypeConstructor.getAnnotations(),originalTypeConstructor.isFinal(),originalTypeConstructor.toString(),typeParameters,supertypes);
  }
  return typeConstructor;
}
