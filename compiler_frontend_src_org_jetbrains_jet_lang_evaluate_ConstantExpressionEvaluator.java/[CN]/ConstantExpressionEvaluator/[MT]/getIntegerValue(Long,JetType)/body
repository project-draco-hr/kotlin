{
  if (CompileTimeConstantResolver.noExpectedTypeOrError(expectedType)) {
    if (Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE) {
      return new IntValue(value.intValue());
    }
    return new LongValue(value);
  }
  KotlinBuiltIns builtIns=KotlinBuiltIns.getInstance();
  if (expectedType.equals(builtIns.getIntType())) {
    return new IntValue(value.intValue());
  }
 else   if (expectedType.equals(builtIns.getLongType())) {
    return new LongValue(value);
  }
 else   if (expectedType.equals(builtIns.getShortType())) {
    if (Short.MIN_VALUE <= value && value <= Short.MAX_VALUE) {
      return new ShortValue(value.shortValue());
    }
 else     if (Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE) {
      return new IntValue(value.intValue());
    }
    return new LongValue(value);
  }
 else   if (expectedType.equals(builtIns.getByteType())) {
    if (Byte.MIN_VALUE <= value && value <= Byte.MAX_VALUE) {
      return new ByteValue(value.byteValue());
    }
 else     if (Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE) {
      return new IntValue(value.intValue());
    }
    return new LongValue(value);
  }
 else   if (expectedType.equals(builtIns.getCharType())) {
    return new IntValue(value.intValue());
  }
  return null;
}
