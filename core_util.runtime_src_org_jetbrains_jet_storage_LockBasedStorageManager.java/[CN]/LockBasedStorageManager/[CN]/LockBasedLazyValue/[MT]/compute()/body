{
  Object _value=value;
  if (_value != NOT_COMPUTED && _value != COMPUTING)   return WrappedValues.unescapeThrowable(_value);
  lock.lock();
  try {
    _value=value;
    if (_value == COMPUTING) {
      Object result=recursionDetected();
      if (result != NOT_COMPUTED) {
        return WrappedValues.unescapeThrowable(result);
      }
    }
    if (_value != NOT_COMPUTED)     return WrappedValues.unescapeThrowable(_value);
    value=COMPUTING;
    try {
      T typedValue=computable.compute();
      value=typedValue;
      postCompute(typedValue);
      return typedValue;
    }
 catch (    Throwable throwable) {
      value=WrappedValues.escapeThrowable(throwable);
      throw ExceptionUtils.rethrow(throwable);
    }
  }
  finally {
    lock.unlock();
  }
}
