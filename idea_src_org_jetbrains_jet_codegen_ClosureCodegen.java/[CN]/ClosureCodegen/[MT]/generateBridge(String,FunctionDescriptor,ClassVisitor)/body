{
  final Method bridge=erasedInvokeSignature(funDescriptor);
  final Method delegate=invokeSignature(funDescriptor);
  final MethodVisitor mv=cv.visitMethod(Opcodes.ACC_PUBLIC,"invoke",bridge.getDescriptor(),state.getTypeMapper().genericSignature(funDescriptor),new String[0]);
  mv.visitCode();
  InstructionAdapter iv=new InstructionAdapter(mv);
  iv.load(0,Type.getObjectType(className));
  final JetType receiverType=funDescriptor.getReceiverType();
  int count=1;
  if (receiverType != null) {
    StackValue.local(count,JetTypeMapper.TYPE_OBJECT).put(JetTypeMapper.TYPE_OBJECT,iv);
    StackValue.onStack(JetTypeMapper.TYPE_OBJECT).upcast(state.getTypeMapper().mapType(receiverType),iv);
    count++;
  }
  final List<ValueParameterDescriptor> params=funDescriptor.getValueParameters();
  for (  ValueParameterDescriptor param : params) {
    StackValue.local(count,JetTypeMapper.TYPE_OBJECT).put(JetTypeMapper.TYPE_OBJECT,iv);
    StackValue.onStack(JetTypeMapper.TYPE_OBJECT).upcast(state.getTypeMapper().mapType(param.getOutType()),iv);
    count++;
  }
  iv.invokespecial(className,"invoke",delegate.getDescriptor());
  StackValue.onStack(delegate.getReturnType()).put(JetTypeMapper.TYPE_OBJECT,iv);
  iv.areturn(JetTypeMapper.TYPE_OBJECT);
  mv.visitMaxs(0,0);
  mv.visitEnd();
}
