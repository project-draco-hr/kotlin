{
  JsName backingFieldName=context.getNameForDescriptor(descriptor);
  if (!JsDescriptorUtils.isSimpleFinalProperty(descriptor)) {
    String backingFieldMangledName;
    if (!Visibilities.isPrivate(descriptor.getVisibility())) {
      backingFieldMangledName=getMangledName(descriptor,getKotlinBackingFieldName(backingFieldName.getIdent()));
    }
 else {
      backingFieldMangledName=getKotlinBackingFieldName(backingFieldName.getIdent());
    }
    backingFieldName=context.declarePropertyOrPropertyAccessorName(descriptor,backingFieldMangledName,false);
  }
  DeclarationDescriptor containingDescriptor=descriptor.getContainingDeclaration();
  JsExpression receiver;
  if (containingDescriptor instanceof PackageFragmentDescriptor) {
    receiver=JsLiteral.THIS;
  }
 else {
    receiver=context.getDispatchReceiver(JsDescriptorUtils.getReceiverParameterForDeclaration(containingDescriptor));
  }
  return new JsNameRef(backingFieldName,receiver);
}
