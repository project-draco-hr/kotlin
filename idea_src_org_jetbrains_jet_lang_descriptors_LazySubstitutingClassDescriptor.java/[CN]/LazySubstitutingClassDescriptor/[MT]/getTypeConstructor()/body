{
  TypeConstructor originalTypeConstructor=original.getTypeConstructor();
  if (substitutor.isEmpty()) {
    return originalTypeConstructor;
  }
  if (typeConstructor == null) {
    List<TypeParameterDescriptor> parameters=Lists.newArrayList();
    for (    TypeParameterDescriptor parameterDescriptor : originalTypeConstructor.getParameters()) {
      parameters.add(parameterDescriptor.substitute(substitutor));
    }
    Collection<JetType> supertypes=Lists.newArrayList();
    for (    JetType supertype : originalTypeConstructor.getSupertypes()) {
      supertypes.add(substitutor.substitute(supertype,Variance.INVARIANT));
    }
    typeConstructor=new TypeConstructorImpl(this,originalTypeConstructor.getAnnotations(),originalTypeConstructor.isSealed(),originalTypeConstructor.toString(),parameters,supertypes);
  }
  return typeConstructor;
}
