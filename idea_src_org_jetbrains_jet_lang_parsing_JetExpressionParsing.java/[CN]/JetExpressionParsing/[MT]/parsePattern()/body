{
  PsiBuilder.Marker pattern=mark();
  myJetParsing.parseAttributeList();
  if (at(NAMESPACE_KEYWORD) || at(IDENTIFIER)) {
    myJetParsing.parseUserTypeOrQualifiedName();
    if (!myBuilder.newlineBeforeCurrentToken() && at(LPAR)) {
      PsiBuilder.Marker list=mark();
      parseTuplePattern(DECOMPOSER_ARGUMENT);
      list.done(DECOMPOSER_ARGUMENT_LIST);
      pattern.done(DECOMPOSER_PATTERN);
    }
 else {
      pattern.done(TYPE_PATTERN);
    }
  }
 else   if (at(LPAR)) {
    parseTuplePattern(TUPLE_PATTERN_ENTRY);
    pattern.done(TUPLE_PATTERN);
  }
 else   if (at(LBRACE) || at(CAPITALIZED_THIS_KEYWORD)) {
    myJetParsing.parseTypeRef();
    pattern.done(TYPE_PATTERN);
  }
 else   if (at(QUEST)) {
    parseBindingPattern();
    pattern.done(BINDING_PATTERN);
  }
 else   if (at(EQ)) {
    advance();
    parseExpression();
    pattern.done(EXPRESSION_PATTERN);
  }
 else   if (parseLiteralConstant()) {
    pattern.done(EXPRESSION_PATTERN);
  }
 else {
    errorUntil("Pattern expected",TokenSet.create(RBRACE,DOUBLE_ARROW));
    pattern.drop();
  }
}
