{
  if (at(LPAR)) {
    parseParenthesizedExpressionOrTuple();
  }
 else   if (at(NAMESPACE_KEYWORD)) {
    parseOneTokenExpression(ROOT_NAMESPACE);
  }
 else   if (at(THIS_KEYWORD)) {
    parseThisExpression();
  }
 else   if (at(TYPEOF_KEYWORD)) {
    parseTypeOf();
  }
 else   if (at(NEW_KEYWORD)) {
    parseNew();
  }
 else   if (at(OBJECT_KEYWORD)) {
    parseObjectLiteral();
  }
 else   if (at(THROW_KEYWORD)) {
    parseThrow();
  }
 else   if (at(RETURN_KEYWORD)) {
    parseReturn();
  }
 else   if (at(CONTINUE_KEYWORD)) {
    parseJump(CONTINUE);
  }
 else   if (at(BREAK_KEYWORD)) {
    parseJump(BREAK);
  }
 else   if (at(IF_KEYWORD)) {
    parseIf();
  }
 else   if (at(WHEN_KEYWORD)) {
    parseWhen();
  }
 else   if (at(TRY_KEYWORD)) {
    parseTry();
  }
 else   if (at(FOR_KEYWORD)) {
    parseFor();
  }
 else   if (at(WHILE_KEYWORD)) {
    parseWhile();
  }
 else   if (at(DO_KEYWORD)) {
    parseDoWhile();
  }
 else   if (atSet(CLASS_KEYWORD,EXTENSION_KEYWORD,FUN_KEYWORD,VAL_KEYWORD,VAR_KEYWORD,TYPE_KEYWORD)) {
    parseLocalDeclaration();
  }
 else   if (at(FIELD_IDENTIFIER)) {
    parseOneTokenExpression(REFERENCE_EXPRESSION);
  }
 else   if (at(IDENTIFIER)) {
    if (JetParsing.MODIFIER_KEYWORD_MAP.containsKey(myBuilder.getTokenText())) {
      if (!parseLocalDeclaration()) {
        parseSimpleNameExpression();
      }
    }
 else {
      parseSimpleNameExpression();
    }
  }
 else   if (at(LBRACE)) {
    parseFunctionLiteral();
  }
 else   if (!parseLiteralConstant()) {
    errorAndAdvance("Expecting an expression");
  }
}
