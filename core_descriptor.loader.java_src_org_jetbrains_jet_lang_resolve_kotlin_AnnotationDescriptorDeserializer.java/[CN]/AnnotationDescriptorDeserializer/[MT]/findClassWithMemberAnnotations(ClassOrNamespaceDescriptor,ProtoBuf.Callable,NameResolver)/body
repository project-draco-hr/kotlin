{
  if (container instanceof NamespaceDescriptor) {
    Name name=loadSrcClassName(proto,nameResolver);
    if (name != null) {
      return kotlinClassFinder.find(getSrcClassFqName((NamespaceDescriptor)container,name));
    }
    return null;
  }
 else   if (container instanceof ClassDescriptor && ((ClassDescriptor)container).getKind() == ClassKind.CLASS_OBJECT) {
    if (isStaticFieldInOuter(proto)) {
      return findKotlinClassByDescriptor((ClassOrNamespaceDescriptor)container.getContainingDeclaration());
    }
  }
  return findKotlinClassByDescriptor(container);
}
