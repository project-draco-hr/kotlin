{
  File kotlinSrc=new File(expectedFileName);
  File librarySrc=new File(expectedFileName.replaceFirst("\\.kt$",""));
  File expectedFile=new File(expectedFileName.replaceFirst("\\.kt$",".txt"));
  File libraryOut=new File(tmpdir,"libraryOut");
  compileKotlinWithJava(Arrays.asList(librarySrc.listFiles(JetTestCaseBuilder.filterByExtension("java"))),Arrays.asList(librarySrc.listFiles(JetTestCaseBuilder.filterByExtension("kt"))),libraryOut,getTestRootDisposable());
  JetCoreEnvironment environment=JetCoreEnvironment.createForTests(getTestRootDisposable(),compilerConfigurationForTests(ConfigurationKind.JDK_ONLY,TestJdkKind.MOCK_JDK,getAnnotationsJar(),libraryOut));
  JetFile jetFile=JetTestUtils.createFile(kotlinSrc.getPath(),FileUtil.loadFile(kotlinSrc,true),environment.getProject());
  AnalyzeExhaust exhaust=JvmResolveUtil.analyzeFilesWithJavaIntegration(environment.getProject(),Collections.singleton(jetFile),Predicates.<PsiFile>alwaysTrue());
  PackageViewDescriptor packageView=exhaust.getModuleDescriptor().getPackage(TEST_PACKAGE_FQNAME);
  assertNotNull(packageView);
  validateAndCompareDescriptorWithFile(packageView,DONT_INCLUDE_METHODS_OF_OBJECT,expectedFile);
}
