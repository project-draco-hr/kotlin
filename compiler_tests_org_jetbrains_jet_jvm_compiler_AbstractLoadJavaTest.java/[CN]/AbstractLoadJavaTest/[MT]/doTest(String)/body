{
  Assert.assertTrue("A java file expected: " + javaFileName,javaFileName.endsWith(".java"));
  File javaFile=new File(javaFileName);
  File ktFile=new File(javaFile.getPath().replaceFirst("\\.java$",".kt"));
  File txtFile=new File(javaFile.getPath().replaceFirst("\\.java$",".txt"));
  NamespaceDescriptor nsa=analyzeKotlinAndLoadTestNamespace(ktFile,myTestRootDisposable,ConfigurationKind.JDK_AND_ANNOTATIONS);
  Pair<NamespaceDescriptor,BindingContext> nsbAndBindingContext=compileJavaAndLoadTestNamespaceAndBindingContextFromBinary(Arrays.asList(javaFile,ExpectedLoadErrorsUtil.ANNOTATION_SOURCE_FILE),tmpdir,myTestRootDisposable,ConfigurationKind.JDK_AND_ANNOTATIONS);
  NamespaceDescriptor nsb=nsbAndBindingContext.first;
  boolean fail=false;
  try {
    ExpectedLoadErrorsUtil.checkForLoadErrors(nsb,nsbAndBindingContext.second);
  }
 catch (  ComparisonFailure e) {
    System.err.println("Expected: " + e.getExpected());
    System.err.println("Actual  : " + e.getActual());
    e.printStackTrace();
    fail=true;
  }
catch (  AssertionError e) {
    e.printStackTrace();
    fail=true;
  }
  compareNamespaces(nsa,nsb,DONT_INCLUDE_METHODS_OF_OBJECT,txtFile);
  if (fail) {
    fail("See error above");
  }
}
