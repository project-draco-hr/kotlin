{
  if (node == null) {
    return;
  }
  if (node.hasModifier(UastModifier.ABSTRACT)) {
    return;
  }
  int minSdk=Math.max(context.getLintContext().getProject().getMinSdk(),getTargetApi(node));
  if (minSdk >= CONCRETE_IN) {
    return;
  }
  String[] methodNames={ON_NOTIFICATION_POSTED,ON_NOTIFICATION_REMOVED};
  for (  String methodName : methodNames) {
    boolean found=false;
    List<UFunction> allFunctions=UastUtils.getAllFunctions(node,context);
    for (    UFunction method : allFunctions) {
      if (!method.matchesName(methodName)) {
        continue;
      }
      UClass containingClass=UastUtils.getContainingClassOrEmpty(method);
      if (containingClass.matchesFqName(NOTIFICATION_LISTENER_SERVICE_FQN)) {
        continue;
      }
      if (method.hasModifier(UastModifier.ABSTRACT)) {
        continue;
      }
      if (method.getValueParameterCount() != 1) {
        continue;
      }
      if (!method.getValueParameters().get(0).getType().matchesFqName(STATUS_BAR_NOTIFICATION_FQN)) {
        continue;
      }
      found=true;
      break;
    }
    if (!found) {
      String message=String.format("Must override `%1$s.%2$s(%3$s)`: Method was abstract until %4$d, and your `minSdkVersion` is %5$d",NOTIFICATION_LISTENER_SERVICE_FQN,methodName,STATUS_BAR_NOTIFICATION_FQN,CONCRETE_IN,minSdk);
      context.report(ISSUE,node,context.getLocation(node.getNameElement()),message);
      break;
    }
  }
}
