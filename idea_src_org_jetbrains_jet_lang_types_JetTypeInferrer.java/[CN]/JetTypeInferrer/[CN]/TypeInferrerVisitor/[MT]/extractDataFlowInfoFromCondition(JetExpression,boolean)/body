{
  final DataFlowInfo[] result=new DataFlowInfo[]{dataFlowInfo};
  condition.accept(new JetVisitor(){
    @Override public void visitBinaryExpression(    JetBinaryExpression expression){
      IElementType operationToken=expression.getOperationToken();
      if (operationToken != JetTokens.EQEQ && operationToken != JetTokens.EXCLEQ && operationToken != JetTokens.EQEQEQ && operationToken != JetTokens.EXCLEQEQEQ) {
        return;
      }
      JetExpression left=expression.getLeft();
      JetExpression right=expression.getRight();
      if (left instanceof JetConstantExpression) {
        JetExpression tmp=left;
        left=right;
        right=tmp;
      }
      if (!(left instanceof JetSimpleNameExpression)) {
        return;
      }
      JetSimpleNameExpression nameExpression=(JetSimpleNameExpression)left;
      DeclarationDescriptor declarationDescriptor=trace.getBindingContext().resolveReferenceExpression(nameExpression);
      if (!(declarationDescriptor instanceof VariableDescriptor)) {
        return;
      }
      VariableDescriptor variableDescriptor=(VariableDescriptor)declarationDescriptor;
      if (!(right instanceof JetConstantExpression)) {
        return;
      }
      JetConstantExpression constantExpression=(JetConstantExpression)right;
      if (constantExpression.getNode().getElementType() != JetNodeTypes.NULL) {
        return;
      }
      if (operationToken == JetTokens.EQEQ || operationToken == JetTokens.EQEQEQ) {
        result[0]=dataFlowInfo.equalsToNull(variableDescriptor,!conditionValue);
      }
 else       if (operationToken == JetTokens.EXCLEQ || operationToken == JetTokens.EXCLEQEQEQ) {
        result[0]=dataFlowInfo.equalsToNull(variableDescriptor,conditionValue);
      }
    }
  }
);
  return result[0];
}
