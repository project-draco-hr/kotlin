{
  TypeInferenceContext context=contextWithExpectedType.replaceExpectedType(NO_EXPECTED_TYPE);
  JetExpression arrayExpression=expression.getArrayExpression();
  JetType receiverType=getType(context.scope,arrayExpression,false,context);
  List<JetExpression> indexExpressions=expression.getIndexExpressions();
  List<JetType> argumentTypes=getTypes(context.scope,indexExpressions,context);
  if (argumentTypes == null)   return null;
  if (receiverType != null) {
    FunctionDescriptor functionDescriptor=context.services.lookupFunction(context.scope,expression,"get",receiverType,argumentTypes,true);
    if (functionDescriptor != null) {
      return context.services.checkType(functionDescriptor.getReturnType(),expression,contextWithExpectedType);
    }
  }
  return null;
}
