{
  TypeInferenceContext context=contextWithExpectedType.replaceExpectedType(NO_EXPECTED_TYPE);
  JetExpression arrayExpression=expression.getArrayExpression();
  JetType receiverType=getType(context.scope,arrayExpression,false,context);
  if (receiverType != null) {
    FunctionDescriptor functionDescriptor=context.services.callResolver.resolveCallWithGivenName(context.scope,CallMaker.makeCall(expression,expression.getIndexExpressions()),expression,"get",arrayExpression,context.expectedType);
    if (functionDescriptor != null) {
      return context.services.checkType(functionDescriptor.getReturnType(),expression,contextWithExpectedType);
    }
  }
  return null;
}
