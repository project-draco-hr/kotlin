{
  TopDownAnalyzer topDownAnalyzer=new TopDownAnalyzer(semanticServices,new BindingTraceAdapter(trace){
    @Override public void recordDeclarationResolution(    @NotNull PsiElement declaration,    @NotNull DeclarationDescriptor descriptor){
      if (declaration == expression.getObjectDeclaration()) {
        JetType defaultType=((ClassDescriptor)descriptor).getDefaultType();
        result=defaultType;
        if (!trace.isProcessed(expression)) {
          recordExpressionType(expression,defaultType);
          markAsProcessed(expression);
        }
      }
      super.recordDeclarationResolution(declaration,descriptor);
    }
  }
);
  topDownAnalyzer.processObject(scope,scope.getContainingDeclaration(),expression.getObjectDeclaration());
}
