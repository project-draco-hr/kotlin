{
  JetSimpleNameExpression operationSign=expression.getOperationSign();
  String name=unaryOperationNames.get(operationSign.getReferencedNameElementType());
  if (name == null) {
    semanticServices.getErrorHandler().structuralError(operationSign.getNode(),"Unknown unary operation");
  }
 else {
    JetType type=getType(scope,expression.getBaseExpression(),false);
    if (type != null) {
      FunctionDescriptor functionDescriptor=lookupFunction(scope,expression.getOperationSign(),name,type,Collections.<JetType>emptyList());
      if (functionDescriptor != null) {
        result=functionDescriptor.getUnsubstitutedReturnType();
      }
    }
  }
}
