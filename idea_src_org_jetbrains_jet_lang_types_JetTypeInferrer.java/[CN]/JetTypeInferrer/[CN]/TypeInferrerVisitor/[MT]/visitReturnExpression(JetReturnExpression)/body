{
  if (context.expectedReturnType == FORBIDDEN) {
    context.trace.getErrorHandler().genericError(expression.getNode(),"'return' is not allowed here");
    return;
  }
  JetExpression returnedExpression=expression.getReturnedExpression();
  JetType returnedType=JetStandardClasses.getUnitType();
  if (returnedExpression != null) {
    returnedType=getType(context.scope,returnedExpression,false);
  }
 else {
    if (context.expectedReturnType != null && !JetStandardClasses.isUnit(context.expectedReturnType)) {
      context.trace.getErrorHandler().genericError(expression.getNode(),"This function must return a value of type " + context.expectedReturnType);
    }
  }
  if (context.expectedReturnType != null && returnedType != null) {
    if (!semanticServices.getTypeChecker().isSubtypeOf(returnedType,context.expectedReturnType)) {
      JetType enrichedType=enrichOutType(returnedExpression,returnedType);
      if (!semanticServices.getTypeChecker().isSubtypeOf(enrichedType,context.expectedReturnType)) {
        context.trace.getErrorHandler().typeMismatch(returnedExpression == null ? expression : returnedExpression,context.expectedReturnType,returnedType);
      }
    }
  }
  result=JetStandardClasses.getNothingType();
}
