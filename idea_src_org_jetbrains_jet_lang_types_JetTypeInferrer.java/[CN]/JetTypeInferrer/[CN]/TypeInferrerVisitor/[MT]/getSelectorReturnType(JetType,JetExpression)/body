{
  JetScope compositeScope=new ScopeWithReceiver(scope,receiverType);
  if (selectorExpression instanceof JetCallExpression) {
    JetCallExpression callExpression=(JetCallExpression)selectorExpression;
    OverloadDomain overloadDomain=getOverloadDomain(compositeScope,callExpression.getCalleeExpression(),callExpression.getValueArgumentList());
    return resolveOverloads(scope,callExpression,overloadDomain);
  }
 else   if (selectorExpression instanceof JetSimpleNameExpression) {
    return getType(compositeScope,selectorExpression,false);
  }
 else   if (selectorExpression != null) {
    semanticServices.getErrorHandler().genericError(selectorExpression.getNode(),"Unsupported selector expression type: " + selectorExpression);
  }
  return receiverType;
}
