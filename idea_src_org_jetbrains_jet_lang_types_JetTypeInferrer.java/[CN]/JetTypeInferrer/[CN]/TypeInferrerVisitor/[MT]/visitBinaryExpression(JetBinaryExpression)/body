{
  JetSimpleNameExpression operationSign=expression.getOperationReference();
  IElementType operationType=operationSign.getReferencedNameElementType();
  if (operationType == JetTokens.IDENTIFIER) {
    result=getTypeForBinaryCall(expression,operationSign.getReferencedName(),scope);
  }
 else   if (binaryOperationNames.containsKey(operationType)) {
    result=getTypeForBinaryCall(expression,binaryOperationNames.get(operationType),scope);
  }
 else   if (operationType == JetTokens.EQ) {
    JetExpression left=expression.getLeft();
    JetExpression deparenthesized=deparenthesize(left);
    if (deparenthesized instanceof JetArrayAccessExpression) {
      JetArrayAccessExpression arrayAccessExpression=(JetArrayAccessExpression)deparenthesized;
      resolveArrayAccessToLValue(arrayAccessExpression,expression.getRight(),expression.getOperationReference());
    }
 else {
      getType(scope,expression.getRight(),false);
    }
    result=null;
  }
 else   if (comparisonOperations.contains(operationType)) {
    JetExpression left=expression.getLeft();
    JetExpression deparenthesized=deparenthesize(left);
    if (deparenthesized instanceof JetArrayAccessExpression) {
      JetArrayAccessExpression arrayAccessExpression=(JetArrayAccessExpression)deparenthesized;
      resolveArrayAccessToLValue(arrayAccessExpression,expression.getRight(),expression.getOperationReference());
    }
 else {
      getType(scope,expression.getRight(),false);
    }
    result=null;
  }
 else {
    semanticServices.getErrorHandler().structuralError(operationSign.getNode(),"Unknown operation");
  }
}
