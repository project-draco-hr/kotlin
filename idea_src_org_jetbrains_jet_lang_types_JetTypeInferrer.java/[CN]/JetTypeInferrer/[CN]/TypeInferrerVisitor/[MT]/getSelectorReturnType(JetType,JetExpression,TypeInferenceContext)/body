{
  if (selectorExpression instanceof JetCallExpression) {
    return context.services.callResolver.resolveCall(context.trace,context.scope,receiverType,(JetCallExpression)selectorExpression,context.expectedType);
  }
 else   if (selectorExpression instanceof JetSimpleNameExpression) {
    JetSimpleNameExpression nameExpression=(JetSimpleNameExpression)selectorExpression;
    TemporaryBindingTrace temporaryTrace=TemporaryBindingTrace.create(context.trace);
    VariableDescriptor variableDescriptor=context.services.callResolver.resolveSimpleProperty(temporaryTrace,context.scope,receiverType,nameExpression,context.expectedType);
    if (variableDescriptor != null) {
      temporaryTrace.commit();
      return context.services.checkEnrichedType(variableDescriptor.getOutType(),nameExpression,context);
    }
    TypeInferenceContext newContext=receiverType == null ? context : context.replaceScope(receiverType.getMemberScope());
    JetType jetType=lookupNamespaceOrClassObject(nameExpression,nameExpression.getReferencedName(),newContext);
    if (jetType == null) {
      context.trace.getErrorHandler().unresolvedReference(nameExpression);
    }
    return context.services.checkEnrichedType(jetType,nameExpression,context);
  }
 else   if (selectorExpression instanceof JetQualifiedExpression) {
    JetQualifiedExpression qualifiedExpression=(JetQualifiedExpression)selectorExpression;
    JetType newReceiverType=getSelectorReturnType(receiverType,qualifiedExpression.getReceiverExpression(),context.replaceExpectedType(NO_EXPECTED_TYPE));
    JetExpression newSelectorExpression=qualifiedExpression.getSelectorExpression();
    if (newReceiverType != null && newSelectorExpression != null) {
      return getSelectorReturnType(newReceiverType,newSelectorExpression,context);
    }
  }
 else {
    context.trace.getErrorHandler().genericError(selectorExpression.getNode(),"Unsupported selector element type: " + selectorExpression);
  }
  return null;
}
