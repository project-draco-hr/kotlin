{
  JetExpression tryBlock=expression.getTryBlock();
  List<JetCatchClause> catchClauses=expression.getCatchClauses();
  JetFinallySection finallyBlock=expression.getFinallyBlock();
  List<JetType> types=new ArrayList<JetType>();
  if (finallyBlock == null) {
    for (    JetCatchClause catchClause : catchClauses) {
      types.add(getType(scope,catchClause.getCatchBody(),true));
    }
  }
 else {
    types.add(getType(scope,finallyBlock.getFinalExpression(),true));
  }
  types.add(getType(scope,tryBlock,true));
  result=semanticServices.getTypeChecker().commonSupertype(types);
}
