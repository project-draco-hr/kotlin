{
  JetExpression condition=expression.getCondition();
  if (condition != null) {
    JetType conditionType=getType(scope,condition,false);
    if (conditionType != null && !isBoolean(conditionType)) {
      semanticServices.getErrorHandler().structuralError(condition.getNode(),"Condition must be of type Boolean, but was of type " + conditionType);
    }
  }
  JetExpression elseBranch=expression.getElse();
  if (elseBranch == null) {
    result=JetStandardClasses.getUnitType();
  }
 else {
    JetType thenType=getType(scope,expression.getThen(),true);
    JetType elseType=getType(scope,elseBranch,true);
    result=semanticServices.getTypeChecker().commonSupertype(Arrays.asList(thenType,elseType));
  }
}
