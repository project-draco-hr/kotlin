{
  JetTypeReference receiverTypeRef=property.getReceiverTypeRef();
  if (receiverTypeRef != null) {
    trace.getErrorHandler().genericError(receiverTypeRef.getNode(),"Local receiver-properties are not allowed");
  }
  JetPropertyAccessor getter=property.getGetter();
  if (getter != null) {
    trace.getErrorHandler().genericError(getter.getNode(),"Local variables are not allowed to have getters");
  }
  JetPropertyAccessor setter=property.getSetter();
  if (setter != null) {
    trace.getErrorHandler().genericError(setter.getNode(),"Local variables are not allowed to have setters");
  }
  VariableDescriptor propertyDescriptor=classDescriptorResolver.resolveLocalVariableDescriptor(scope.getContainingDeclaration(),scope,property);
  JetExpression initializer=property.getInitializer();
  if (property.getPropertyTypeRef() != null && initializer != null) {
    JetType initializerType=getType(scope,initializer,false);
    JetType outType=propertyDescriptor.getOutType();
    if (outType != null && initializerType != null && !semanticServices.getTypeChecker().isConvertibleTo(initializerType,outType)) {
      trace.getErrorHandler().typeMismatch(initializer,outType,initializerType);
    }
  }
  scope.addVariableDescriptor(propertyDescriptor);
}
