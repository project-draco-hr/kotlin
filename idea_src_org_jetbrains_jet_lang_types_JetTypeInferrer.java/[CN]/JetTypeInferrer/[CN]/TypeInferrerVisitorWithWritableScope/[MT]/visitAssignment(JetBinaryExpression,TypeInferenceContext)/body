{
  JetExpression left=expression.getLeft();
  JetExpression deparenthesized=JetPsiUtil.deparenthesize(left);
  JetExpression right=expression.getRight();
  if (deparenthesized instanceof JetArrayAccessExpression) {
    JetArrayAccessExpression arrayAccessExpression=(JetArrayAccessExpression)deparenthesized;
    return resolveArrayAccessToLValue(arrayAccessExpression,right,expression.getOperationReference(),context);
  }
  JetType leftType=getType(scope,left,false,context.replaceExpectedType(NO_EXPECTED_TYPE));
  if (right != null) {
    JetType rightType=getType(scope,right,false,context.replaceExpectedType(leftType));
  }
  return null;
}
