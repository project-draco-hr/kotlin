{
  JetExpression left=expression.getLeft();
  JetExpression deparenthesized=JetPsiUtil.deparenthesize(left);
  JetExpression right=expression.getRight();
  if (deparenthesized instanceof JetArrayAccessExpression) {
    JetArrayAccessExpression arrayAccessExpression=(JetArrayAccessExpression)deparenthesized;
    return resolveArrayAccessToLValue(arrayAccessExpression,right,expression.getOperationReference(),context);
  }
  JetType leftType=getType(scope,left,false,context);
  if (right != null) {
    JetType rightType=getType(scope,right,false,context);
    if (rightType != null && leftType != null && !semanticServices.getTypeChecker().isConvertibleTo(rightType,leftType)) {
      context.trace.getErrorHandler().typeMismatch(right,leftType,rightType);
    }
  }
  return null;
}
