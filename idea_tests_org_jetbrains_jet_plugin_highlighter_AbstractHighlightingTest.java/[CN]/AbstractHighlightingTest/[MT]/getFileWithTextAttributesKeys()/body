{
  List<HighlightInfo> highlights=DaemonCodeAnalyzerImpl.getHighlights(myFixture.getDocument(myFixture.getFile()),null,myFixture.getProject());
  List<HighlightTagPoint> pointsForHighlightInfos=Lists.newArrayList();
  for (  HighlightInfo highlight : highlights) {
    pointsForHighlightInfos.add(new HighlightTagPoint(highlight.startOffset,true,highlight));
    pointsForHighlightInfos.add(new HighlightTagPoint(highlight.endOffset,false,highlight));
  }
  StringBuilder builder=new StringBuilder(myFixture.getFile().getText());
  List<HighlightTagPoint> sortedTagPoints=Ordering.natural().reverse().sortedCopy(pointsForHighlightInfos);
  for (  HighlightTagPoint point : sortedTagPoints) {
    String tagName;
    if (point.highlightInfo.getSeverity().equals(HighlightSeverity.INFORMATION)) {
      tagName="info";
    }
 else {
      tagName=point.highlightInfo.getSeverity().toString().toLowerCase();
    }
    String tagText;
    if (point.isStart) {
      if (point.highlightInfo.getDescription() != null) {
        tagText=String.format("<%s textAttributesKey=\"%s\" descr=%s>",tagName,point.highlightInfo.forcedTextAttributesKey,point.highlightInfo.getDescription());
      }
 else {
        tagText=String.format("<%s textAttributesKey=\"%s\">",tagName,point.highlightInfo.forcedTextAttributesKey);
      }
    }
 else {
      tagText=String.format("</%s>",tagName);
    }
    builder.insert(point.offset,tagText);
  }
  return builder.toString();
}
