{
  if (!rootFile.isDirectory()) {
    return Collections.<TestMethodModel>singletonList(new SimpleTestMethodModel(rootFile,rootFile,doTestMethodName));
  }
  List<TestMethodModel> result=Lists.newArrayList();
  result.add(new TestMethodModel(){
    @Override public String getName(){
      return "testAllFilesPresentIn" + testClassName;
    }
    @Override public void generateBody(    @NotNull Printer p,    @NotNull String generatorClassFqName){
      p.println("JetTestUtils.assertAllTestsPresentByMetadata(" + "this.getClass(), " + "\"",generatorClassFqName,"\", " + "new File(\"",JetTestUtils.getFilePath(rootFile) + "\"), \"",extension,"\", ",false,");");
    }
    @Override public String getDataString(){
      return null;
    }
  }
);
  File[] listFiles=rootFile.listFiles();
  if (listFiles != null) {
    for (    File file : listFiles) {
      if (!file.isDirectory() && file.getName().endsWith("." + extension)) {
        result.add(new SimpleTestMethodModel(rootFile,file,doTestMethodName));
      }
    }
  }
  return result;
}
