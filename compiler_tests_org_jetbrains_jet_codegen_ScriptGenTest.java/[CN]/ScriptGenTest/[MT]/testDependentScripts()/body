{
  JetScriptDefinitionProvider.getInstance(myEnvironment.getProject()).addScriptDefinition(FIB_SCRIPT_DEFINITION);
  loadFiles("script/fibwp.lang.kt","script/fibwprunner.ktscript");
  final Class aClass=generateClass("Fibwprunner");
  try {
    Constructor constructor=aClass.getConstructor();
    Field result=aClass.getDeclaredField("result");
    result.setAccessible(true);
    Method resultMethod=aClass.getDeclaredMethod("getResult");
    assertTrue((resultMethod.getModifiers() & Opcodes.ACC_FINAL) != 0);
    assertTrue((resultMethod.getModifiers() & Opcodes.ACC_PUBLIC) != 0);
    Field rv=aClass.getField("rv");
    assertTrue((result.getModifiers() & Opcodes.ACC_PRIVATE) != 0);
    Object script=constructor.newInstance();
    assertEquals(12,rv.get(script));
    assertEquals(8,result.get(script));
    assertEquals(8,resultMethod.invoke(script));
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
