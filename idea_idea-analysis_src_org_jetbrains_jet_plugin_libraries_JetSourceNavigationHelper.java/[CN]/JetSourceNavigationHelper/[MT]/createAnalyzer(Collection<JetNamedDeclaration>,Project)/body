{
  GlobalContextImpl globalContext=ContextPackage.GlobalContext();
  FileBasedDeclarationProviderFactory providerFactory=new FileBasedDeclarationProviderFactory(globalContext.getStorageManager(),getContainingFiles(candidates));
  ModuleDescriptorImpl moduleDescriptor=new ModuleDescriptorImpl(Name.special("<library module>"),AnalyzerFacadeForJVM.DEFAULT_IMPORTS,PlatformToKotlinClassMap.EMPTY);
  moduleDescriptor.addDependencyOnModule(moduleDescriptor);
  moduleDescriptor.addDependencyOnModule(KotlinBuiltIns.getInstance().getBuiltInsModule());
  moduleDescriptor.seal();
  ResolveSession resolveSession=new InjectorForLazyResolve(project,globalContext,moduleDescriptor,providerFactory,new BindingTraceContext()).getResolveSession();
  moduleDescriptor.initialize(resolveSession.getPackageFragmentProvider());
  return resolveSession;
}
