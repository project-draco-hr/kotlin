{
  String outputFileName=targetSourceRoot + "/" + injectorPackageName.replace(".","/")+ "/"+ injectorClassName+ ".java";
  File file=new File(outputFileName);
  boolean useTmpfile=!SystemInfo.isWindows;
  File tmpfile=useTmpfile ? new File(outputFileName + ".tmp") : file;
  File parentFile=file.getParentFile();
  if (!parentFile.exists()) {
    if (parentFile.mkdirs()) {
      System.out.println("Directory created: " + parentFile.getAbsolutePath());
    }
 else {
      throw new IllegalStateException("Cannot create directory: " + parentFile);
    }
  }
  StringBuilder out=new StringBuilder();
  Printer p=new Printer(out);
  fields.addAll(dependencies.satisfyDependencies());
  String copyright="injector-generator/copyright.txt";
  p.println(FileUtil.loadFile(new File(copyright)));
  p.println("package " + injectorPackageName + ";");
  p.println();
  generateImports(p,injectorPackageName);
  p.println();
  p.println("/* This file is generated by " + generatorClass.getName() + ". DO NOT EDIT! */");
  p.print("public class " + injectorClassName);
  generateImplementsList(p);
  p.println(" {");
  p.pushIndent();
  p.println();
  generateFields(p);
  p.println();
  generateConstructor(injectorClassName,p);
  p.println();
  generateDestroy(injectorClassName,p);
  p.println();
  generateGetters(p);
  if (!factoryMethods.isEmpty()) {
    p.println();
    generateFactoryMethods(p);
  }
  p.popIndent();
  p.println("}");
  FileUtil.writeToFile(tmpfile,out.toString());
  System.out.println("File written: " + tmpfile.getAbsolutePath());
  if (useTmpfile) {
    if (!tmpfile.renameTo(file)) {
      throw new RuntimeException("failed to rename " + tmpfile + " to "+ file);
    }
    System.out.println("Renamed " + tmpfile + " to "+ file);
  }
  System.out.println();
}
