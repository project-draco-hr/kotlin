{
  Class<?> type=field.getType();
  Constructor<?>[] constructors=type.getConstructors();
  if (constructors.length == 0 || !Modifier.isPublic(constructors[0].getModifiers())) {
    throw new IllegalArgumentException("No constructor: " + type.getName() + " needed for "+ neededFor);
  }
  Constructor<?> constructor=constructors[0];
  ConstructorCall dependency=new ConstructorCall(constructor);
  Class<?>[] parameterTypes=constructor.getParameterTypes();
  for (  Class<?> parameterType : parameterTypes) {
    Field fieldForParameter=findDependencyOfType(parameterType,"constructor: " + constructor + ", parameter: "+ parameterType,field);
    dependency.getConstructorArguments().add(fieldForParameter);
  }
  field.setInitialization(dependency);
}
