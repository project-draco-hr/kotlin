{
  return new FrameworkSupportInModuleConfigurable(){
    public JSLibraryStdDescription description;
    @Nullable @Override public CustomLibraryDescription createLibraryDescription(){
      description=new JSLibraryStdDescription(model.getProject());
      return description;
    }
    @Nullable @Override public JComponent createComponent(){
      return null;
    }
    @Override public boolean isOnlyLibraryAdded(){
      return true;
    }
    @Override public void addSupport(    @NotNull Module module,    @NotNull ModifiableRootModel rootModel,    @NotNull ModifiableModelsProvider modifiableModelsProvider){
      FrameworksCompatibilityUtils.suggestRemoveIncompatibleFramework(rootModel,JavaRuntimeLibraryDescription.SUITABLE_LIBRARY_KINDS,JavaFrameworkType.getInstance());
      FrameworksCompatibilityUtils.suggestRemoveOldJsLibrary(rootModel);
      description.finishLibConfiguration(module,rootModel);
    }
  }
;
}
