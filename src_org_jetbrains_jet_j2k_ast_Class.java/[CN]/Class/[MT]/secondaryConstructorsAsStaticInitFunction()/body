{
  final LinkedList<Function> result=new LinkedList<Function>();
  for (  Member m : myMembers)   if (m.getKind() == Kind.CONSTRUCTOR && !((Constructor)m).isPrimary()) {
    Function f=(Function)m;
    Set<String> modifiers=new HashSet<String>(m.myModifiers);
    modifiers.add(Modifier.STATIC);
    final List<Statement> statements=f.getBlock().getStatements();
    statements.add(new ReturnStatement(new IdentifierImpl("__")));
    final Block block=new Block(statements);
    final List<Element> typeParameters=new LinkedList<Element>();
    if (f.getTypeParameters().size() == 0)     typeParameters.addAll(myTypeParameters);
 else {
      typeParameters.addAll(myTypeParameters);
      typeParameters.addAll(f.getTypeParameters());
    }
    result.add(new Function(new IdentifierImpl("init"),modifiers,new ClassType(myName),typeParameters,f.getParams(),block));
  }
  return result;
}
