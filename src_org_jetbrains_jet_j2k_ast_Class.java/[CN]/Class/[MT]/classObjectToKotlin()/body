{
  final List<Member> staticMethods=new LinkedList<Member>(secondaryConstructorsAsStaticInitFunction());
  staticMethods.addAll(getStatic(methodsExceptConstructors()));
  final List<Member> staticFields=getStatic(myFields);
  final List<Member> staticInnerClasses=getStatic(myInnerClasses);
  if (staticFields.size() + staticMethods.size() + staticInnerClasses.size() > 0) {
    return "class" + SPACE + "object"+ SPACE+ "{"+ N+ AstUtil.joinNodes(staticFields,N)+ N+ AstUtil.joinNodes(staticMethods,N)+ N+ AstUtil.joinNodes(staticInnerClasses,N)+ N+ "}";
  }
  return EMPTY;
}
