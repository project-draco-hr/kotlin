{
  TemporaryBindingTrace temporaryBindingTrace=new TemporaryBindingTrace(trace,"Trace for resolve annotation type");
  OverloadResolutionResults<FunctionDescriptor> results=resolveAnnotationCall(entryElement,scope,temporaryBindingTrace);
  if (results.isSingleResult()) {
    FunctionDescriptor descriptor=results.getResultingDescriptor();
    if (!ErrorUtils.isError(descriptor)) {
      if (descriptor instanceof ConstructorDescriptor) {
        ConstructorDescriptor constructor=(ConstructorDescriptor)descriptor;
        ClassDescriptor classDescriptor=constructor.getContainingDeclaration();
        if (classDescriptor.getKind() != ClassKind.ANNOTATION_CLASS) {
          trace.report(Errors.NOT_AN_ANNOTATION_CLASS.on(entryElement,classDescriptor.getName().asString()));
        }
      }
 else {
        trace.report(Errors.NOT_AN_ANNOTATION_CLASS.on(entryElement,descriptor.getName().asString()));
      }
    }
    JetType annotationType=results.getResultingDescriptor().getReturnType();
    annotationDescriptor.setAnnotationType(annotationType);
  }
 else {
    JetConstructorCalleeExpression calleeExpression=entryElement.getCalleeExpression();
    annotationDescriptor.setAnnotationType(ErrorUtils.createErrorType("Unresolved annotation type: " + (calleeExpression == null ? "null" : calleeExpression.getText())));
  }
}
