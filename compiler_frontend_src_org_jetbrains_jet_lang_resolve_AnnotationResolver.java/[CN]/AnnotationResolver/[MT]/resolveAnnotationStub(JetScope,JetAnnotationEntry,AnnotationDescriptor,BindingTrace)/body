{
  OverloadResolutionResults<FunctionDescriptor> results=callResolver.resolveFunctionCall(trace,scope,CallMaker.makeCall(ReceiverDescriptor.NO_RECEIVER,null,entryElement),NO_EXPECTED_TYPE,DataFlowInfo.EMPTY);
  if (results.isSuccess()) {
    FunctionDescriptor descriptor=results.getResultingDescriptor();
    if (!ErrorUtils.isError(descriptor)) {
      if (descriptor instanceof ConstructorDescriptor) {
        ConstructorDescriptor constructor=(ConstructorDescriptor)descriptor;
        ClassDescriptor classDescriptor=constructor.getContainingDeclaration();
        if (classDescriptor.getKind() != ClassKind.ANNOTATION_CLASS) {
          trace.report(Errors.NOT_AN_ANNOTATION_CLASS.on(entryElement,classDescriptor.getName()));
        }
      }
 else {
        trace.report(Errors.NOT_AN_ANNOTATION_CLASS.on(entryElement,descriptor.getName()));
      }
    }
  }
  if (results.isSuccess()) {
    JetType annotationType=results.getResultingDescriptor().getReturnType();
    annotationDescriptor.setAnnotationType(annotationType);
    resolveArguments(results,annotationDescriptor,trace);
  }
 else {
    annotationDescriptor.setAnnotationType(ErrorUtils.createErrorType("Unresolved annotation type"));
  }
}
