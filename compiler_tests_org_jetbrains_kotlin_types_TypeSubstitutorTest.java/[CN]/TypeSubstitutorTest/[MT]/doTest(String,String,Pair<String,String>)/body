{
  KotlinType initialType=resolveType(initialTypeStr);
  Map<TypeConstructor,TypeProjection> map=stringsToSubstitutionMap(substitutionStrs);
  TypeSubstitutor substitutor=TypeSubstitutor.create(map);
  KotlinType result=substitutor.substitute(initialType,Variance.INVARIANT);
  if (expectedTypeStr == null) {
    assertNull(result);
  }
 else {
    assertNotNull(result);
    assertEquals(expectedTypeStr,DescriptorRenderer.SHORT_NAMES_IN_TYPES.renderType(result));
  }
}
