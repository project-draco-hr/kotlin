{
  JetTypeReference jetTypeReference=JetPsiFactory(getProject()).createType(typeStr);
  AnalyzingUtils.checkForSyntacticErrors(jetTypeReference);
  BindingTrace trace=new BindingTraceContext();
  JetType type=container.getTypeResolver().resolveType(scope,jetTypeReference,trace,true);
  if (!trace.getBindingContext().getDiagnostics().isEmpty()) {
    fail("Errors:\n" + StringUtil.join(trace.getBindingContext().getDiagnostics(),new Function<Diagnostic,String>(){
      @Override public String fun(      Diagnostic diagnostic){
        return DefaultErrorMessages.render(diagnostic);
      }
    }
,"\n"));
  }
  return type;
}
