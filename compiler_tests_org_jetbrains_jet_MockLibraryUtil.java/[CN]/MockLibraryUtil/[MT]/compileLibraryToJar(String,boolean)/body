{
  try {
    File contentDir=JetTestUtils.tmpDir("lib-content");
    File classesDir=new File(contentDir,"classes");
    compileKotlin(sourcesPath,classesDir);
    List<File> javaFiles=FileUtil.findFilesByMask(Pattern.compile(".*\\.java"),new File(sourcesPath));
    if (!javaFiles.isEmpty()) {
      List<String> classPath=ContainerUtil.list(ForTestCompileRuntime.runtimeJarForTests().getPath(),JetTestUtils.getAnnotationsJar().getPath());
      if (classesDir.exists()) {
        classPath.add(classesDir.getPath());
      }
 else {
        FileUtil.createDirectory(classesDir);
      }
      List<String> options=Arrays.asList("-classpath",StringUtil.join(classPath,File.pathSeparator),"-d",classesDir.getPath());
      JetTestUtils.compileJavaFiles(javaFiles,options);
    }
    File jarFile=new File(contentDir,"library.jar");
    ZipOutputStream zip=new ZipOutputStream(new FileOutputStream(jarFile));
    ZipUtil.addDirToZipRecursively(zip,jarFile,classesDir,"",null,null);
    if (addSources) {
      ZipUtil.addDirToZipRecursively(zip,jarFile,new File(sourcesPath),"src",null,null);
    }
    zip.close();
    return jarFile;
  }
 catch (  IOException e) {
    throw UtilsPackage.rethrow(e);
  }
}
