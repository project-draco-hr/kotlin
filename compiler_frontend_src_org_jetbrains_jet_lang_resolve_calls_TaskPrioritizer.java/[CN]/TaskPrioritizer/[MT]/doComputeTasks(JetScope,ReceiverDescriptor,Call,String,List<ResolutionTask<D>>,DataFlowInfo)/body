{
  List<ReceiverDescriptor> implicitReceivers=Lists.newArrayList();
  scope.getImplicitReceiversHierarchy(implicitReceivers);
  if (explicitReceiver.exists()) {
    Collection<ResolvedCall<D>> extensionFunctions=convertWithImpliedThis(explicitReceiver,getExtensionsByName(scope,name));
    List<ResolvedCall<D>> nonlocals=Lists.newArrayList();
    List<ResolvedCall<D>> locals=Lists.newArrayList();
    TaskPrioritizer.<D>splitLexicallyLocalDescriptors(extensionFunctions,scope.getContainingDeclaration(),locals,nonlocals);
    Collection<D> members=getMembersByName(explicitReceiver.getType(),name);
    addTask(result,call,locals,dataFlowInfo);
    addTask(result,call,convertWithReceivers(members,explicitReceiver,NO_RECEIVER),dataFlowInfo);
    for (    ReceiverDescriptor implicitReceiver : implicitReceivers) {
      Collection<D> memberExtensions=getExtensionsByName(implicitReceiver.getType().getMemberScope(),name);
      addTask(result,call,convertWithReceivers(memberExtensions,implicitReceiver,explicitReceiver),dataFlowInfo);
    }
    addTask(result,call,nonlocals,dataFlowInfo);
  }
 else {
    Collection<ResolvedCall<D>> functions=convertWithImpliedThis(explicitReceiver,getNonExtensionsByName(scope,name));
    List<ResolvedCall<D>> nonlocals=Lists.newArrayList();
    List<ResolvedCall<D>> locals=Lists.newArrayList();
    TaskPrioritizer.<D>splitLexicallyLocalDescriptors(functions,scope.getContainingDeclaration(),locals,nonlocals);
    addTask(result,call,locals,dataFlowInfo);
    for (    ReceiverDescriptor implicitReceiver : implicitReceivers) {
      doComputeTasks(scope,implicitReceiver,call,name,result,dataFlowInfo);
    }
    addTask(result,call,nonlocals,dataFlowInfo);
  }
}
