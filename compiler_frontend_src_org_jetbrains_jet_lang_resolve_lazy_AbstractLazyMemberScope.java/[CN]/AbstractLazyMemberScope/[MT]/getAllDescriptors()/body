{
  if (!allDescriptorsComputed) {
    for (    JetDeclaration declaration : declarationProvider.getAllDeclarations()) {
      if (declaration instanceof JetEnumEntry) {
        JetEnumEntry jetEnumEntry=(JetEnumEntry)declaration;
        Name name=safeNameForLazyResolve(jetEnumEntry);
        if (name != null) {
          getProperties(name);
          getObjectDescriptor(name);
        }
      }
 else       if (declaration instanceof JetObjectDeclaration) {
        JetObjectDeclaration objectDeclaration=(JetObjectDeclaration)declaration;
        Name name=safeNameForLazyResolve(objectDeclaration.getNameAsDeclaration());
        if (name != null) {
          getProperties(name);
          getObjectDescriptor(name);
        }
      }
 else       if (declaration instanceof JetClassOrObject) {
        JetClassOrObject classOrObject=(JetClassOrObject)declaration;
        Name name=safeNameForLazyResolve(classOrObject.getNameAsName());
        if (name != null) {
          getClassifier(name);
        }
      }
 else       if (declaration instanceof JetFunction) {
        JetFunction function=(JetFunction)declaration;
        getFunctions(safeNameForLazyResolve(function));
      }
 else       if (declaration instanceof JetProperty) {
        JetProperty property=(JetProperty)declaration;
        getProperties(safeNameForLazyResolve(property));
      }
 else       if (declaration instanceof JetParameter) {
        JetParameter parameter=(JetParameter)declaration;
        Name name=safeNameForLazyResolve(parameter);
        getProperties(name);
      }
 else       if (declaration instanceof JetTypedef || declaration instanceof JetMultiDeclaration) {
      }
 else {
        throw new IllegalArgumentException("Unsupported declaration kind: " + declaration);
      }
    }
    addExtraDescriptors();
    allDescriptorsComputed=true;
  }
  return allDescriptors;
}
