{
  final DebugProcessImpl debugProcess=suspendContext.getDebugProcess();
  return debugProcess.new ResumeCommand(suspendContext){
    @Override public void contextAction(){
      try {
        StackFrameProxyImpl frameProxy=suspendContext.getFrameProxy();
        if (frameProxy != null) {
          Action action=KotlinSteppingCommandProviderKt.getStepOutAction(frameProxy.location(),suspendContext,inlineFunctions,inlineArgument);
          DebugProcessImpl.ResumeCommand command=action.createCommand(debugProcess,suspendContext,ignoreBreakpoints);
          if (command != null) {
            createStepRequest(suspendContext,getContextThread(),debugProcess.getVirtualMachineProxy().eventRequestManager(),StepRequest.STEP_LINE,StepRequest.STEP_OUT);
            command.contextAction();
            return;
          }
        }
        debugProcess.createStepOverCommand(suspendContext,ignoreBreakpoints).contextAction();
      }
 catch (      EvaluateException ignored) {
      }
    }
  }
;
}
