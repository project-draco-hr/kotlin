{
  if (JavaRuntimeDetectionUtil.getJavaRuntimeVersion(classesRoots) != null) {
    return false;
  }
  for (  VirtualFile file : classesRoots) {
    CommonProcessors.FindFirstProcessor<VirtualFile> findKTProcessor=new CommonProcessors.FindFirstProcessor<VirtualFile>(){
      @Override protected boolean accept(      VirtualFile file){
        String extension=file.getExtension();
        return extension != null && extension.equals(JetFileType.EXTENSION);
      }
    }
;
    VfsUtilCore.processFilesRecursively(file,findKTProcessor);
    if (findKTProcessor.isFound()) {
      return true;
    }
  }
  return false;
}
