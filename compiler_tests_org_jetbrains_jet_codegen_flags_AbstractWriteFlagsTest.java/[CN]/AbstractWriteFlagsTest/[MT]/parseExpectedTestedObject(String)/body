{
  testDescription=testDescription.substring(testDescription.indexOf("// TESTED_OBJECT_KIND"));
  String[] testObjectData=testDescription.split("\n\n");
  ArrayList<TestedObject> objects=new ArrayList<TestedObject>();
  for (int i=0; i < testObjectData.length; i++) {
    String testData=testObjectData[i];
    if (!testData.isEmpty()) {
      TestedObject testObject=new TestedObject();
      testObject.textData=testData;
      List<String> testedObjects=findListWithPrefixes(testData,"// TESTED_OBJECTS: ");
      assertTrue("Cannot find TESTED_OBJECTS instruction",!testedObjects.isEmpty());
      testObject.containingClass=testedObjects.get(0);
      if (testedObjects.size() == 1) {
        testObject.name=testedObjects.get(0);
      }
 else       if (testedObjects.size() == 2) {
        testObject.name=testedObjects.get(1);
      }
 else {
        throw new IllegalArgumentException("TESTED_OBJECTS instruction must contains one (for class) or two (for function and property) values");
      }
      testObject.kind=findStringWithPrefixes(testData,"// TESTED_OBJECT_KIND: ");
      List<String> isFullName=findListWithPrefixes(testData,"// IS_FULL_CONTAINING_CLASS_NAME: ");
      if (isFullName.size() == 1) {
        testObject.isFullContainingClassName=Boolean.parseBoolean(isFullName.get(0));
      }
      objects.add(testObject);
    }
  }
  assertTrue("Test description not present!",!objects.isEmpty());
  return objects;
}
