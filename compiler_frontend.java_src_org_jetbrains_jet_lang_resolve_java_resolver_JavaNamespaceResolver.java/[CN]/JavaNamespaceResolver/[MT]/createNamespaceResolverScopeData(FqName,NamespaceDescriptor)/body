{
  PsiPackage psiPackage;
  PsiClass psiClass;
  lookingForPsi: {
    psiClass=getPsiClassForJavaPackageScope(fqName);
    psiPackage=psiClassFinder.findPsiPackage(fqName);
    if (psiClass != null || psiPackage != null) {
      trace.record(JavaBindingContext.JAVA_NAMESPACE_KIND,ns,JavaNamespaceKind.PROPER);
      break lookingForPsi;
    }
    psiClass=psiClassFinder.findPsiClass(fqName,PsiClassFinder.RuntimeClassesHandleMode.IGNORE);
    if (psiClass != null && !psiClass.isEnum()) {
      trace.record(JavaBindingContext.JAVA_NAMESPACE_KIND,ns,JavaNamespaceKind.CLASS_STATICS);
      break lookingForPsi;
    }
    cache(fqName,null);
    return null;
  }
  ResolverNamespaceData namespaceData=new ResolverNamespaceData(psiClass,psiPackage,fqName,ns);
  JavaPackageScope memberScope=new JavaPackageScope(fqName,javaSemanticServices,namespaceData);
  namespaceData.setMemberScope(memberScope);
  cache(fqName,memberScope);
  return namespaceData;
}
