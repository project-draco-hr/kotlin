{
  FqName fqName=DescriptorUtils.getFQName(namespaceDescriptor).toSafe();
  if (unresolvedCache.contains(fqName)) {
    throw new IllegalStateException("This means that we are trying to create a Java package, but have a package with the same FQN defined in Kotlin: " + fqName);
  }
  JavaPackageScope alreadyResolvedScope=resolvedNamespaceCache.get(fqName);
  if (alreadyResolvedScope != null) {
    return alreadyResolvedScope;
  }
  ResolverNamespaceData data;
  data=createNamespaceResolverScopeData(fqName,namespaceDescriptor);
  if (data == null) {
    return null;
  }
  JavaPackageScope scope=data.getMemberScope();
  if (scope == null) {
    throw new IllegalStateException("fqn: " + fqName);
  }
  return scope;
}
