{
  PsiPackage psiPackage=psiClassFinder.findPsiPackage(fqName);
  if (psiPackage != null) {
    FqName packageClassFqName=PackageClassUtils.getPackageClassFqName(fqName);
    VirtualFile virtualFile=virtualFileFinder.find(packageClassFqName);
    trace.record(JavaBindingContext.JAVA_NAMESPACE_KIND,namespaceDescriptor,JavaNamespaceKind.PROPER);
    if (virtualFile != null) {
      ErrorReporter errorReporter=AbiVersionUtil.abiVersionErrorReporter(virtualFile,packageClassFqName,trace);
      JetScope kotlinPackageScope=deserializedDescriptorResolver.createKotlinPackageScope(namespaceDescriptor,virtualFile,errorReporter);
      if (kotlinPackageScope != null) {
        return kotlinPackageScope;
      }
    }
    if (record) {
      trace.record(BindingContext.NAMESPACE,psiPackage,namespaceDescriptor);
    }
    return new JavaPackageScope(namespaceDescriptor,psiPackage,fqName,javaDescriptorResolver,psiClassFinder);
  }
  PsiClass psiClass=psiClassFinder.findPsiClass(fqName,PsiClassFinder.RuntimeClassesHandleMode.IGNORE);
  if (psiClass == null) {
    return null;
  }
  if (DescriptorResolverUtils.isCompiledKotlinClassOrPackageClass(psiClass)) {
    return null;
  }
  if (!hasStaticMembers(psiClass)) {
    return null;
  }
  trace.record(JavaBindingContext.JAVA_NAMESPACE_KIND,namespaceDescriptor,JavaNamespaceKind.CLASS_STATICS);
  if (record) {
    trace.record(BindingContext.NAMESPACE,psiClass,namespaceDescriptor);
  }
  return new JavaClassStaticMembersScope(namespaceDescriptor,fqName,psiClass,psiClassFinder,javaDescriptorResolver);
}
