{
  JavaPackage javaPackage=javaClassFinder.findPackage(fqName);
  if (javaPackage != null) {
    FqName packageClassFqName=PackageClassUtils.getPackageClassFqName(fqName);
    VirtualFile virtualFile=virtualFileFinder.find(packageClassFqName);
    cache.recordProperNamespace(namespaceDescriptor);
    if (virtualFile != null) {
      ErrorReporter errorReporter=AbiVersionUtil.abiVersionErrorReporter(virtualFile,packageClassFqName,trace);
      JetScope kotlinPackageScope=deserializedDescriptorResolver.createKotlinPackageScope(namespaceDescriptor,virtualFile,errorReporter);
      if (kotlinPackageScope != null) {
        return kotlinPackageScope;
      }
    }
    if (record) {
      cache.recordPackage(javaPackage,namespaceDescriptor);
    }
    return new JavaPackageScope(namespaceDescriptor,javaPackage,fqName,javaDescriptorResolver);
  }
  JavaClass javaClass=javaClassFinder.findClass(fqName);
  if (javaClass == null) {
    return null;
  }
  if (DescriptorResolverUtils.isCompiledKotlinClassOrPackageClass(javaClass.getPsi())) {
    return null;
  }
  if (!hasStaticMembers(javaClass)) {
    return null;
  }
  cache.recordClassStaticMembersNamespace(namespaceDescriptor);
  if (record) {
    cache.recordPackage(javaClass,namespaceDescriptor);
  }
  return new JavaClassStaticMembersScope(namespaceDescriptor,fqName,javaClass,javaDescriptorResolver);
}
