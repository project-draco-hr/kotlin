{
  for (  PsiMember member : ContainerUtil.concat(psiClass.getMethods(),psiClass.getFields())) {
    if (member.hasModifierProperty(PsiModifier.STATIC) && !DescriptorResolverUtils.shouldBeInEnumClassObject(member)) {
      return true;
    }
  }
  for (  PsiClass nestedClass : psiClass.getInnerClasses()) {
    if (SingleAbstractMethodUtils.isSamInterface(new JavaClass(nestedClass))) {
      return true;
    }
    if (nestedClass.hasModifierProperty(PsiModifier.STATIC) && hasStaticMembers(nestedClass)) {
      return true;
    }
  }
  return false;
}
