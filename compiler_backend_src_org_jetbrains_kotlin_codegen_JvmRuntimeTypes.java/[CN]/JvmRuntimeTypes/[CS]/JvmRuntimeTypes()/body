{
  ModuleDescriptorImpl module=TargetPlatformKt.createModule(JvmPlatform.INSTANCE,Name.special("<jvm functions impl>"),LockBasedStorageManager.NO_LOCKS,DefaultBuiltIns.getInstance());
  PackageFragmentDescriptor kotlinJvmInternal=new MutablePackageFragmentDescriptor(module,new FqName("kotlin.jvm.internal"));
  PackageFragmentDescriptor kotlinReflectJvmInternal=new MutablePackageFragmentDescriptor(module,new FqName("kotlin.reflect.jvm.internal"));
  this.lambda=createClass(kotlinJvmInternal,"Lambda");
  this.functionReference=createClass(kotlinJvmInternal,"FunctionReference");
  this.localVariableReference=createClass(kotlinReflectJvmInternal,"LocalVariableReference");
  this.mutableLocalVariableReference=createClass(kotlinReflectJvmInternal,"MutableLocalVariableReference");
  this.propertyReferences=new ArrayList<ClassDescriptor>(3);
  this.mutablePropertyReferences=new ArrayList<ClassDescriptor>(3);
  for (int i=0; i <= 2; i++) {
    propertyReferences.add(createClass(kotlinJvmInternal,"PropertyReference" + i));
    mutablePropertyReferences.add(createClass(kotlinJvmInternal,"MutablePropertyReference" + i));
  }
}
