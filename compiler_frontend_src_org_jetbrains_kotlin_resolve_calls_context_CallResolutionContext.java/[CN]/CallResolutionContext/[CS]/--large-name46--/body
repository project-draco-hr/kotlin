{
  super(trace,scope,expectedType,dataFlowInfo,contextDependency,resolutionResultsCache,callChecker,symbolUsageValidator,additionalTypeChecker,statementFilter,isAnnotationContext,collectAllCandidates,insideSafeCallChain);
  this.call=call;
  this.checkArguments=checkArguments;
  if (dataFlowInfoForArguments != null) {
    this.dataFlowInfoForArguments=dataFlowInfoForArguments;
  }
 else   if (checkArguments == CheckValueArgumentsMode.ENABLED) {
    this.dataFlowInfoForArguments=new DataFlowInfoForArgumentsImpl(call);
  }
 else {
    this.dataFlowInfoForArguments=new MutableDataFlowInfoForArguments.WithoutArgumentsCheck();
  }
}
