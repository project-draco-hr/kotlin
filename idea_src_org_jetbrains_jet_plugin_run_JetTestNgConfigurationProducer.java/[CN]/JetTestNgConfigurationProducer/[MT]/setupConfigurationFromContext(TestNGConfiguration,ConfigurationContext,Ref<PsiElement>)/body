{
  Location location=context.getLocation();
  if (location == null) {
    return false;
  }
  Project project=context.getProject();
  PsiElement leaf=location.getPsiElement();
  if (!ProjectRootsUtil.isInSource(leaf)) {
    return false;
  }
  if (!(leaf.getContainingFile() instanceof JetFile)) {
    return false;
  }
  JetFile jetFile=(JetFile)leaf.getContainingFile();
  JetNamedFunction function=PsiTreeUtil.getParentOfType(leaf,JetNamedFunction.class,false);
  if (function != null) {
    @SuppressWarnings("unchecked") JetElement owner=PsiTreeUtil.getParentOfType(function,JetFunction.class,JetClass.class);
    if (owner instanceof JetClass) {
      PsiClass delegate=LightClassUtil.getPsiClass((JetClass)owner);
      if (delegate != null) {
        for (        PsiMethod method : delegate.getMethods()) {
          if (method.getNavigationElement() == function) {
            if (TestNGUtil.hasTest(method)) {
              return configure(configuration,location,context,project,delegate,method);
            }
            break;
          }
        }
      }
    }
  }
  JetClass jetClass=PsiTreeUtil.getParentOfType(leaf,JetClass.class,false);
  if (jetClass == null) {
    jetClass=JetJUnitConfigurationProducer.getClassDeclarationInFile(jetFile);
  }
  if (jetClass == null) {
    return false;
  }
  PsiClass delegate=LightClassUtil.getPsiClass(jetClass);
  if (!isTestNGClass(delegate)) {
    return false;
  }
  return configure(configuration,location,context,project,delegate,null);
}
