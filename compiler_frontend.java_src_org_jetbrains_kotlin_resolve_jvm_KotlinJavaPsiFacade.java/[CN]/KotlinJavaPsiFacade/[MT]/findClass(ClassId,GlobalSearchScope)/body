{
  ProgressIndicatorProvider.checkCanceled();
  String qualifiedName=classId.asSingleFqName().asString();
  if (shouldUseSlowResolve()) {
    PsiClass[] classes=findClassesInDumbMode(qualifiedName,scope);
    if (classes.length != 0) {
      return classes[0];
    }
    return null;
  }
  for (  KotlinPsiElementFinderWrapper finder : finders()) {
    if (finder instanceof KotlinPsiElementFinderImpl) {
      PsiClass aClass=((KotlinPsiElementFinderImpl)finder).findClass(classId,scope);
      if (aClass != null)       return aClass;
    }
 else {
      PsiClass aClass=finder.findClass(qualifiedName,scope);
      if (aClass != null)       return aClass;
    }
  }
  return null;
}
