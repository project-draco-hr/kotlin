{
  if (searchRule == INCLUDE_KOTLIN_SOURCES) {
    NamespaceDescriptor kotlinNamespaceDescriptor=cache.getPackageResolvedFromSource(qualifiedName);
    if (kotlinNamespaceDescriptor != null) {
      return kotlinNamespaceDescriptor;
    }
  }
  if (unresolvedCache.contains(qualifiedName)) {
    return null;
  }
  JetScope scope=resolvedNamespaceCache.get(qualifiedName);
  if (scope != null) {
    return (NamespaceDescriptor)scope.getContainingDeclaration();
  }
  NamespaceDescriptorParent parentNs=resolveParentNamespace(qualifiedName);
  if (parentNs == null) {
    return null;
  }
  JavaNamespaceDescriptor javaNamespaceDescriptor=new JavaNamespaceDescriptor(parentNs,Collections.<AnnotationDescriptor>emptyList(),qualifiedName);
  JetScope newScope=createNamespaceScope(qualifiedName,javaNamespaceDescriptor,true);
  if (newScope == null) {
    return null;
  }
  javaNamespaceDescriptor.setMemberScope(newScope);
  return javaNamespaceDescriptor;
}
