{
  GlobalContextImpl globalContext=ContextPackage.GlobalContext();
  DeclarationProviderFactory declarationProviderFactory=DeclarationProviderFactoryService.OBJECT$.createDeclarationProviderFactory(project,globalContext.getStorageManager(),syntheticFiles,filesScope);
  InjectorForLazyResolveWithJava resolveWithJava=new InjectorForLazyResolveWithJava(project,globalContext,declarationProviderFactory,trace);
  ModuleDescriptorImpl module=resolveWithJava.getModule();
  module.initialize(new CompositePackageFragmentProvider(Arrays.asList(resolveWithJava.getResolveSession().getPackageFragmentProvider(),resolveWithJava.getJavaDescriptorResolver().getPackageFragmentProvider())));
  module.addDependencyOnModule(module);
  if (addBuiltIns) {
    module.addDependencyOnModule(KotlinBuiltIns.getInstance().getBuiltInsModule());
  }
  module.seal();
  return new JvmSetup(resolveWithJava.getResolveSession(),resolveWithJava.getJavaDescriptorResolver());
}
