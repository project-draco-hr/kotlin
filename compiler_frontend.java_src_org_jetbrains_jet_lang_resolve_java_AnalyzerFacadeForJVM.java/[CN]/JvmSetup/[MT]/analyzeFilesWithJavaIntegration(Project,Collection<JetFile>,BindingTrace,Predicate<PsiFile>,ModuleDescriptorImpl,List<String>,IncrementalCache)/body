{
  GlobalContext globalContext=ContextPackage.GlobalContext();
  TopDownAnalysisParameters topDownAnalysisParameters=TopDownAnalysisParameters.create(globalContext.getStorageManager(),globalContext.getExceptionTracker(),filesToAnalyzeCompletely,false,false);
  InjectorForTopDownAnalyzerForJvm injector=new InjectorForTopDownAnalyzerForJvm(project,topDownAnalysisParameters,trace,module);
  try {
    List<PackageFragmentProvider> additionalProviders=new ArrayList<PackageFragmentProvider>();
    if (incrementalCache != null && moduleIds != null) {
      for (      String moduleId : moduleIds) {
        additionalProviders.add(new IncrementalPackageFragmentProvider(files,module,globalContext.getStorageManager(),injector.getDeserializationGlobalContextForJava(),incrementalCache,moduleId,injector.getJavaDescriptorResolver()));
      }
    }
    additionalProviders.add(injector.getJavaDescriptorResolver().getPackageFragmentProvider());
    injector.getTopDownAnalyzer().analyzeFiles(topDownAnalysisParameters,files,additionalProviders);
    return AnalyzeExhaust.success(trace.getBindingContext(),module);
  }
  finally {
    injector.destroy();
  }
}
