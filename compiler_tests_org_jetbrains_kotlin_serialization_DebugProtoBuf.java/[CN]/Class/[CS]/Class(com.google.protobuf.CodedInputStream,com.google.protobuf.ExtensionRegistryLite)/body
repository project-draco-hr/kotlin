{
  initFields();
  int mutable_bitField0_=0;
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 8:
{
    bitField0_|=0x00000001;
    flags_=input.readInt32();
    break;
  }
case 24:
{
  bitField0_|=0x00000002;
  fqName_=input.readInt32();
  break;
}
case 32:
{
bitField0_|=0x00000004;
companionObjectName_=input.readInt32();
break;
}
case 42:
{
if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
typeParameter_=new java.util.ArrayList<org.jetbrains.kotlin.serialization.DebugProtoBuf.TypeParameter>();
mutable_bitField0_|=0x00000008;
}
typeParameter_.add(input.readMessage(org.jetbrains.kotlin.serialization.DebugProtoBuf.TypeParameter.PARSER,extensionRegistry));
break;
}
case 50:
{
if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
supertype_=new java.util.ArrayList<org.jetbrains.kotlin.serialization.DebugProtoBuf.Type>();
mutable_bitField0_|=0x00000010;
}
supertype_.add(input.readMessage(org.jetbrains.kotlin.serialization.DebugProtoBuf.Type.PARSER,extensionRegistry));
break;
}
case 56:
{
if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
nestedClassName_=new java.util.ArrayList<java.lang.Integer>();
mutable_bitField0_|=0x00000020;
}
nestedClassName_.add(input.readInt32());
break;
}
case 58:
{
int length=input.readRawVarint32();
int limit=input.pushLimit(length);
if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
nestedClassName_=new java.util.ArrayList<java.lang.Integer>();
mutable_bitField0_|=0x00000020;
}
while (input.getBytesUntilLimit() > 0) {
nestedClassName_.add(input.readInt32());
}
input.popLimit(limit);
break;
}
case 66:
{
if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
constructor_=new java.util.ArrayList<org.jetbrains.kotlin.serialization.DebugProtoBuf.Constructor>();
mutable_bitField0_|=0x00000040;
}
constructor_.add(input.readMessage(org.jetbrains.kotlin.serialization.DebugProtoBuf.Constructor.PARSER,extensionRegistry));
break;
}
case 74:
{
if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
function_=new java.util.ArrayList<org.jetbrains.kotlin.serialization.DebugProtoBuf.Function>();
mutable_bitField0_|=0x00000080;
}
function_.add(input.readMessage(org.jetbrains.kotlin.serialization.DebugProtoBuf.Function.PARSER,extensionRegistry));
break;
}
case 82:
{
if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
property_=new java.util.ArrayList<org.jetbrains.kotlin.serialization.DebugProtoBuf.Property>();
mutable_bitField0_|=0x00000100;
}
property_.add(input.readMessage(org.jetbrains.kotlin.serialization.DebugProtoBuf.Property.PARSER,extensionRegistry));
break;
}
case 90:
{
if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
member_=new java.util.ArrayList<org.jetbrains.kotlin.serialization.DebugProtoBuf.Callable>();
mutable_bitField0_|=0x00000200;
}
member_.add(input.readMessage(org.jetbrains.kotlin.serialization.DebugProtoBuf.Callable.PARSER,extensionRegistry));
break;
}
case 96:
{
if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
enumEntry_=new java.util.ArrayList<java.lang.Integer>();
mutable_bitField0_|=0x00000400;
}
enumEntry_.add(input.readInt32());
break;
}
case 98:
{
int length=input.readRawVarint32();
int limit=input.pushLimit(length);
if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
enumEntry_=new java.util.ArrayList<java.lang.Integer>();
mutable_bitField0_|=0x00000400;
}
while (input.getBytesUntilLimit() > 0) {
enumEntry_.add(input.readInt32());
}
input.popLimit(limit);
break;
}
case 106:
{
org.jetbrains.kotlin.serialization.DebugProtoBuf.Class.PrimaryConstructor.Builder subBuilder=null;
if (((bitField0_ & 0x00000008) == 0x00000008)) {
subBuilder=primaryConstructor_.toBuilder();
}
primaryConstructor_=input.readMessage(org.jetbrains.kotlin.serialization.DebugProtoBuf.Class.PrimaryConstructor.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(primaryConstructor_);
primaryConstructor_=subBuilder.buildPartial();
}
bitField0_|=0x00000008;
break;
}
case 114:
{
if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
secondaryConstructor_=new java.util.ArrayList<org.jetbrains.kotlin.serialization.DebugProtoBuf.Callable>();
mutable_bitField0_|=0x00001000;
}
secondaryConstructor_.add(input.readMessage(org.jetbrains.kotlin.serialization.DebugProtoBuf.Callable.PARSER,extensionRegistry));
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
typeParameter_=java.util.Collections.unmodifiableList(typeParameter_);
}
if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
supertype_=java.util.Collections.unmodifiableList(supertype_);
}
if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
nestedClassName_=java.util.Collections.unmodifiableList(nestedClassName_);
}
if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
constructor_=java.util.Collections.unmodifiableList(constructor_);
}
if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
function_=java.util.Collections.unmodifiableList(function_);
}
if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
property_=java.util.Collections.unmodifiableList(property_);
}
if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
member_=java.util.Collections.unmodifiableList(member_);
}
if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
enumEntry_=java.util.Collections.unmodifiableList(enumEntry_);
}
if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
secondaryConstructor_=java.util.Collections.unmodifiableList(secondaryConstructor_);
}
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
