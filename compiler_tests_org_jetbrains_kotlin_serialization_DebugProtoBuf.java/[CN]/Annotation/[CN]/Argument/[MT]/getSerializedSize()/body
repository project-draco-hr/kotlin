{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeEnumSize(1,type_.getNumber());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeSInt64Size(2,intValue_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeFloatSize(3,floatValue_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeDoubleSize(4,doubleValue_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(5,stringValue_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(6,classId_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(7,enumValueId_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(8,annotation_);
  }
  for (int i=0; i < arrayElement_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(9,arrayElement_.get(i));
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
