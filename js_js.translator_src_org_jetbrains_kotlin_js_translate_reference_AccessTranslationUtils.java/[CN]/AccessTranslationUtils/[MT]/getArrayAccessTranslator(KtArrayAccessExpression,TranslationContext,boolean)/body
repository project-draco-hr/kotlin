{
  TranslationContext accessArrayContext;
  if (forceOrderOfEvaluation) {
    Map<KtExpression,JsExpression> indexesMap=new LinkedHashMap<KtExpression,JsExpression>();
    for (    KtExpression indexExpression : expression.getIndexExpressions()) {
      JsExpression jsIndexExpression=Translation.translateAsExpression(indexExpression,context);
      if (TranslationUtils.isCacheNeeded(jsIndexExpression)) {
        jsIndexExpression=context.defineTemporary(jsIndexExpression);
      }
      indexesMap.put(indexExpression,jsIndexExpression);
    }
    accessArrayContext=context.innerContextWithAliasesForExpressions(indexesMap);
  }
 else {
    accessArrayContext=context;
  }
  return ArrayAccessTranslator.newInstance(expression,accessArrayContext);
}
