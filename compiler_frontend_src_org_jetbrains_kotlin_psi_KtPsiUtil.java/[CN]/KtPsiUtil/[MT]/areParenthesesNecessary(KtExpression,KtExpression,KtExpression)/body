{
  if (parentExpression instanceof KtParenthesizedExpression || innerExpression instanceof KtParenthesizedExpression) {
    return false;
  }
  if (parentExpression instanceof KtPackageDirective)   return false;
  if (parentExpression instanceof KtWhenExpression || innerExpression instanceof KtWhenExpression) {
    return false;
  }
  if (innerExpression instanceof KtIfExpression) {
    PsiElement current=parentExpression;
    while (!(current instanceof KtBlockExpression || current instanceof KtDeclaration || current instanceof KtStatementExpression)) {
      if (current.getTextRange().getEndOffset() != currentInner.getTextRange().getEndOffset()) {
        return current.getText().charAt(current.getTextLength() - 1) != ')';
      }
      current=current.getParent();
    }
  }
  if (parentExpression instanceof KtCallExpression && currentInner == ((KtCallExpression)parentExpression).getCalleeExpression()) {
    if (innerExpression instanceof KtSimpleNameExpression)     return false;
    if (JetPsiUtilKt.getQualifiedExpressionForSelector(parentExpression) != null)     return true;
    return !(innerExpression instanceof KtThisExpression || innerExpression instanceof KtArrayAccessExpression || innerExpression instanceof KtConstantExpression|| innerExpression instanceof KtStringTemplateExpression|| innerExpression instanceof KtCallExpression);
  }
  IElementType innerOperation=getOperation(innerExpression);
  IElementType parentOperation=getOperation(parentExpression);
  if (parentExpression instanceof KtReturnExpression && (innerExpression instanceof KtLabeledExpression || innerExpression instanceof KtAnnotatedExpression))   return true;
  if (innerExpression instanceof KtBinaryExpressionWithTypeRHS && parentOperation == KtTokens.LT) {
    return true;
  }
  if (parentExpression instanceof KtLabeledExpression)   return false;
  if (parentExpression instanceof KtBinaryExpression && parentOperation == KtTokens.ELVIS && currentInner == ((KtBinaryExpression)parentExpression).getRight()) {
    return false;
  }
  int innerPriority=getPriority(innerExpression);
  int parentPriority=getPriority(parentExpression);
  if (innerPriority == parentPriority) {
    if (parentExpression instanceof KtBinaryExpression) {
      if (innerOperation == KtTokens.ANDAND || innerOperation == KtTokens.OROR) {
        return false;
      }
      return ((KtBinaryExpression)parentExpression).getRight() == currentInner;
    }
    if (parentExpression instanceof KtPrefixExpression && innerExpression instanceof KtPrefixExpression) {
      return innerOperation == parentOperation && (innerOperation == KtTokens.PLUS || innerOperation == KtTokens.MINUS);
    }
    return false;
  }
  return innerPriority < parentPriority;
}
