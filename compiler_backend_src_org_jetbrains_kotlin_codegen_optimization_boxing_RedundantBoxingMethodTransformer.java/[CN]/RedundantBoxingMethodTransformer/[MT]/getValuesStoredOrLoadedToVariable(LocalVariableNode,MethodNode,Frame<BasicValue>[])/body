{
  List<BasicValue> values=new ArrayList<BasicValue>();
  InsnList insnList=node.instructions;
  int from=insnList.indexOf(localVariableNode.start) + 1;
  int to=insnList.indexOf(localVariableNode.end) - 1;
  Frame<BasicValue> frameForFromInstr=frames[from];
  if (frameForFromInstr != null) {
    BasicValue localVarValue=frameForFromInstr.getLocal(localVariableNode.index);
    if (localVarValue != null) {
      values.add(localVarValue);
    }
  }
  for (int i=from; i <= to; i++) {
    if (i < 0 || i >= insnList.size())     continue;
    AbstractInsnNode insn=insnList.get(i);
    if ((insn.getOpcode() == Opcodes.ASTORE || insn.getOpcode() == Opcodes.ALOAD) && ((VarInsnNode)insn).var == localVariableNode.index) {
      if (frames[i] == null) {
        values.add(null);
        continue;
      }
      if (insn.getOpcode() == Opcodes.ASTORE) {
        values.add(frames[i].getStack(frames[i].getStackSize() - 1));
      }
 else {
        values.add(frames[i].getLocal(((VarInsnNode)insn).var));
      }
    }
  }
  return values;
}
