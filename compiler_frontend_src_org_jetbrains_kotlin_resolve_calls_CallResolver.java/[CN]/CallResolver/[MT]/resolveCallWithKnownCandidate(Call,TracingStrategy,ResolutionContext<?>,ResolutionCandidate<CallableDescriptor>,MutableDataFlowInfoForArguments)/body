{
  return callResolvePerfCounter.time(new Function0<OverloadResolutionResults<FunctionDescriptor>>(){
    @Override public OverloadResolutionResults<FunctionDescriptor> invoke(){
      BasicCallResolutionContext basicCallResolutionContext=BasicCallResolutionContext.create(context,call,CheckArgumentTypesMode.CHECK_VALUE_ARGUMENTS,dataFlowInfoForArguments);
      List<ResolutionTask<CallableDescriptor,FunctionDescriptor>> tasks=taskPrioritizer.<CallableDescriptor,FunctionDescriptor>computePrioritizedTasksFromCandidates(basicCallResolutionContext,Collections.singleton(candidate),tracing);
      return doResolveCallOrGetCachedResults(basicCallResolutionContext,tasks,CallTransformer.FUNCTION_CALL_TRANSFORMER,tracing);
    }
  }
);
}
