{
  Call call=context.call;
  tracing.bindCall(context.trace,call);
  TemporaryBindingTrace traceToResolveCall=TemporaryBindingTrace.create(context.trace,"trace to resolve call",call);
  BasicCallResolutionContext newContext=context.replaceBindingTrace(traceToResolveCall);
  recordScopeAndDataFlowInfo(newContext,newContext.call.getCalleeExpression());
  OverloadResolutionResultsImpl<F> results=doResolveCall(newContext,prioritizedTasks,callTransformer,tracing);
  DelegatingBindingTrace deltasTraceForTypeInference=((OverloadResolutionResultsImpl)results).getTrace();
  if (deltasTraceForTypeInference != null) {
    deltasTraceForTypeInference.addOwnDataTo(traceToResolveCall);
  }
  completeTypeInferenceDependentOnFunctionLiterals(newContext,results,tracing);
  cacheResults(context,results,traceToResolveCall,tracing);
  traceToResolveCall.commit();
  if (context.contextDependency == ContextDependency.INDEPENDENT) {
    results=callCompleter.completeCall(context,results,tracing);
  }
  return results;
}
