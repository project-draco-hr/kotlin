{
  List<CompletionProposal> itemsInformation=getItemsInformation(items);
  String allItemsString=listToString(itemsInformation);
  Set<CompletionProposal> leftItems=nothingElse ? new LinkedHashSet<CompletionProposal>(itemsInformation) : null;
  int indexOfPrevious=Integer.MIN_VALUE;
  for (  CompletionProposal expectedProposal : expected) {
    boolean isFound=false;
    for (int index=0; index < itemsInformation.size(); index++) {
      CompletionProposal proposal=itemsInformation.get(index);
      if (proposal.matches(expectedProposal)) {
        isFound=true;
        Assert.assertTrue("Invalid order of existent elements in " + allItemsString,!checkOrder || index > indexOfPrevious);
        indexOfPrevious=index;
        if (leftItems != null) {
          leftItems.remove(proposal);
        }
        break;
      }
    }
    if (!isFound) {
      if (allItemsString.isEmpty()) {
        Assert.fail("Completion is empty but " + expectedProposal + " is expected");
      }
 else {
        Assert.fail("Expected " + expectedProposal + " not found in:\n"+ allItemsString);
      }
    }
  }
  if (leftItems != null && !leftItems.isEmpty()) {
    Assert.fail("No items not mentioned in EXIST directives expected but some found:\n" + listToString(leftItems));
  }
}
