{
  NamedNodeMap attributes=element.getAttributes();
  int length=attributes.getLength();
  boolean hasWidth=false;
  boolean hasHeight=false;
  boolean hasOtherLayoutParam=false;
  for (int i=0; i < length; i++) {
    Attr attribute=(Attr)attributes.item(i);
    String name=attribute.getLocalName();
    if (name != null && name.startsWith(ATTR_LAYOUT_RESOURCE_PREFIX)) {
      if (ATTR_LAYOUT_WIDTH.equals(name)) {
        hasWidth=true;
      }
 else       if (ATTR_LAYOUT_HEIGHT.equals(name)) {
        hasHeight=true;
      }
 else       if (ANDROID_URI.equals(attribute.getNamespaceURI())) {
        hasOtherLayoutParam=true;
      }
    }
  }
  boolean flagWidth=!hasOtherLayoutParam && hasWidth && !hasHeight;
  boolean flagHeight=!hasOtherLayoutParam && !hasWidth && hasHeight;
  if (hasOtherLayoutParam && (!hasWidth || !hasHeight) || flagWidth || flagHeight) {
    for (int i=0; i < length; i++) {
      Attr attribute=(Attr)attributes.item(i);
      String name=attribute.getLocalName();
      if (name != null && name.startsWith(ATTR_LAYOUT_RESOURCE_PREFIX) && (!ATTR_LAYOUT_WIDTH.equals(name) || flagWidth) && (!ATTR_LAYOUT_HEIGHT.equals(name) || flagHeight) && ANDROID_URI.equals(attribute.getNamespaceURI())) {
        String condition=!hasWidth && !hasHeight ? "both `layout_width` and `layout_height` are also specified" : !hasWidth ? "`layout_width` is also specified" : "`layout_height` is also specified";
        String message=String.format("Layout parameter `%1$s` ignored unless %2$s on `<include>` tag",name,condition);
        context.report(ISSUE,element,context.getLocation(attribute),message);
      }
    }
  }
}
