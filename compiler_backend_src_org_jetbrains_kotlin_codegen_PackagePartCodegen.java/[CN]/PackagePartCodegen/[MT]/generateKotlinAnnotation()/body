{
  List<DeclarationDescriptor> members=new ArrayList<DeclarationDescriptor>();
  for (  JetDeclaration declaration : element.getDeclarations()) {
    if (declaration instanceof JetNamedFunction) {
      SimpleFunctionDescriptor functionDescriptor=bindingContext.get(BindingContext.FUNCTION,declaration);
      members.add(functionDescriptor);
    }
 else     if (declaration instanceof JetProperty) {
      VariableDescriptor property=bindingContext.get(BindingContext.VARIABLE,declaration);
      members.add(property);
    }
  }
  JvmSerializationBindings bindings=v.getSerializationBindings();
  DescriptorSerializer serializer=DescriptorSerializer.createTopLevel(new JvmSerializerExtension(bindings,state.getTypeMapper()));
  ProtoBuf.Package packageProto=serializer.packagePartProto(members).build();
  AnnotationVisitor av=v.newAnnotation(asmDescByFqNameWithoutInnerClasses(JvmAnnotationNames.KOTLIN_FILE_FACADE),true);
  writeAnnotationData(av,serializer,packageProto);
  writeModuleName(av,state);
  av.visitEnd();
}
