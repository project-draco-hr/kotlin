{
  if (tasks == null) {
    tasks=Lists.newArrayList();
    for (int priority=priorityProvider.getMaxPriority(); priority >= 0; priority--) {
      final int finalPriority=priority;
      for (      Collection<ResolutionCandidate<D>> candidates : candidatesList) {
        Collection<ResolutionCandidate<D>> filteredCandidates=Collections2.filter(candidates,new Predicate<ResolutionCandidate<D>>(){
          @Override public boolean apply(          @Nullable ResolutionCandidate<D> input){
            return finalPriority == priorityProvider.getPriority(input);
          }
        }
);
        if (!filteredCandidates.isEmpty()) {
          tasks.add(new ResolutionTask<D,F>(filteredCandidates,reference,basicCallResolutionContext));
        }
      }
    }
  }
  return tasks;
}
