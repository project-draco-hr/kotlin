{
  PsiElement elementAtCaret=myFixture.getFile().findElementAt(myFixture.getEditor().getCaretModel().getOffset());
  JetClassOrObject classOrObject=PsiTreeUtil.getParentOfType(elementAtCaret,JetClassOrObject.class);
  assertNotNull("Caret should be inside class or object",classOrObject);
  JetFile jetFile=classOrObject.getContainingJetFile();
  Set<CallableMemberDescriptor> descriptors=handler.collectMethodsToGenerate(classOrObject);
  List<CallableMemberDescriptor> descriptorsList=new ArrayList<CallableMemberDescriptor>(descriptors);
  Collections.sort(descriptorsList,new Comparator<CallableMemberDescriptor>(){
    @Override public int compare(    @NotNull CallableMemberDescriptor desc1,    @NotNull CallableMemberDescriptor desc2){
      return desc1.getName().compareTo(desc2.getName());
    }
  }
);
  performGenerateCommand(classOrObject,OverrideImplementMethodsHandler.membersFromDescriptors(jetFile,descriptorsList));
}
