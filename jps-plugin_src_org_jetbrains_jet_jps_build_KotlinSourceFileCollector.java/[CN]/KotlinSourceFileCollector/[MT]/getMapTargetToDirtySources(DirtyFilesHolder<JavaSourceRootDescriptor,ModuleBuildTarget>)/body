{
  final Map<ModuleBuildTarget,List<File>> target2sources=new HashMap<ModuleBuildTarget,List<File>>();
  dirtyFilesHolder.processDirtyFiles(new FileProcessor<JavaSourceRootDescriptor,ModuleBuildTarget>(){
    @Override public boolean apply(    ModuleBuildTarget target,    File file,    JavaSourceRootDescriptor root) throws IOException {
      List<File> sources=target2sources.get(target);
      if (sources == null) {
        sources=new SmartList<File>();
        target2sources.put(target,sources);
      }
      if (isKotlinSourceFile(file)) {
        sources.add(file);
      }
      return true;
    }
  }
);
  return target2sources;
}
