{
  int typeinfoStatic=descriptor.getTypeConstructor().getParameters().size() > 0 ? 0 : Opcodes.ACC_STATIC;
  v.visitField(Opcodes.ACC_PRIVATE | typeinfoStatic,"$typeInfo","Ljet/typeinfo/TypeInfo;",null,null);
  if (isNonLiteralObject()) {
    Type type=JetTypeMapper.jetImplementationType(descriptor);
    v.visitField(Opcodes.ACC_PUBLIC | Opcodes.ACC_STATIC,"$instance",type.getDescriptor(),null,null);
  }
  final JetClassObject classObject=getClassObject();
  if (classObject != null) {
    Type type=Type.getObjectType(state.getTypeMapper().jvmName(classObject));
    v.visitField(Opcodes.ACC_PUBLIC | Opcodes.ACC_STATIC,"$classobj",type.getDescriptor(),null,null);
  }
  generateStaticInitializer();
  try {
    generatePrimaryConstructor();
  }
 catch (  RuntimeException e) {
    throw new RuntimeException("Error generating primary constructor of class " + myClass.getName() + " with kind "+ kind,e);
  }
  generateGetTypeInfo();
}
