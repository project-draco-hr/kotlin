{
  JetType originalInType=getInType();
  JetType inType=originalInType == null ? null : substitutor.substitute(originalInType,Variance.IN_VARIANCE);
  JetType originalOutType=getOutType();
  JetType outType=substitutor.substitute(originalOutType,Variance.OUT_VARIANCE);
  if (inType == null && outType == null) {
    return null;
  }
  JetType substitutedReceiverType;
  if (receiver.exists()) {
    substitutedReceiverType=substitutor.substitute(receiver.getType(),Variance.IN_VARIANCE);
    if (substitutedReceiverType == null)     return null;
  }
 else {
    substitutedReceiverType=null;
  }
  return new PropertyDescriptor(this,substitutedReceiverType,expectedThisObject.exists() ? new TransientReceiver(substitutor.substitute(expectedThisObject.getType(),Variance.IN_VARIANCE)) : expectedThisObject,inType,outType);
}
