{
  JetParameter loopParameter=expression.getLoopParameter();
  JetMultiDeclaration multiDeclaration=expression.getMultiParameter();
  JetExpression loopRange=expression.getLoopRange();
  TypePredicate loopRangeTypePredicate=AllTypes.INSTANCE$;
  ResolvedCall<?> iteratorResolvedCall=trace.get(BindingContext.LOOP_RANGE_ITERATOR_RESOLVED_CALL,loopRange);
  if (iteratorResolvedCall != null) {
    ReceiverValue iteratorReceiver=getExplicitReceiverValue(iteratorResolvedCall);
    if (iteratorReceiver.exists()) {
      loopRangeTypePredicate=PseudocodePackage.getReceiverTypePredicate(iteratorResolvedCall,iteratorReceiver);
    }
  }
  PseudoValue loopRangeValue=builder.getBoundValue(loopRange);
  PseudoValue value=builder.magic(loopRange != null ? loopRange : expression,null,ContainerUtil.createMaybeSingletonList(loopRangeValue),loopRangeValue != null ? Collections.singletonMap(loopRangeValue,loopRangeTypePredicate) : Collections.<PseudoValue,TypePredicate>emptyMap(),MagicKind.LOOP_RANGE_ITERATION).getOutputValue();
  if (loopParameter != null) {
    generateInitializer(loopParameter,value);
  }
 else   if (multiDeclaration != null) {
    for (    JetMultiDeclarationEntry entry : multiDeclaration.getEntries()) {
      generateInitializer(entry,value);
    }
  }
}
