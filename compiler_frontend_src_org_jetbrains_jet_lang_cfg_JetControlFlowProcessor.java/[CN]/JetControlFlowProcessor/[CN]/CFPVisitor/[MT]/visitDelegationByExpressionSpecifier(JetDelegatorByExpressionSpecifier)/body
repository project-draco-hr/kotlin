{
  generateInstructions(specifier.getDelegateExpression());
  List<PseudoValue> arguments=ContainerUtil.createMaybeSingletonList(builder.getBoundValue(specifier.getDelegateExpression()));
  TypePredicate expectedTypePredicate=PseudocodePackage.getSubtypesPredicate(trace.get(BindingContext.TYPE,specifier.getTypeReference()));
  if (expectedTypePredicate == null) {
    expectedTypePredicate=AllTypes.INSTANCE$;
  }
  builder.magic(specifier,specifier,arguments,PseudocodePackage.expectedTypeFor(expectedTypePredicate,arguments),MagicKind.VALUE_CONSUMER);
}
