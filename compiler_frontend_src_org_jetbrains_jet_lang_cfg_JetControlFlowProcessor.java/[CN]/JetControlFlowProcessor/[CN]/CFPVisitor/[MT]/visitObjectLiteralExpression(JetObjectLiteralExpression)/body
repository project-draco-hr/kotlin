{
  JetObjectDeclaration declaration=expression.getObjectDeclaration();
  value(declaration,inCondition);
  List<JetDeclaration> declarations=declaration.getDeclarations();
  List<JetDeclaration> functions=Lists.newArrayList();
  for (  JetDeclaration localDeclaration : declarations) {
    if (!(localDeclaration instanceof JetProperty) && !(localDeclaration instanceof JetClassInitializer)) {
      functions.add(localDeclaration);
    }
  }
  Queue<Label> declarationLabels=new LinkedList<Label>();
  for (  JetDeclaration function : functions) {
    declarationLabels.add(builder.createUnboundLabel());
  }
  builder.nondeterministicJump(Lists.newArrayList(declarationLabels));
  for (  JetDeclaration function : functions) {
    if (function instanceof JetNamedDeclaration) {
      if (function instanceof JetDeclarationWithBody) {
        JetExpression bodyExpression=((JetDeclarationWithBody)function).getBodyExpression();
        generate(function,bodyExpression != null ? bodyExpression : function);
      }
 else {
        generate(function,function);
      }
    }
 else {
      generate(declaration,function);
    }
    builder.bindLabel(declarationLabels.remove());
  }
  builder.read(expression);
}
