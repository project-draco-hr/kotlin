{
  mark(expression);
  JetFinallySection finallyBlock=expression.getFinallyBlock();
  final FinallyBlockGenerator finallyBlockGenerator=new FinallyBlockGenerator(finallyBlock,context);
  if (finallyBlock != null) {
    builder.enterTryFinally(new GenerationTrigger(){
      private boolean working=false;
      @Override public void generate(){
        if (working)         return;
        working=true;
        finallyBlockGenerator.generate();
        working=false;
      }
    }
);
  }
  List<JetCatchClause> catchClauses=expression.getCatchClauses();
  boolean hasCatches=!catchClauses.isEmpty();
  Label onException=null;
  if (hasCatches) {
    onException=builder.createUnboundLabel("onException");
    builder.nondeterministicJump(onException);
  }
  Label onExceptionToFinallyBlock=null;
  if (finallyBlock != null) {
    onExceptionToFinallyBlock=builder.createUnboundLabel("onExceptionToFinallyBlock");
    builder.nondeterministicJump(onExceptionToFinallyBlock);
  }
  generateInstructions(expression.getTryBlock(),context);
  if (hasCatches) {
    Label afterCatches=builder.createUnboundLabel("afterCatches");
    builder.jump(afterCatches);
    builder.bindLabel(onException);
    LinkedList<Label> catchLabels=Lists.newLinkedList();
    int catchClausesSize=catchClauses.size();
    for (int i=0; i < catchClausesSize - 1; i++) {
      catchLabels.add(builder.createUnboundLabel("catch " + i));
    }
    if (!catchLabels.isEmpty()) {
      builder.nondeterministicJump(catchLabels);
    }
    boolean isFirst=true;
    for (    JetCatchClause catchClause : catchClauses) {
      builder.enterLexicalScope(catchClause);
      if (!isFirst) {
        builder.bindLabel(catchLabels.remove());
      }
 else {
        isFirst=false;
      }
      JetParameter catchParameter=catchClause.getCatchParameter();
      if (catchParameter != null) {
        builder.declareParameter(catchParameter);
        builder.write(catchParameter,catchParameter);
      }
      JetExpression catchBody=catchClause.getCatchBody();
      if (catchBody != null) {
        generateInstructions(catchBody,NOT_IN_CONDITION);
      }
      builder.jump(afterCatches);
      builder.exitLexicalScope(catchClause);
    }
    builder.bindLabel(afterCatches);
  }
  if (finallyBlock != null) {
    builder.exitTryFinally();
    Label skipFinallyToErrorBlock=builder.createUnboundLabel("skipFinallyToErrorBlock");
    builder.jump(skipFinallyToErrorBlock);
    builder.bindLabel(onExceptionToFinallyBlock);
    finallyBlockGenerator.generate();
    builder.jumpToError();
    builder.bindLabel(skipFinallyToErrorBlock);
    finallyBlockGenerator.generate();
  }
}
