{
  mark(expression);
  JetExpression selectorExpression=expression.getSelectorExpression();
  if (selectorExpression != null) {
    final Ref<Boolean> error=new Ref<Boolean>(false);
    JetControlFlowBuilderAdapter adapter=new JetControlFlowBuilderAdapter(){
      @NotNull @Override protected JetControlFlowBuilder getDelegateBuilder(){
        return builder;
      }
      @Override public void compilationError(      @NotNull JetElement element,      @NotNull String message){
        error.set(true);
        super.compilationError(element,message);
      }
    }
;
    new CFPVisitor(adapter).generateInstructions(selectorExpression,NOT_IN_CONDITION);
    if (error.get()) {
      generateInstructions(expression.getReceiverExpression(),NOT_IN_CONDITION);
    }
  }
}
