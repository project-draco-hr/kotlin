{
  List<OccurrenceInfo> currentOccurrenceInfos=null;
  for (  String line : file.content.split("\n")) {
    Matcher atOutputFileMatcher=AT_OUTPUT_FILE_PATTERN.matcher(line);
    if (atOutputFileMatcher.matches()) {
      String outputFileName=atOutputFileMatcher.group(1);
      if (occurrenceMap.containsKey(outputFileName)) {
        throw new AssertionError(file.name + ": Expected occurrences for output file " + outputFileName+ " were already provided");
      }
      currentOccurrenceInfos=new ArrayList<OccurrenceInfo>();
      occurrenceMap.put(outputFileName,currentOccurrenceInfos);
    }
    Matcher expectedOccurrencesMatcher=EXPECTED_OCCURRENCES_PATTERN.matcher(line);
    if (expectedOccurrencesMatcher.matches()) {
      if (currentOccurrenceInfos == null) {
        throw new AssertionError(file.name + ": Should specify output file with '// @<OUTPUT_FILE_NAME>:' before expectations");
      }
      OccurrenceInfo occurrenceInfo=parseOccurrenceInfo(expectedOccurrencesMatcher);
      currentOccurrenceInfos.add(occurrenceInfo);
    }
  }
}
