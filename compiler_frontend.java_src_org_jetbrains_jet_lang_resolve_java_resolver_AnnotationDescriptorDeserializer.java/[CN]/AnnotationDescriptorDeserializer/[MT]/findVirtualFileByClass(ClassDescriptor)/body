{
  FqName fqName=kotlinFqNameToJavaFqName(naiveKotlinFqName(descriptor));
  VirtualFile fileForKotlinFile=virtualFileFinder.find(fqName);
  if (fileForKotlinFile != null) {
    return fileForKotlinFile;
  }
  PsiClass psiClass=psiClassFinder.findPsiClass(fqName,PsiClassFinder.RuntimeClassesHandleMode.IGNORE);
  if (psiClass == null) {
    throw new IllegalStateException("Psi class is not found for class: " + descriptor);
  }
  VirtualFile outerClassFile=psiClass.getContainingFile().getVirtualFile();
  if (outerClassFile == null) {
    throw new IllegalStateException("Outer class file is not found for class: " + descriptor);
  }
  ClassId id=ClassId.fromFqNameAndContainingDeclaration(fqName,(ClassOrNamespaceDescriptor)descriptor.getContainingDeclaration());
  VirtualFile virtualFile=getVirtualFile(id,outerClassFile);
  if (virtualFile == null) {
    throw new IllegalStateException("Virtual file is not found for class: " + descriptor);
  }
  return virtualFile;
}
