{
  Collection<Pseudocode> pseudocodes=data.values();
  StringBuilder instructionDump=new StringBuilder();
  int i=0;
  for (  Pseudocode pseudocode : pseudocodes) {
    JetElement correspondingElement=pseudocode.getCorrespondingElement();
    String label;
    if (correspondingElement instanceof JetNamedDeclaration) {
      JetNamedDeclaration namedDeclaration=(JetNamedDeclaration)correspondingElement;
      label=namedDeclaration.getName();
    }
 else {
      label="anonymous_" + i++;
    }
    instructionDump.append("== ").append(label).append(" ==\n");
    instructionDump.append(correspondingElement.getText());
    instructionDump.append("\n---------------------\n");
    pseudocode.dumpInstructions(instructionDump);
    instructionDump.append("=====================\n");
  }
  String expectedInstructionsFileName=getTestDataPath() + "/" + getTestFilePath().replace(".jet",".instructions");
  File expectedInstructionsFile=new File(expectedInstructionsFileName);
  if (!expectedInstructionsFile.exists()) {
    FileUtil.writeToFile(expectedInstructionsFile,instructionDump.toString());
    fail("No expected instructions for " + name + " generated result is written into "+ expectedInstructionsFileName);
  }
  String expectedInstructions=FileUtil.loadFile(expectedInstructionsFile);
  assertEquals(expectedInstructions,instructionDump.toString());
}
