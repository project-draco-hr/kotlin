{
  tc.testPropertyAccessorModalityInClass("class A { val a: Int = 0 }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("class A { val a: Int = 0; get }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("class A { val a: Int = 0; final get }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("class A { final val a: Int = 0 }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("class A { final val a: Int = 0; get }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("class A { final val a: Int = 0; final get }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("open class A { val a: Int = 0 }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("open class A { val a: Int = 0; get }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("open class A { val a: Int = 0; final get }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("open class A { open val a: Int = 0 }",Modality.OPEN);
  tc.testPropertyAccessorModalityInClass("open class A { open val a: Int = 0; get }",Modality.OPEN);
  tc.testPropertyAccessorModalityInClass("open class A { open val a: Int = 0; open get }",Modality.OPEN);
  tc.testPropertyAccessorModalityInClass("open class A { open val a: Int = 0; final get }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("open class A { final val a: Int = 0 }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("open class A { final val a: Int = 0; get }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("open class A { final val a: Int = 0; final get }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("abstract class A { abstract val a: Int }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInClass("abstract class A { abstract val a: Int get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInClass("abstract class A { abstract val a: Int open get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInClass("abstract class A { abstract val a: Int abstract get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInClass("abstract class A { val a: Int get() = 10 }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("abstract class A { val a: Int open get() = 10 }",Modality.OPEN);
  tc.testPropertyAccessorModalityInClass("abstract class A { val a: Int final get() = 10 }",Modality.FINAL);
  tc.testPropertyAccessorModalityInClass("abstract class A { open abstract val a: Int }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInClass("abstract class A { open abstract val a: Int get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInClass("abstract class A { open abstract val a: Int open get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInClass("abstract class A { open abstract val a: Int abstract get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInClass("abstract class A { open val a: Int get() = 10 }",Modality.OPEN);
  tc.testPropertyAccessorModalityInClass("abstract class A { open val a: Int open get() = 10 }",Modality.OPEN);
  tc.testPropertyAccessorModalityInClass("abstract class A { open val a: Int final get() = 10 }",Modality.FINAL);
  tc.testPropertyAccessorModalityInTrait("interface A { val a: Int }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInTrait("interface A { val a: Int get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInTrait("interface A { val a: Int get() = 1 }",Modality.OPEN);
  tc.testPropertyAccessorModalityInTrait("interface A { val a: Int abstract get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInTrait("interface A { val a: Int open get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInTrait("interface A { val a: Int open get() = 1 }",Modality.OPEN);
  tc.testPropertyAccessorModalityInTrait("interface A { val a: Int final get }",Modality.FINAL);
  tc.testPropertyAccessorModalityInTrait("interface A { val a: Int final get() = 1 }",Modality.FINAL);
  tc.testPropertyAccessorModalityInTrait("abstract interface A { val a: Int }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInTrait("abstract interface A { val a: Int get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInTrait("abstract interface A { val a: Int get() = 1 }",Modality.OPEN);
  tc.testPropertyAccessorModalityInTrait("abstract interface A { val a: Int abstract get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInTrait("abstract interface A { val a: Int open get }",Modality.ABSTRACT);
  tc.testPropertyAccessorModalityInTrait("abstract interface A { val a: Int open get() = 1 }",Modality.OPEN);
  tc.testPropertyAccessorModalityInTrait("abstract interface A { val a: Int final get }",Modality.FINAL);
  tc.testPropertyAccessorModalityInTrait("abstract interface A { val a: Int final get() = 1 }",Modality.FINAL);
}
