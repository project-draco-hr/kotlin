{
  List<Instruction> instructions=pseudocode.getInstructionsIncludingDeadCode();
  Set<Instruction> remainedAfterPostProcessInstructions=Sets.newHashSet(pseudocode.getInstructions());
  List<PseudocodeLabel> labels=pseudocode.getLabels();
  int instructionColumnWidth=countInstructionColumnWidth(instructions);
  for (int i=0; i < instructions.size(); i++) {
    Instruction instruction=instructions.get(i);
    for (    PseudocodeLabel label : labels) {
      if (label.getTargetInstructionIndex() == i) {
        out.append(label).append(":\n");
      }
    }
    StringBuilder line=new StringBuilder();
    Instruction next=i == instructions.size() - 1 ? null : instructions.get(i + 1);
    Instruction prev=i == 0 ? null : instructions.get(i - 1);
    String prefix=getIsDeadInstructionPrefix(instruction,remainedAfterPostProcessInstructions) + getDepthInstructionPrefix(instruction,prev);
    line.append(formatInstruction(instruction,instructionColumnWidth,prefix));
    line.append(getInstructionData.invoke(instruction,next,prev));
    out.append(StringUtil.trimTrailing(line.toString()));
    out.append("\n");
  }
}
