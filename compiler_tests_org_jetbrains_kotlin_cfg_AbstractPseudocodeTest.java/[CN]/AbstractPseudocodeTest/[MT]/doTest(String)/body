{
  File file=new File(fileName);
  KtFile jetFile=JetTestUtils.loadJetFile(getProject(),file);
  Map<KtElement,Pseudocode> data=new LinkedHashMap<KtElement,Pseudocode>();
  AnalysisResult analysisResult=JetTestUtils.analyzeFile(jetFile,getEnvironment());
  List<KtDeclaration> declarations=jetFile.getDeclarations();
  BindingContext bindingContext=analysisResult.getBindingContext();
  for (  KtDeclaration declaration : declarations) {
    addDeclaration(data,bindingContext,declaration);
    if (declaration instanceof KtDeclarationContainer) {
      for (      KtDeclaration member : ((KtDeclarationContainer)declaration).getDeclarations()) {
        if (member instanceof KtNamedFunction || member instanceof KtSecondaryConstructor) {
          addDeclaration(data,bindingContext,member);
        }
      }
    }
  }
  try {
    processCFData(file,data,bindingContext);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
    if ("true".equals(System.getProperty("kotlin.control.flow.test.dump.graphs"))) {
      CFGraphToDotFilePrinter.dumpDot(file,data.values());
    }
  }
}
