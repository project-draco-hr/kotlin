{
  File file=new File(fileName);
  JetFile jetFile=JetTestUtils.loadJetFile(getProject(),file);
  Map<JetElement,Pseudocode> data=new LinkedHashMap<JetElement,Pseudocode>();
  AnalysisResult analysisResult=JetTestUtils.analyzeFile(jetFile);
  List<JetDeclaration> declarations=jetFile.getDeclarations();
  BindingContext bindingContext=analysisResult.getBindingContext();
  for (  JetDeclaration declaration : declarations) {
    addDeclaration(data,bindingContext,declaration);
    if (declaration instanceof JetDeclarationContainer) {
      for (      JetDeclaration member : ((JetDeclarationContainer)declaration).getDeclarations()) {
        if (member instanceof JetNamedFunction || member instanceof JetSecondaryConstructor) {
          addDeclaration(data,bindingContext,member);
        }
      }
    }
  }
  try {
    processCFData(file,data,bindingContext);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
    if ("true".equals(System.getProperty("kotlin.control.flow.test.dump.graphs"))) {
      CFGraphToDotFilePrinter.dumpDot(file,data.values());
    }
  }
}
