{
  final Type leftType=expressionType(expression.getLeft());
  final Type rightType=expressionType(expression.getRight());
  if (isNumberPrimitive(leftType) && leftType == rightType) {
    generateCompareOp(expression,opToken,leftType);
  }
 else {
    gen(expression.getLeft(),leftType);
    gen(expression.getRight(),rightType);
    if (opToken == JetTokens.EQEQEQ || opToken == JetTokens.EXCLEQEQEQ) {
      myStack.push(StackValue.cmp(opToken,leftType));
    }
 else {
      generateNullSafeEquals(opToken);
    }
  }
}
