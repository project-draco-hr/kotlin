{
  final JetExpression array=expression.getArrayExpression();
  final Type arrayType=expressionType(array);
  gen(array,arrayType);
  generateArrayIndex(expression);
  if (arrayType.getSort() == Type.ARRAY) {
    final Type elementType=arrayType.getElementType();
    return StackValue.arrayElement(elementType);
  }
 else {
    final PsiElement declaration=BindingContextUtils.resolveToDeclarationPsiElement(bindingContext,expression);
    final CallableMethod accessor;
    if (declaration instanceof PsiMethod) {
      accessor=JetTypeMapper.mapToCallableMethod((PsiMethod)declaration);
    }
 else     if (declaration instanceof JetNamedFunction) {
      accessor=typeMapper.mapToCallableMethod((JetNamedFunction)declaration);
    }
 else {
      throw new UnsupportedOperationException("unknown accessor type");
    }
    boolean isGetter=accessor.getSignature().getName().equals("get");
    return StackValue.collectionElement(isGetter ? accessor.getSignature().getReturnType() : accessor.getSignature().getArgumentTypes()[1],isGetter ? accessor : null,isGetter ? null : accessor);
  }
}
