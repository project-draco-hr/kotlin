{
  Label blockStart=new Label();
  v.mark(blockStart);
  for (  JetElement statement : statements) {
    if (statement instanceof JetProperty) {
      final VariableDescriptor variableDescriptor=bindingContext.getPropertyDescriptor((JetProperty)statement);
      final Type type=typeMapper.mapType(variableDescriptor.getOutType());
      myMap.enter(variableDescriptor,type.getSize());
    }
  }
  for (int i=0, statementsSize=statements.size(); i < statementsSize; i++) {
    JetElement statement=statements.get(i);
    if (i == statements.size() - 1) {
      gen(statement);
    }
 else {
      gen(statement,Type.VOID_TYPE);
    }
  }
  Label blockEnd=new Label();
  v.mark(blockEnd);
  for (  JetElement statement : statements) {
    if (statement instanceof JetProperty) {
      JetProperty var=(JetProperty)statement;
      VariableDescriptor variableDescriptor=bindingContext.getPropertyDescriptor(var);
      Type outType=typeMapper.mapType(variableDescriptor.getOutType());
      int index=myMap.leave(variableDescriptor);
      v.visitLocalVariable(var.getName(),outType.getDescriptor(),null,blockStart,blockEnd,index);
    }
  }
}
