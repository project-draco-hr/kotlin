{
  if (bindingContext.isBlock(expression)) {
    generateBlock(expression.getFunctionLiteral().getBodyExpression().getStatements());
  }
 else {
    final GeneratedAnonymousClassDescriptor closure=state.generateClosure(expression,this,context);
    v.anew(Type.getObjectType(closure.getClassname()));
    v.dup();
    final Method cons=closure.getConstructor();
    for (int i=0; i < closure.getArgs().size(); i++) {
      StackValue arg=closure.getArgs().get(i);
      arg.put(cons.getArgumentTypes()[i],v);
    }
    v.invokespecial(closure.getClassname(),"<init>",cons.getDescriptor());
  }
}
