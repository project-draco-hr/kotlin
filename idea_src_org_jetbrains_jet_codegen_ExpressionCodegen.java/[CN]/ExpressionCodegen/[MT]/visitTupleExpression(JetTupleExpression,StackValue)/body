{
  final List<JetExpression> entries=expression.getEntries();
  if (entries.size() > 22) {
    throw new UnsupportedOperationException("tuple too large");
  }
  final String className="jet/Tuple" + entries.size();
  Type tupleType=Type.getObjectType(className);
  StringBuilder signature=new StringBuilder("(");
  for (int i=0; i != entries.size(); ++i) {
    signature.append("Ljava/lang/Object;");
  }
  signature.append(")V");
  v.anew(tupleType);
  v.dup();
  for (  JetExpression entry : entries) {
    gen(entry,OBJECT_TYPE);
  }
  v.invokespecial(className,"<init>",signature.toString());
  return StackValue.onStack(tupleType);
}
