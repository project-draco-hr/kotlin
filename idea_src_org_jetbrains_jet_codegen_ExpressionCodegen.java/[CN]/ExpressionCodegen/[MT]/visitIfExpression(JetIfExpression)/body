{
  JetType expressionType=bindingContext.getExpressionType(expression);
  Type asmType=typeMapper.mapType(expressionType);
  gen(expression.getCondition(),Type.BOOLEAN_TYPE);
  JetExpression thenExpression=expression.getThen();
  JetExpression elseExpression=expression.getElse();
  if (thenExpression == null && elseExpression == null) {
    throw new CompilationException();
  }
  if (thenExpression == null) {
    generateSingleBranchIf(elseExpression,false);
    return;
  }
  if (elseExpression == null) {
    generateSingleBranchIf(thenExpression,true);
    return;
  }
  Label elseLabel=new Label();
  v.ifeq(elseLabel);
  gen(thenExpression,asmType);
  Label endLabel=new Label();
  v.goTo(endLabel);
  v.mark(elseLabel);
  gen(elseExpression,asmType);
  v.mark(endLabel);
}
