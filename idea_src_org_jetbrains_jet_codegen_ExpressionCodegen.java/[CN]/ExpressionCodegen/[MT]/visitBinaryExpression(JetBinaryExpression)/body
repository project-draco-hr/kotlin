{
  if (expression.getOperationReference().getReferencedNameElementType() == JetTokens.EQ) {
    generateAssignmentExpression(expression);
    return;
  }
  DeclarationDescriptor op=bindingContext.resolveReferenceExpression(expression.getOperationReference());
  if (op instanceof FunctionDescriptor) {
    DeclarationDescriptor cls=op.getContainingDeclaration();
    if (cls instanceof ClassDescriptor && cls.getName().equals("Int")) {
      if (op.getName().equals("plus")) {
        JetType returnType=((FunctionDescriptor)op).getUnsubstitutedReturnType();
        if (returnType.equals(stdlib.getIntType())) {
          gen(expression.getLeft(),Type.INT_TYPE);
          gen(expression.getRight(),Type.INT_TYPE);
          v.add(Type.INT_TYPE);
          myStack.push(StackValue.onStack(Type.INT_TYPE));
          return;
        }
      }
    }
  }
  throw new UnsupportedOperationException("Don't know how to generate binary op " + expression);
}
