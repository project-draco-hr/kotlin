{
  if (pattern instanceof JetTypePattern) {
    JetTypeReference typeReference=((JetTypePattern)pattern).getTypeReference();
    JetType jetType=bindingContext.resolveTypeReference(typeReference);
    generateInstanceOf(expressionToMatch,jetType,false);
    StackValue value=StackValue.onStack(Type.BOOLEAN_TYPE);
    return negated ? StackValue.not(value) : value;
  }
 else   if (pattern instanceof JetWildcardPattern) {
    return StackValue.constant(!negated,Type.BOOLEAN_TYPE);
  }
 else {
    throw new UnsupportedOperationException("Unsupported pattern type: " + pattern);
  }
}
