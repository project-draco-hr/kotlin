{
  if (builder == null) {
    builder=new NamespaceLikeBuilder(){
      @Override public void addClassifierDescriptor(      @NotNull MutableClassDescriptorLite classDescriptor){
        getMemberScope().addClassifierDescriptor(classDescriptor);
      }
      @Override public void addFunctionDescriptor(      @NotNull SimpleFunctionDescriptor functionDescriptor){
        getMemberScope().addFunctionDescriptor(functionDescriptor);
      }
      @Override public void addPropertyDescriptor(      @NotNull PropertyDescriptor propertyDescriptor){
        getMemberScope().addPropertyDescriptor(propertyDescriptor);
      }
      @NotNull @Override public DeclarationDescriptor getOwnerForChildren(){
        return NamespaceDescriptorImpl.this;
      }
      @Override public ClassObjectStatus setClassObjectDescriptor(      @NotNull MutableClassDescriptorLite classObjectDescriptor){
        throw new IllegalStateException("Must be guaranteed not to happen by the parser");
      }
    }
;
  }
  return builder;
}
