{
  for (  PsiMethod method : accessors) {
    List<PsiMethod> implementations=new ArrayList<PsiMethod>();
    MethodImplementationsSearch.getOverridingMethods(method,implementations,scope);
    for (    PsiMethod implementation : implementations) {
      if (isDelegated(implementation))       continue;
      PsiElement mirrorElement=implementation instanceof KtLightMethod ? ((KtLightMethod)implementation).getOrigin() : null;
      if (mirrorElement instanceof KtProperty || mirrorElement instanceof KtParameter) {
        if (!consumer.process(mirrorElement)) {
          return false;
        }
      }
 else       if (mirrorElement instanceof KtPropertyAccessor && mirrorElement.getParent() instanceof KtProperty) {
        if (!consumer.process(mirrorElement.getParent())) {
          return false;
        }
      }
 else {
        if (!consumer.process(implementation)) {
          return false;
        }
      }
    }
  }
  return true;
}
