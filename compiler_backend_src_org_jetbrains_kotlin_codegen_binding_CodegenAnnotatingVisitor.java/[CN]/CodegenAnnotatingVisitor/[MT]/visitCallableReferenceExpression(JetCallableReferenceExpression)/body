{
  FunctionDescriptor functionDescriptor=bindingContext.get(FUNCTION,expression);
  if (functionDescriptor == null)   return;
  ResolvedCall<?> referencedFunction=CallUtilPackage.getResolvedCall(expression.getCallableReference(),bindingContext);
  if (referencedFunction == null)   return;
  Collection<JetType> supertypes=runtimeTypes.getSupertypesForFunctionReference((FunctionDescriptor)referencedFunction.getResultingDescriptor());
  String name=inventAnonymousClassName(expression);
  ClassDescriptor classDescriptor=recordClassForFunction(expression,functionDescriptor,supertypes,name);
  recordClosure(classDescriptor,name);
  classStack.push(classDescriptor);
  nameStack.push(name);
  super.visitCallableReferenceExpression(expression);
  nameStack.pop();
  classStack.pop();
}
