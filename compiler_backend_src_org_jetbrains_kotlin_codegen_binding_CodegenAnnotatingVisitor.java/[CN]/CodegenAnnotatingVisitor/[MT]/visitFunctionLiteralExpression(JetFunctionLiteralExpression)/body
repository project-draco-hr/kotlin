{
  JetFunctionLiteral functionLiteral=expression.getFunctionLiteral();
  FunctionDescriptor functionDescriptor=(FunctionDescriptor)bindingContext.get(DECLARATION_TO_DESCRIPTOR,functionLiteral);
  if (functionDescriptor == null)   return;
  String name=inventAnonymousClassName(expression);
  Collection<JetType> supertypes=runtimeTypes.getSupertypesForClosure(functionDescriptor);
  ClassDescriptor classDescriptor=recordClassForFunction(functionLiteral,functionDescriptor,supertypes,name);
  recordClosure(classDescriptor,name);
  pushClassDescriptor(classDescriptor);
  nameStack.push(name);
  super.visitFunctionLiteralExpression(expression);
  nameStack.pop();
  popClassDescriptor();
}
