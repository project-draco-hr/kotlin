{
  return KotlinPackage.map(KotlinPackage.filter(declarationProvider.getOwnerInfo().getClassObjects(),new Function1<JetClassObject,Boolean>(){
    @Override public Boolean invoke(    JetClassObject classObject){
      return classObject != declarationProvider.getOwnerInfo().getClassObject();
    }
  }
),new Function1<JetClassObject,ClassDescriptor>(){
    @Override public ClassDescriptor invoke(    JetClassObject classObject){
      return extraClassObjectDescriptors.invoke(classObject);
    }
  }
);
}
