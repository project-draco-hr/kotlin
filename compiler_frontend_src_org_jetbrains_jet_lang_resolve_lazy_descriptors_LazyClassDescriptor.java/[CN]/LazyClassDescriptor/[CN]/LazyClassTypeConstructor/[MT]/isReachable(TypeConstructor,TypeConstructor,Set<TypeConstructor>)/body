{
  if (!visited.add(from))   return false;
  Collection<JetType> supertypes=from instanceof LazyClassTypeConstructor ? ((LazyClassTypeConstructor)from).supertypes.invoke().getAllSupertypes() : from.getSupertypes();
  for (  JetType supertype : supertypes) {
    TypeConstructor supertypeConstructor=supertype.getConstructor();
    if (supertypeConstructor == to) {
      return true;
    }
    if (isReachable(supertypeConstructor,to,visited)) {
      return true;
    }
  }
  return false;
}
