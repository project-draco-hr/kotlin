{
  JetCallExpression call=(JetCallExpression)element;
  ResolvedCall<? extends CallableDescriptor> resolvedCall=codegen.getBindingContext().get(BindingContext.RESOLVED_CALL,call.getCalleeExpression());
  CallableDescriptor resultingDescriptor=resolvedCall.getResultingDescriptor();
  Type type=state.getInjector().getJetTypeMapper().mapType(resultingDescriptor.getReturnType().getArguments().get(0).getType(),MapTypeMode.VALUE);
  JvmPrimitiveType primitiveType=JvmPrimitiveType.getByAsmType(type);
  if (primitiveType != null) {
    v.getstatic(primitiveType.getWrapper().getAsmType().getInternalName(),"TYPE","Ljava/lang/Class;");
  }
 else {
    v.aconst(type);
  }
  return StackValue.onStack(JetTypeMapper.JL_CLASS_TYPE);
}
