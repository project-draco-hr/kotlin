{
  String value=(String)annotation.getValue(ATTR_VALUE);
  if (value != null && !value.isEmpty()) {
    for (int i=0, n=value.length(); i < n; i++) {
      char c=value.charAt(i);
      if (c == '&' || c == '|' || c == '^') {
        return Complex.parse(annotation,context,value);
      }
    }
    return new Single(annotation,value);
  }
  Object v=annotation.getValue(ATTR_ANY_OF);
  if (v != null) {
    if (v instanceof String[]) {
      String[] anyOf=(String[])v;
      if (anyOf.length > 0) {
        return new Many(annotation,BinaryOperator.LOGICAL_OR,anyOf);
      }
    }
 else     if (v instanceof String) {
      String[] anyOf=new String[]{(String)v};
      return new Many(annotation,BinaryOperator.LOGICAL_OR,anyOf);
    }
  }
  v=annotation.getValue(ATTR_ALL_OF);
  if (v != null) {
    if (v instanceof String[]) {
      String[] allOf=(String[])v;
      if (allOf.length > 0) {
        return new Many(annotation,BinaryOperator.LOGICAL_AND,allOf);
      }
    }
 else     if (v instanceof String) {
      String[] allOf=new String[]{(String)v};
      return new Many(annotation,BinaryOperator.LOGICAL_AND,allOf);
    }
  }
  return NONE;
}
