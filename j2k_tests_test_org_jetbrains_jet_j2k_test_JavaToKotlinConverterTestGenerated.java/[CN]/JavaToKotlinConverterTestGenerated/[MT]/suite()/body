{
  TestSuite suite=new TestSuite("JavaToKotlinConverterTestGenerated");
  suite.addTestSuite(JavaToKotlinConverterTestGenerated.class);
  suite.addTestSuite(Annotations.class);
  suite.addTestSuite(AnonymousBlock.class);
  suite.addTestSuite(ArrayAccessExpression.class);
  suite.addTestSuite(ArrayInitializerExpression.class);
  suite.addTestSuite(ArrayType.class);
  suite.addTestSuite(AssertStatement.class);
  suite.addTestSuite(AssignmentExpression.class);
  suite.addTestSuite(BinaryExpression.class);
  suite.addTestSuite(BoxedType.class);
  suite.addTestSuite(BreakStatement.class);
  suite.addTestSuite(CallChainExpression.class);
  suite.addTestSuite(Class.class);
  suite.addTestSuite(ClassExpression.class);
  suite.addTestSuite(ConditionalExpression.class);
  suite.addTestSuite(Constructors.class);
  suite.addTestSuite(ContinueStatement.class);
  suite.addTestSuite(DeclarationStatement.class);
  suite.addTestSuite(DoWhileStatement.class);
  suite.addTestSuite(Enum.class);
  suite.addTestSuite(Equals.class);
  suite.addTestSuite(Field.class);
  suite.addTestSuite(For.class);
  suite.addTestSuite(ForeachStatement.class);
  suite.addTestSuite(Formatting.class);
  suite.addTestSuite(Function.class);
  suite.addTestSuite(Identifier.class);
  suite.addTestSuite(IfStatement.class);
  suite.addTestSuite(ImportStatement.class);
  suite.addTestSuite(InProjectionType.class);
  suite.addTestSuite(Inheritance.class);
  suite.addTestSuite(IsOperator.class);
  suite.addTestSuite(Issues.class);
  suite.addTestSuite(KotlinApiAccess.class);
  suite.addTestSuite(KotlinExclusion.class);
  suite.addTestSuite(LabelStatement.class);
  suite.addTestSuite(List.class);
  suite.addTestSuite(LiteralExpression.class);
  suite.addTestSuite(LocalVariable.class);
  suite.addTestSuite(MethodCallExpression.class);
  suite.addTestSuite(Misc.class);
  suite.addTestSuite(NewClassExpression.class);
  suite.addTestSuite(Nullability.class);
  suite.addTestSuite(ObjectLiteral.class);
  suite.addTestSuite(OutProjectionType.class);
  suite.addTestSuite(PackageStatement.class);
  suite.addTestSuite(ParenthesizedExpression.class);
  suite.addTestSuite(PolyadicExpression.class);
  suite.addTestSuite(PostfixOperator.class);
  suite.addTestSuite(PrefixOperator.class);
  suite.addTestSuite(RawGenerics.class);
  suite.addTestSuite(ReturnStatement.class);
  suite.addTestSuite(Settings.class);
  suite.addTestSuite(StarProjectionType.class);
  suite.addTestSuite(SuperExpression.class);
  suite.addTestSuite(Switch.class);
  suite.addTestSuite(SynchronizedStatement.class);
  suite.addTestSuite(ThisExpression.class);
  suite.addTestSuite(ThrowStatement.class);
  suite.addTestSuite(Trait.class);
  suite.addTestSuite(TryStatement.class);
  suite.addTestSuite(TypeCastExpression.class);
  suite.addTestSuite(TypeParameters.class);
  suite.addTestSuite(VarArg.class);
  suite.addTestSuite(WhileStatement.class);
  return suite;
}
