{
  Pair<String,ClassVisitor> nameAndVisitor=forAnonymousSubclass(literal.getObjectDeclaration());
  final ClassContext objectContext=classContext.intoClass(getBindingContext().get(BindingContext.CLASS,literal.getObjectDeclaration()),OwnerKind.IMPLEMENTATION);
  new ImplementationBodyCodegen(literal.getObjectDeclaration(),objectContext,nameAndVisitor.getSecond(),this).generate();
  return new GeneratedAnonymousClassDescriptor(nameAndVisitor.first,new Method("<init>","()V"),false);
}
