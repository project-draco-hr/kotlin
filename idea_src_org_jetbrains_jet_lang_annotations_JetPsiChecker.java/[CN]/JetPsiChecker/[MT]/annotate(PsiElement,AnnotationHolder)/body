{
  if (element instanceof JetFile) {
    Project project=element.getProject();
    JetFile file=(JetFile)element;
    try {
      final BindingContext bindingContext=AnalyzingUtils.analyzeFile(file,new ErrorHandler(){
        @Override public void unresolvedReference(        JetReferenceExpression referenceExpression){
          holder.createErrorAnnotation(referenceExpression,"Unresolved");
        }
      }
);
      file.getRootNamespace().accept(new JetVisitor(){
        @Override public void visitClass(        JetClass klass){
          for (          JetDelegationSpecifier specifier : klass.getDelegationSpecifiers()) {
            JetTypeReference typeReference=specifier.getTypeReference();
            Type type=bindingContext.resolveTypeReference(typeReference);
            holder.createWeakWarningAnnotation(typeReference,type.toString());
          }
        }
        @Override public void visitNamespace(        JetNamespace namespace){
          for (          JetDeclaration declaration : namespace.getDeclarations()) {
            declaration.accept(this);
          }
        }
      }
);
    }
 catch (    Throwable e) {
      holder.createErrorAnnotation(new TextRange(0,1),e.getClass().getCanonicalName() + ": " + e.getMessage());
      e.printStackTrace();
    }
  }
}
