{
  DeclarationDescriptor parent=calleeDescriptor.getContainingDeclaration();
  if (!(parent instanceof ClassDescriptor)) {
    return false;
  }
  KotlinBuiltIns builtIns=KotlinBuiltIns.getInstance();
  JetType defaultType=((ClassDescriptor)parent).getDefaultType();
  if (builtIns.isFunctionOrExtensionFunctionType(defaultType)) {
    return true;
  }
  for (  JetType supertype : TypeUtils.getAllSupertypes(defaultType)) {
    if (builtIns.isFunctionOrExtensionFunctionType(supertype)) {
      return true;
    }
  }
  return false;
}
