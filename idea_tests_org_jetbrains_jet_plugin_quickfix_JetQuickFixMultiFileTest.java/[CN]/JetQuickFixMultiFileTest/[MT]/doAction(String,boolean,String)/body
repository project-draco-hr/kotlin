{
  List<IntentionAction> availableActions=getAvailableActions();
  IntentionAction action=LightQuickFixTestCase.findActionWithText(availableActions,text);
  if (action == null) {
    if (actionShouldBeAvailable) {
      List<String> texts=getActionsTexts(availableActions);
      Collection<HighlightInfo> infos=doHighlighting();
      fail("Action with text '" + text + "' is not available in test "+ testFullPath+ "\n"+ "Available actions ("+ texts.size()+ "): "+ texts+ "\n"+ availableActions+ "\n"+ "Infos:"+ infos);
    }
 else {
      Set<String> validActions=Sets.newHashSet(InTextDirectivesUtils.findLinesWithPrefixRemoved("// ACTION:",getFile().getText()));
      for (      IntentionAction availableAction : availableActions) {
        if (!validActions.contains(availableAction.getText())) {
          fail(String.format("Unexpected action available at current position: %s. Use // ACTION: directive",availableAction.getText()));
        }
      }
    }
  }
 else {
    if (!actionShouldBeAvailable) {
      fail("Action '" + text + "' is available (but must not) in test "+ testFullPath);
    }
    ShowIntentionActionsHandler.chooseActionAndInvoke(getFile(),getEditor(),action,action.getText());
    UIUtil.dispatchAllInvocationEvents();
    if (!shouldBeAvailableAfterExecution()) {
      final IntentionAction afterAction=LightQuickFixTestCase.findActionWithText(getAvailableActions(),text);
      if (afterAction != null) {
        fail("Action '" + text + "' is still available after its invocation in test "+ testFullPath);
      }
    }
    checkResultByFile(getCheckFileName());
  }
}
