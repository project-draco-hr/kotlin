{
  validateTypeParameters(collector,descriptor.getTypeConstructor().getParameters());
  Collection<JetType> supertypes=descriptor.getTypeConstructor().getSupertypes();
  if (supertypes.isEmpty() && descriptor.getKind() != ClassKind.TRAIT && !KotlinBuiltIns.isSpecialClassWithNoSupertypes(descriptor)) {
    report(collector,descriptor,"No supertypes for non-trait");
  }
  validateTypes(descriptor,collector,supertypes);
  validateType(descriptor,descriptor.getDefaultType(),collector);
  validateScope(descriptor.getUnsubstitutedInnerClassesScope(),collector);
  List<ConstructorDescriptor> primary=Lists.newArrayList();
  for (  ConstructorDescriptor constructorDescriptor : descriptor.getConstructors()) {
    if (constructorDescriptor.isPrimary()) {
      primary.add(constructorDescriptor);
    }
  }
  if (primary.size() > 1) {
    report(collector,descriptor,"Many primary constructors: " + primary);
  }
  ConstructorDescriptor primaryConstructor=descriptor.getUnsubstitutedPrimaryConstructor();
  if (primaryConstructor != null) {
    if (!descriptor.getConstructors().contains(primaryConstructor)) {
      report(collector,primaryConstructor,"Primary constructor not in getConstructors() result: " + descriptor.getConstructors());
    }
  }
  ClassDescriptor defaultObjectDescriptor=descriptor.getDefaultObjectDescriptor();
  if (defaultObjectDescriptor != null && !defaultObjectDescriptor.isDefaultObject()) {
    report(collector,defaultObjectDescriptor,"Default object should be marked as such");
  }
  return true;
}
