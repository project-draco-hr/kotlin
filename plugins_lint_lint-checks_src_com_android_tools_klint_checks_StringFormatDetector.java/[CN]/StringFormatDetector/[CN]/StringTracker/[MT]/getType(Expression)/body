{
  if (expression == null) {
    return null;
  }
  if (expression instanceof VariableReference) {
    VariableReference reference=(VariableReference)expression;
    String variable=reference.astIdentifier().astValue();
    Class<?> type=mTypes.get(variable);
    if (type != null) {
      return type;
    }
  }
 else   if (expression instanceof MethodInvocation) {
    MethodInvocation method=(MethodInvocation)expression;
    String methodName=method.astName().astValue();
    if (methodName.equals(GET_STRING_METHOD)) {
      return String.class;
    }
  }
 else   if (expression instanceof StringLiteral) {
    return String.class;
  }
 else   if (expression instanceof IntegralLiteral) {
    return Integer.TYPE;
  }
 else   if (expression instanceof FloatingPointLiteral) {
    return Float.TYPE;
  }
 else   if (expression instanceof CharLiteral) {
    return Character.TYPE;
  }
 else   if (expression instanceof BooleanLiteral) {
    return Boolean.TYPE;
  }
 else   if (expression instanceof NullLiteral) {
    return Object.class;
  }
  if (mContext != null) {
    TypeDescriptor type=mContext.getType(expression);
    if (type != null) {
      Class<?> typeClass=getTypeClass(type);
      if (typeClass != null) {
        return typeClass;
      }
 else {
        return Object.class;
      }
    }
  }
  return null;
}
