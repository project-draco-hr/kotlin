{
  boolean actionView=hasActionView(intent);
  boolean browsable=isBrowsable(intent);
  boolean isHttp=false;
  boolean hasScheme=false;
  boolean hasHost=false;
  boolean hasPort=false;
  boolean hasPath=false;
  boolean hasMimeType=false;
  Element firstData=null;
  NodeList children=intent.getChildNodes();
  for (int i=0; i < children.getLength(); i++) {
    Node child=children.item(i);
    if (child.getNodeType() == Node.ELEMENT_NODE && child.getNodeName().equals(NODE_DATA)) {
      Element data=(Element)child;
      if (firstData == null) {
        firstData=data;
      }
      if (isHttpSchema(data)) {
        isHttp=true;
      }
      checkSingleData(context,data);
      for (      String name : PATH_ATTR_LIST) {
        if (data.hasAttributeNS(ANDROID_URI,name)) {
          hasPath=true;
        }
      }
      if (data.hasAttributeNS(ANDROID_URI,ATTR_SCHEME)) {
        hasScheme=true;
      }
      if (data.hasAttributeNS(ANDROID_URI,ATTR_HOST)) {
        hasHost=true;
      }
      if (data.hasAttributeNS(ANDROID_URI,ATTRIBUTE_PORT)) {
        hasPort=true;
      }
      if (data.hasAttributeNS(ANDROID_URI,ATTRIBUTE_MIME_TYPE)) {
        hasMimeType=true;
      }
    }
  }
  if ((hasPath || hasHost || hasPort) && !hasScheme) {
    context.report(ISSUE_ERROR,firstData,context.getLocation(firstData),"android:scheme missing");
  }
  if ((hasPath || hasPort) && !hasHost) {
    context.report(ISSUE_ERROR,firstData,context.getLocation(firstData),"android:host missing");
  }
  if (actionView && browsable) {
    if (firstData == null) {
      context.report(ISSUE_ERROR,intent,context.getLocation(intent),"Missing data node?");
    }
 else     if (!hasScheme && !hasMimeType) {
      context.report(ISSUE_ERROR,firstData,context.getLocation(firstData),"Missing URL for the intent filter?");
    }
  }
  if (actionView && isHttp && !browsable) {
    context.report(ISSUE_WARNING,intent,context.getLocation(intent),"Activity supporting ACTION_VIEW is not set as BROWSABLE");
  }
}
