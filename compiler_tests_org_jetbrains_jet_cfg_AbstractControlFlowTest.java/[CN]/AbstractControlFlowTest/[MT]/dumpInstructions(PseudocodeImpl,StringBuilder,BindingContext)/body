{
  final int nextInstructionsColumnWidth=countNextInstructionsColumnWidth(pseudocode.getInstructionsIncludingDeadCode());
  dumpInstructions(pseudocode,out,new Function3<Instruction,Instruction,Instruction,String>(){
    @Override public String invoke(    Instruction instruction,    Instruction next,    Instruction prev){
      StringBuilder result=new StringBuilder();
      Collection<Instruction> nextInstructions=instruction.getNextInstructions();
      if (!sameContents(next,nextInstructions)) {
        result.append("    NEXT:").append(String.format("%1$-" + nextInstructionsColumnWidth + "s",formatInstructionList(nextInstructions)));
      }
      Collection<Instruction> previousInstructions=instruction.getPreviousInstructions();
      if (!sameContents(prev,previousInstructions)) {
        result.append("    PREV:").append(formatInstructionList(previousInstructions));
      }
      return result.toString();
    }
  }
);
}
