{
  if (callable instanceof FunctionDescriptor) {
    Method method=bindings.get(METHOD_FOR_FUNCTION,(FunctionDescriptor)callable);
    if (method != null) {
      proto.setExtension(JavaProtoBuf.methodSignature,new SignatureSerializer(nameTable).methodSignature(method));
    }
  }
 else   if (callable instanceof PropertyDescriptor) {
    PropertyDescriptor property=(PropertyDescriptor)callable;
    PropertyGetterDescriptor getter=property.getGetter();
    PropertySetterDescriptor setter=property.getSetter();
    Method getterMethod=getter == null ? null : bindings.get(METHOD_FOR_FUNCTION,getter);
    Method setterMethod=setter == null ? null : bindings.get(METHOD_FOR_FUNCTION,setter);
    Pair<Type,String> field=bindings.get(FIELD_FOR_PROPERTY,property);
    Type fieldType;
    String fieldName;
    boolean isStaticInOuter;
    Method syntheticMethod;
    if (field != null) {
      fieldType=field.first;
      fieldName=field.second;
      isStaticInOuter=bindings.get(STATIC_FIELD_IN_OUTER_CLASS,property);
      syntheticMethod=null;
    }
 else {
      fieldType=null;
      fieldName=null;
      isStaticInOuter=false;
      syntheticMethod=bindings.get(SYNTHETIC_METHOD_FOR_PROPERTY,property);
    }
    JavaProtoBuf.JavaPropertySignature signature=new SignatureSerializer(nameTable).propertySignature(fieldType,fieldName,isStaticInOuter,syntheticMethod,getterMethod,setterMethod);
    proto.setExtension(JavaProtoBuf.propertySignature,signature);
  }
}
