{
  int count=LintUtils.getChildCount(element);
  if (count == 0) {
    context.report(MISSING,element,context.getLocation(element),"There should be at least one quantity string in this `<plural>` definition");
    return;
  }
  LocaleQualifier locale=LintUtils.getLocale(context);
  if (locale == null || !locale.hasLanguage()) {
    return;
  }
  String language=locale.getLanguage();
  PluralsDatabase plurals=PluralsDatabase.get();
  EnumSet<Quantity> relevant=plurals.getRelevant(language);
  if (relevant == null) {
    return;
  }
  EnumSet<Quantity> defined=EnumSet.noneOf(Quantity.class);
  NodeList children=element.getChildNodes();
  for (int i=0, n=children.getLength(); i < n; i++) {
    Node noe=children.item(i);
    if (noe.getNodeType() != Node.ELEMENT_NODE) {
      continue;
    }
    Element child=(Element)noe;
    if (!TAG_ITEM.equals(child.getTagName())) {
      continue;
    }
    String quantityString=child.getAttribute(ATTR_QUANTITY);
    if (quantityString == null || quantityString.isEmpty()) {
      continue;
    }
    Quantity quantity=Quantity.get(quantityString);
    if (quantity == null || quantity == Quantity.other) {
      continue;
    }
    defined.add(quantity);
    if (plurals.hasMultipleValuesForQuantity(language,quantity) && !haveFormattingParameter(child) && context.isEnabled(IMPLIED_QUANTITY)) {
      String example=plurals.findIntegerExamples(language,quantity);
      String append;
      if (example == null) {
        append="";
      }
 else {
        append=" (" + example + ")";
      }
      String message=String.format("The quantity `'%1$s'` matches more than one " + "specific number in this locale%2$s, but the message did " + "not include a formatting argument (such as `%%d`). "+ "This is usually an internationalization error. See full issue "+ "explanation for more.",quantity,append);
      context.report(IMPLIED_QUANTITY,child,context.getLocation(child),message);
    }
  }
  if (relevant.equals(defined)) {
    return;
  }
  EnumSet<Quantity> missing=relevant.clone();
  missing.removeAll(defined);
  if (!missing.isEmpty()) {
    String message=String.format("For locale %1$s the following quantities should also be defined: %2$s",TranslationDetector.getLanguageDescription(language),Quantity.formatSet(missing));
    context.report(MISSING,element,context.getLocation(element),message);
  }
  EnumSet<Quantity> extra=defined.clone();
  extra.removeAll(relevant);
  if (!extra.isEmpty()) {
    String message=String.format("For language %1$s the following quantities are not relevant: %2$s",TranslationDetector.getLanguageDescription(language),Quantity.formatSet(extra));
    context.report(EXTRA,element,context.getLocation(element),message);
  }
}
