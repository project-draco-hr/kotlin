{
  ProtoBuf.Function.Builder builder=ProtoBuf.Function.newBuilder();
  DescriptorSerializer local=createChildSerializer(descriptor);
  int flags=Flags.getFunctionFlags(hasAnnotations(descriptor),descriptor.getVisibility(),descriptor.getModality(),descriptor.getKind(),descriptor.isOperator(),descriptor.isInfix(),descriptor.isInline(),descriptor.isTailrec(),descriptor.isExternal());
  if (flags != builder.getFlags()) {
    builder.setFlags(flags);
  }
  int newFlags=(flags & 0x3f) + ((flags >> 2) & ~0x3f);
  if (newFlags != builder.getNewFlags()) {
    builder.setNewFlags(newFlags);
  }
  builder.setName(getSimpleNameIndex(descriptor.getName()));
  if (useTypeTable()) {
    builder.setReturnTypeId(local.typeId(descriptor.getReturnType()));
  }
 else {
    builder.setReturnType(local.type(descriptor.getReturnType()));
  }
  for (  TypeParameterDescriptor typeParameterDescriptor : descriptor.getTypeParameters()) {
    builder.addTypeParameter(local.typeParameter(typeParameterDescriptor));
  }
  ReceiverParameterDescriptor receiverParameter=descriptor.getExtensionReceiverParameter();
  if (receiverParameter != null) {
    if (useTypeTable()) {
      builder.setReceiverTypeId(local.typeId(receiverParameter.getType()));
    }
 else {
      builder.setReceiverType(local.type(receiverParameter.getType()));
    }
  }
  for (  ValueParameterDescriptor valueParameterDescriptor : descriptor.getValueParameters()) {
    builder.addValueParameter(local.valueParameter(valueParameterDescriptor));
  }
  if (serializeTypeTableToFunction) {
    ProtoBuf.TypeTable typeTableProto=typeTable.serialize();
    if (typeTableProto != null) {
      builder.setTypeTable(typeTableProto);
    }
  }
  extension.serializeFunction(descriptor,builder);
  return builder;
}
