{
  if (!(sibling instanceof JetElement))   return true;
  final BindingContext bindingContext=AnalyzerFacadeWithCache.getContextForElement((JetElement)sibling);
  final Ref<Boolean> result=new Ref<Boolean>(true);
  JetVisitorVoid visitor=new JetVisitorVoid(){
    @Override public void visitElement(    PsiElement element){
      if (result.get()) {
        element.acceptChildren(this);
      }
    }
    @Override public void visitExpression(    @NotNull JetExpression expression){
      Collection<DeclarationDescriptor> variants=TipsManager.getVariantsNoReceiver(expression,bindingContext);
      for (      DeclarationDescriptor variant : variants) {
        if (variant.getName().asString().equals(name) && myFilter.invoke(variant)) {
          result.set(false);
          return;
        }
      }
      super.visitExpression(expression);
    }
  }
;
  sibling.accept(visitor);
  return result.get();
}
