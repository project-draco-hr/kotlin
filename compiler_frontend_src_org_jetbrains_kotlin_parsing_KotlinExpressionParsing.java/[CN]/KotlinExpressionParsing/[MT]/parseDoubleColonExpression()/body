{
  PsiBuilder.Marker expression=mark();
  if (!at(COLONCOLON)) {
    PsiBuilder.Marker typeReference=mark();
    myKotlinParsing.parseUserType();
    typeReference=myKotlinParsing.parseNullableTypeSuffix(typeReference);
    typeReference.done(TYPE_REFERENCE);
    if (!at(COLONCOLON)) {
      expression.rollbackTo();
      return false;
    }
  }
  advance();
  if (at(CLASS_KEYWORD)) {
    advance();
    expression.done(CLASS_LITERAL_EXPRESSION);
  }
 else {
    parseSimpleNameExpression();
    if (at(LT)) {
      PsiBuilder.Marker typeArgumentList=mark();
      if (myKotlinParsing.tryParseTypeArgumentList(TYPE_ARGUMENT_LIST_STOPPERS)) {
        typeArgumentList.error("Type arguments are not allowed");
      }
 else {
        typeArgumentList.rollbackTo();
      }
    }
    expression.done(CALLABLE_REFERENCE_EXPRESSION);
  }
  return true;
}
