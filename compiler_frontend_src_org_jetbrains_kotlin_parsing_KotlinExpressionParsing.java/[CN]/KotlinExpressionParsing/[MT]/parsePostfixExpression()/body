{
  PsiBuilder.Marker expression=mark();
  boolean firstExpressionParsed;
  boolean doubleColonExpression=parseDoubleColonExpression();
  if (!doubleColonExpression) {
    firstExpressionParsed=parseAtomicExpression();
  }
 else {
    firstExpressionParsed=true;
  }
  while (true) {
    if (interruptedWithNewLine()) {
      break;
    }
 else     if (at(LBRACKET)) {
      parseArrayAccess();
      expression.done(ARRAY_ACCESS_EXPRESSION);
    }
 else     if (!doubleColonExpression && parseCallSuffix()) {
      expression.done(CALL_EXPRESSION);
    }
 else     if (at(DOT) || at(SAFE_ACCESS)) {
      IElementType expressionType=at(DOT) ? DOT_QUALIFIED_EXPRESSION : SAFE_ACCESS_EXPRESSION;
      advance();
      if (!firstExpressionParsed) {
        expression.drop();
        expression=mark();
      }
      parseCallExpression();
      if (firstExpressionParsed) {
        expression.done(expressionType);
      }
 else {
        firstExpressionParsed=true;
        continue;
      }
    }
 else     if (atSet(Precedence.POSTFIX.getOperations())) {
      parseOperationReference();
      expression.done(POSTFIX_EXPRESSION);
    }
 else {
      break;
    }
    expression=expression.precede();
  }
  expression.drop();
}
