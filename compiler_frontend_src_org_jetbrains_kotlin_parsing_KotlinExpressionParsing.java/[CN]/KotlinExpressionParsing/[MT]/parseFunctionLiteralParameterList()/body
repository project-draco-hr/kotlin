{
  PsiBuilder.Marker parameterList=mark();
  while (!eof()) {
    PsiBuilder.Marker parameter=mark();
    if (at(COLON)) {
      error("Expecting parameter name");
    }
 else     if (at(LPAR)) {
      PsiBuilder.Marker destructuringDeclaration=mark();
      myKotlinParsing.parseMultiDeclarationName(TOKEN_SET_TO_FOLLOW_AFTER_DESTRUCTURING_DECLARATION_IN_LAMBDA);
      destructuringDeclaration.done(DESTRUCTURING_DECLARATION);
    }
 else {
      expect(IDENTIFIER,"Expecting parameter name",TokenSet.create(ARROW));
    }
    if (at(COLON)) {
      advance();
      myKotlinParsing.parseTypeRef(TokenSet.create(ARROW,COMMA));
    }
    parameter.done(VALUE_PARAMETER);
    if (at(ARROW)) {
      break;
    }
 else     if (at(COMMA)) {
      advance();
    }
 else {
      error("Expecting '->' or ','");
      break;
    }
  }
  parameterList.done(VALUE_PARAMETER_LIST);
}
