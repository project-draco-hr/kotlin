{
  JetTypeInfo recordedTypeInfo=BindingContextUtils.getRecordedTypeInfo(expression,context.trace.getBindingContext());
  if (recordedTypeInfo != null) {
    return recordedTypeInfo;
  }
  JetTypeInfo result;
  try {
    result=expression.accept(visitor,context);
    if (context.trace.get(BindingContext.PROCESSED,expression)) {
      return JetTypeInfo.create(context.trace.getBindingContext().get(BindingContext.EXPRESSION_TYPE,expression),result.getDataFlowInfo());
    }
    if (result.getType() instanceof DeferredType) {
      result=JetTypeInfo.create(((DeferredType)result.getType()).getActualType(),result.getDataFlowInfo());
    }
    if (result.getType() != null) {
      context.trace.record(BindingContext.EXPRESSION_TYPE,expression,result.getType());
    }
  }
 catch (  ReenteringLazyValueComputationException e) {
    context.trace.report(TYPECHECKER_HAS_RUN_INTO_RECURSIVE_PROBLEM.on(expression));
    result=JetTypeInfo.create(null,context.dataFlowInfo);
  }
  if (!context.trace.get(BindingContext.PROCESSED,expression) && !BindingContextUtils.isExpressionWithValidReference(expression,context.trace.getBindingContext())) {
    context.trace.record(BindingContext.RESOLUTION_SCOPE,expression,context.scope);
  }
  context.trace.record(BindingContext.PROCESSED,expression);
  if (result.getDataFlowInfo() != DataFlowInfo.EMPTY) {
    context.trace.record(BindingContext.EXPRESSION_DATA_FLOW_INFO,expression,result.getDataFlowInfo());
  }
  return result;
}
