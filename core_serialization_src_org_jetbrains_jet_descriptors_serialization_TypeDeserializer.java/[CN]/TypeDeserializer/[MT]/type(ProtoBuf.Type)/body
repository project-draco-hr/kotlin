{
  if (proto.hasFlexibleTypeCapabilitiesId()) {
    String id=context.getNameResolver().getString(proto.getFlexibleTypeCapabilitiesId());
    FlexibleTypeCapabilities capabilities=getComponents().getFlexibleTypeCapabilitiesDeserializer().capabilitiesById(id);
    if (capabilities == null) {
      return ErrorUtils.createErrorType(new DeserializedType(context,proto) + ": Capabilities not found for id " + id);
    }
    return DelegatingFlexibleType.create(new DeserializedType(context,proto),new DeserializedType(context,proto.getFlexibleUpperBound()),capabilities);
  }
  return new DeserializedType(context,proto);
}
