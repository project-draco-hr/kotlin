{
  if (mNames == null) {
    return;
  }
  mHaveBytecode=true;
  List methodList=classNode.methods;
  for (  Object m : methodList) {
    MethodNode method=(MethodNode)m;
    boolean rightArguments=method.desc.equals("(Landroid/view/View;)V");
    if (!mNames.containsKey(method.name)) {
      if (rightArguments) {
        for (        String n : mNames.keySet()) {
          if (LintUtils.editDistance(n,method.name) <= 2) {
            recordSimilar(n,classNode,method);
            break;
          }
        }
      }
      continue;
    }
    if (rightArguments) {
      mNames.remove(method.name);
      if ((method.access & Opcodes.ACC_PUBLIC) == 0) {
        Location location=context.getLocation(method,classNode);
        String message=String.format("On click handler `%1$s(View)` must be public",method.name);
        context.report(ISSUE,location,message);
      }
 else       if ((method.access & Opcodes.ACC_STATIC) != 0) {
        Location location=context.getLocation(method,classNode);
        String message=String.format("On click handler `%1$s(View)` should not be static",method.name);
        context.report(ISSUE,location,message);
      }
      if (mNames.isEmpty()) {
        mNames=null;
        return;
      }
    }
  }
}
