{
  generateOverridesInAClass(classDescriptor,classDescriptor.getDeclaredCallableMembers(),new OverridingUtil.DescriptorSink(){
    @Override public void addToScope(    @NotNull CallableMemberDescriptor fakeOverride){
      if (fakeOverride instanceof PropertyDescriptor) {
        classDescriptor.getBuilder().addPropertyDescriptor((PropertyDescriptor)fakeOverride);
      }
 else       if (fakeOverride instanceof SimpleFunctionDescriptor) {
        classDescriptor.getBuilder().addFunctionDescriptor((SimpleFunctionDescriptor)fakeOverride);
      }
 else {
        throw new IllegalStateException(fakeOverride.getClass().getName());
      }
    }
    @Override public void conflict(    @NotNull CallableMemberDescriptor fromSuper,    @NotNull CallableMemberDescriptor fromCurrent){
      JetDeclaration declaration=(JetDeclaration)DescriptorToSourceUtils.descriptorToDeclaration(fromCurrent);
      trace.report(CONFLICTING_OVERLOADS.on(declaration,fromCurrent,fromCurrent.getContainingDeclaration().getName().asString()));
    }
  }
);
  resolveUnknownVisibilities(classDescriptor.getAllCallableMembers(),trace);
}
