{
  if (!processed.add(classDescriptor)) {
    return;
  }
  for (  JetType supertype : classDescriptor.getTypeConstructor().getSupertypes()) {
    ClassDescriptor superclass=(ClassDescriptor)supertype.getConstructor().getDeclarationDescriptor();
    if (superclass instanceof MutableClassDescriptor && classesBeingAnalyzed.contains(superclass)) {
      generateOverridesAndDelegationInAClass((MutableClassDescriptor)superclass,processed,classesBeingAnalyzed);
    }
  }
  JetClassOrObject classOrObject=(JetClassOrObject)DescriptorToSourceUtils.classDescriptorToDeclaration(classDescriptor);
  if (classOrObject != null) {
    DelegationResolver.generateDelegatesInAClass(classDescriptor,trace,classOrObject);
  }
  generateOverridesInAClass(classDescriptor);
}
