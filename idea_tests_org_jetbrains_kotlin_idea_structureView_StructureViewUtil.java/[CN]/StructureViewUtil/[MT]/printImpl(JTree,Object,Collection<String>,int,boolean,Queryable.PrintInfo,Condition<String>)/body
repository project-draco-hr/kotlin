{
  DefaultMutableTreeNode defaultMutableTreeNode=(DefaultMutableTreeNode)root;
  Object userObject=defaultMutableTreeNode.getUserObject();
  String nodeText;
  if (userObject != null) {
    nodeText=toString(userObject,printInfo);
  }
 else {
    nodeText="null";
  }
  if (nodePrintCondition != null && !nodePrintCondition.value(nodeText))   return;
  StringBuilder buff=new StringBuilder();
  StringUtil.repeatSymbol(buff,' ',level);
  boolean expanded=tree.isExpanded(new TreePath(defaultMutableTreeNode.getPath()));
  if (!defaultMutableTreeNode.isLeaf()) {
    buff.append(expanded ? "-" : "+");
  }
  boolean selected=tree.getSelectionModel().isPathSelected(new TreePath(defaultMutableTreeNode.getPath()));
  if (withSelection && selected) {
    buff.append("[");
  }
  buff.append(nodeText);
  if (withSelection && selected) {
    buff.append("]");
  }
  strings.add(buff.toString());
  int childCount=tree.getModel().getChildCount(root);
  if (expanded) {
    for (int i=0; i < childCount; i++) {
      printImpl(tree,tree.getModel().getChild(root,i),strings,level + 1,withSelection,printInfo,nodePrintCondition);
    }
  }
}
