{
  if (DumbService.isDumb(from.getProject()))   return from;
switch (navigationKind) {
case CLASS_FILES_TO_SOURCES:
    if (!from.getContainingKtFile().isCompiled())     return from;
  break;
case SOURCES_TO_CLASS_FILES:
if (from.getContainingKtFile().isCompiled()) return from;
if (!ProjectRootsUtil.isInContent(from,false,true,false)) return from;
if (KtPsiUtil.isLocal(from)) return from;
break;
}
KtDeclaration result=from.accept(new SourceAndDecompiledConversionVisitor(navigationKind),null);
return result != null ? result : from;
}
