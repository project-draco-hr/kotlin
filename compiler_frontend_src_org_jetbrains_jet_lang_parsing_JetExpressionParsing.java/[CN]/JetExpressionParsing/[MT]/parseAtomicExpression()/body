{
  if (at(LPAR)) {
    parseParenthesizedExpression();
  }
 else   if (at(IDE_TEMPLATE_START)) {
    parseIdeTemplate();
  }
 else   if (at(HASH)) {
    parseTupleExpression();
  }
 else   if (at(PACKAGE_KEYWORD)) {
    parseOneTokenExpression(ROOT_NAMESPACE);
  }
 else   if (at(THIS_KEYWORD)) {
    parseThisExpression();
  }
 else   if (at(SUPER_KEYWORD)) {
    parseSuperExpression();
  }
 else   if (at(OBJECT_KEYWORD)) {
    parseObjectLiteral();
  }
 else   if (at(THROW_KEYWORD)) {
    parseThrow();
  }
 else   if (at(RETURN_KEYWORD)) {
    parseReturn();
  }
 else   if (at(CONTINUE_KEYWORD)) {
    parseJump(CONTINUE);
  }
 else   if (at(BREAK_KEYWORD)) {
    parseJump(BREAK);
  }
 else   if (at(IF_KEYWORD)) {
    parseIf();
  }
 else   if (at(WHEN_KEYWORD)) {
    parseWhen();
  }
 else   if (at(TRY_KEYWORD)) {
    parseTry();
  }
 else   if (at(FOR_KEYWORD)) {
    parseFor();
  }
 else   if (at(WHILE_KEYWORD)) {
    parseWhile();
  }
 else   if (at(DO_KEYWORD)) {
    parseDoWhile();
  }
 else   if (atSet(CLASS_KEYWORD,FUN_KEYWORD,VAL_KEYWORD,VAR_KEYWORD,TYPE_KEYWORD)) {
    parseLocalDeclaration();
  }
 else   if (at(FIELD_IDENTIFIER)) {
    parseSimpleNameExpression();
  }
 else   if (at(IDENTIFIER)) {
    parseSimpleNameExpression();
  }
 else   if (at(LBRACE)) {
    parseFunctionLiteral();
  }
 else   if (at(OPEN_QUOTE)) {
    parseStringTemplate();
  }
 else   if (!parseLiteralConstant()) {
    errorWithRecovery("Expecting an element",EXPRESSION_FOLLOW);
  }
}
