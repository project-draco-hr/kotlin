{
  PsiBuilder.Marker expression=mark();
  parseAtomicExpression();
  while (true) {
    if (myBuilder.newlineBeforeCurrentToken()) {
      break;
    }
 else     if (at(LBRACKET)) {
      parseArrayAccess();
      expression.done(ARRAY_ACCESS_EXPRESSION);
    }
 else     if (parseCallSuffix()) {
      expression.done(CALL_EXPRESSION);
    }
 else     if (at(DOT)) {
      advance();
      parseCallExpression();
      expression.done(DOT_QUALIFIED_EXPRESSION);
    }
 else     if (at(SAFE_ACCESS)) {
      advance();
      parseCallExpression();
      expression.done(SAFE_ACCESS_EXPRESSION);
    }
 else     if (at(QUEST)) {
      advance();
      parseCallExpression();
      expression.done(PREDICATE_EXPRESSION);
    }
 else     if (at(HASH)) {
      advance();
      expect(IDENTIFIER,"Expecting property or function name");
      expression.done(HASH_QUALIFIED_EXPRESSION);
    }
 else     if (atSet(Precedence.POSTFIX.getOperations())) {
      parseOperationReference();
      expression.done(POSTFIX_EXPRESSION);
    }
 else {
      break;
    }
    expression=expression.precede();
  }
  expression.drop();
}
