{
  PsiBuilder.Marker list=mark();
  expect(LPAR,"Expecting a parameter list in parentheses (...)",TokenSet.create(ARROW,COLON));
  myBuilder.disableNewlines();
  if (!at(RPAR)) {
    while (true) {
      if (at(COMMA))       errorAndAdvance("Expecting a parameter declaration");
      PsiBuilder.Marker parameter=mark();
      int parameterNamePos=matchTokenStreamPredicate(new LastBefore(new At(IDENTIFIER),new AtSet(COMMA,RPAR,COLON,ARROW)));
      createTruncatedBuilder(parameterNamePos).parseModifierList(MODIFIER_LIST,REGULAR_ANNOTATIONS_ONLY_WITH_BRACKETS);
      expect(IDENTIFIER,"Expecting parameter declaration");
      if (at(COLON)) {
        advance();
        myJetParsing.parseTypeRef();
      }
      parameter.done(VALUE_PARAMETER);
      if (!at(COMMA))       break;
      advance();
      if (at(RPAR)) {
        error("Expecting a parameter declaration");
        break;
      }
    }
  }
  myBuilder.restoreNewlinesState();
  expect(RPAR,"Expecting ')'",TokenSet.create(ARROW,COLON));
  list.done(VALUE_PARAMETER_LIST);
}
