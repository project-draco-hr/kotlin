{
  Class<?> clazz=arguments.getClass();
  out.println("Usage: " + clazz.getName());
  for (Class<?> currentClass=clazz; currentClass != null; currentClass=currentClass.getSuperclass()) {
    for (    Field field : currentClass.getDeclaredFields()) {
      Argument argument=field.getAnnotation(Argument.class);
      if (argument == null)       continue;
      try {
        printFieldUsage(field,field.get(arguments),argument);
      }
 catch (      IllegalAccessException e) {
        throw new IllegalArgumentException("Could not use the field " + field + " as an argument field",e);
      }
    }
  }
}
