{
  USimpleReferenceExpression reference=node.getClassReference();
  if (reference == null) {
    return;
  }
  List<String> parts=UastUtils.asQualifiedIdentifiers(UastUtils.getQualifiedCallElement(node));
  String typeName=reference.getIdentifier();
  if (NOTIFICATION_CLASS.equals(typeName)) {
    List<UExpression> args=node.getValueArguments();
    if (args.size() == 3) {
      if (args.get(0) instanceof UQualifiedExpression && handleSelect((UQualifiedExpression)args.get(0))) {
        return;
      }
      UFunction method=UastUtils.getContainingFunction(node);
      if (method != null) {
        String name=StringFormatDetector.getResourceForFirstArg(method,node);
        if (name != null) {
          if (mNotificationIcons == null) {
            mNotificationIcons=Sets.newHashSet();
          }
          mNotificationIcons.add(name);
        }
      }
    }
  }
 else   if (BUILDER_CLASS.equals(typeName)) {
    boolean isBuilder=false;
    if (parts != null && parts.size() == 1) {
      isBuilder=true;
    }
 else     if (parts != null && parts.size() == 2) {
      String clz=parts.get(0);
      if (NOTIFICATION_CLASS.equals(clz) || NOTIFICATION_COMPAT_CLASS_FQNAME.equals(clz)) {
        isBuilder=true;
      }
    }
    if (isBuilder) {
      UFunction method=UastUtils.getContainingFunction(node);
      if (method != null) {
        SetIconFinder finder=new SetIconFinder();
        method.accept(finder);
      }
    }
  }
}
