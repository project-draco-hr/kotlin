{
  Disposable disposable=new Disposable(){
    @Override public void dispose(){
    }
  }
;
  CompilerConfiguration configuration=CompilerConfigurationUtl.getDefaultConfiguration(CompilerSpecialMode.REGULAR);
  JetCoreEnvironment scriptEnvironment=JetCoreEnvironment.createCoreEnvironmentForJVM(disposable,configuration,CompilerSpecialMode.REGULAR);
  scriptEnvironment.addSources(moduleScriptFile);
  GenerationState generationState=KotlinToJVMBytecodeCompiler.analyzeAndGenerate(new K2JVMCompileEnvironmentConfiguration(scriptEnvironment,messageCollector,false,BuiltinsScopeExtensionMode.ALL,false),false);
  if (generationState == null) {
    throw new CompileEnvironmentException("Module script " + moduleScriptFile + " analyze failed");
  }
  List<Module> modules=runDefineModules(moduleScriptFile,generationState.getFactory());
  Disposer.dispose(disposable);
  if (modules == null) {
    throw new CompileEnvironmentException("Module script " + moduleScriptFile + " compilation failed");
  }
  if (modules.isEmpty()) {
    throw new CompileEnvironmentException("No modules where defined by " + moduleScriptFile);
  }
  return modules;
}
