{
  DataFlowValue dataFlowValue=DataFlowValueFactory.createDataFlowValue(expression,expressionType,c);
  for (  JetType possibleType : c.dataFlowInfo.getPossibleTypes(dataFlowValue)) {
    if (JetTypeChecker.DEFAULT.isSubtypeOf(possibleType,c.expectedType)) {
      SmartCastUtils.recordCastOrError(expression,possibleType,c.trace,dataFlowValue.isPredictable(),false);
      return possibleType;
    }
  }
  return null;
}
