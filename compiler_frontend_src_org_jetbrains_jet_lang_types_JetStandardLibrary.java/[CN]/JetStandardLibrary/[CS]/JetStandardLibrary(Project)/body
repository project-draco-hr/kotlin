{
  InputStream stream=JetStandardClasses.class.getClassLoader().getResourceAsStream("jet/Library.jet");
  try {
    JetFile file=(JetFile)PsiFileFactory.getInstance(project).createFileFromText("Library.jet",JetFileType.INSTANCE,FileUtil.loadTextAndClose(new InputStreamReader(stream)));
    JetSemanticServices bootstrappingSemanticServices=JetSemanticServices.createSemanticServices(this);
    BindingTraceContext bindingTraceContext=new BindingTraceContext();
    WritableScopeImpl writableScope=new WritableScopeImpl(JetStandardClasses.STANDARD_CLASSES,JetStandardClasses.STANDARD_CLASSES_NAMESPACE,RedeclarationHandler.THROW_EXCEPTION).setDebugName("Root bootstrap scope");
    writableScope.changeLockLevel(WritableScope.LockLevel.BOTH);
    TopDownAnalyzer.processStandardLibraryNamespace(bootstrappingSemanticServices,bindingTraceContext,writableScope,JetStandardClasses.STANDARD_CLASSES_NAMESPACE,file);
    AnalyzingUtils.throwExceptionOnErrors(bindingTraceContext.getBindingContext());
    initStdClasses();
  }
 catch (  IOException e) {
    throw new IllegalStateException(e);
  }
}
