{
  List<JetFile> files=JetTestUtils.createTestFiles(testFileName,FileUtil.loadFile(new File(testFileName),true),new JetTestUtils.TestFileFactoryNoModules<JetFile>(){
    @NotNull @Override public JetFile create(    @NotNull String fileName,    @NotNull String text,    @NotNull Map<String,String> directives){
      return JetPsiFactory(getProject()).createFile(fileName,text);
    }
  }
);
  ModuleDescriptor module=LazyResolveTestUtil.resolve(files,getEnvironment());
  String testedPackage="test";
  PackageViewDescriptor testPackage=module.getPackage(new FqName(testedPackage));
  Assert.assertNotNull("Package for name '" + testedPackage + "' is null after resolve",testPackage);
  File serializeResultsTo=new File(FileUtil.getNameWithoutExtension(testFileName) + ".txt");
  RecursiveDescriptorComparator.validateAndCompareDescriptorWithFile(testPackage,RecursiveDescriptorComparator.DONT_INCLUDE_METHODS_OF_OBJECT.filterRecursion(RecursiveDescriptorComparator.SKIP_BUILT_INS_PACKAGES).checkPrimaryConstructors(checkPrimaryConstructors).checkPropertyAccessors(checkPropertyAccessors).withValidationStrategy(allowErrorTypes ? errorTypesAllowed() : errorTypesForbidden()),serializeResultsTo);
}
