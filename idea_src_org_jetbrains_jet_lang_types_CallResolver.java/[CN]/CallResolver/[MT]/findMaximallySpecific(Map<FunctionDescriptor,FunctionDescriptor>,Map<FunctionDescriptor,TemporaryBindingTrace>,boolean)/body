{
  Map<FunctionDescriptor,TemporaryBindingTrace> maximallySpecific=Maps.newHashMap();
  meLoop:   for (  Map.Entry<FunctionDescriptor,FunctionDescriptor> myEntry : candidates.entrySet()) {
    FunctionDescriptor me=myEntry.getValue();
    TemporaryBindingTrace myTrace=traces.get(myEntry.getKey());
    for (    FunctionDescriptor other : candidates.values()) {
      if (other == me)       continue;
      if (!moreSpecific(me,other,discriminateGenericFunctions) || moreSpecific(other,me,discriminateGenericFunctions))       continue meLoop;
    }
    maximallySpecific.put(me,myTrace);
  }
  if (maximallySpecific.size() == 1) {
    Map.Entry<FunctionDescriptor,TemporaryBindingTrace> result=maximallySpecific.entrySet().iterator().next();
    result.getValue().commit();
    return result.getKey();
  }
  return null;
}
