{
  Project project=config.getProject();
  ModuleDescriptorImpl owner=new ModuleDescriptorImpl(Name.special("<module>"));
  Predicate<PsiFile> completely=Predicates.and(notLibFiles(config.getLibFiles()),filesToAnalyzeCompletely);
  TopDownAnalysisParameters topDownAnalysisParameters=new TopDownAnalysisParameters(completely,false,false,Collections.<AnalyzerScriptParameter>emptyList());
  BindingContext libraryBindingContext=config.getLibraryBindingContext();
  BindingTrace trace=libraryBindingContext == null ? new ObservableBindingTrace(new BindingTraceContext()) : new DelegatingBindingTrace(libraryBindingContext,"trace for analyzing library in js");
  InjectorForTopDownAnalyzerForJs injector=new InjectorForTopDownAnalyzerForJs(project,topDownAnalysisParameters,trace,owner,new JsConfiguration(libraryBindingContext));
  owner.setModuleConfiguration(injector.getModuleConfiguration());
  try {
    Collection<JetFile> allFiles=libraryBindingContext != null ? files : Config.withJsLibAdded(files,config);
    injector.getTopDownAnalyzer().analyzeFiles(allFiles,Collections.<AnalyzerScriptParameter>emptyList());
    BodiesResolveContext bodiesResolveContext=storeContextForBodiesResolve ? new CachedBodiesResolveContext(injector.getTopDownAnalysisContext()) : null;
    return AnalyzeExhaust.success(trace.getBindingContext(),bodiesResolveContext,injector.getModuleConfiguration());
  }
  finally {
    injector.destroy();
  }
}
