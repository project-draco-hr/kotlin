{
  return new FrameworkSupportInModuleConfigurable(){
    @Nullable @Override public CustomLibraryDescription createLibraryDescription(){
      return new JavaRuntimeLibraryDescription();
    }
    @Nullable @Override public JComponent createComponent(){
      return null;
    }
    @Override public boolean isOnlyLibraryAdded(){
      return true;
    }
    @Override public void addSupport(    @NotNull Module module,    @NotNull ModifiableRootModel rootModel,    @NotNull ModifiableModelsProvider modifiableModelsProvider){
      FrameworksCompatibilityUtils.suggestRemoveIncompatibleFramework(rootModel,new JSLibraryDescription(),JSFrameworkType.getInstance());
    }
  }
;
}
