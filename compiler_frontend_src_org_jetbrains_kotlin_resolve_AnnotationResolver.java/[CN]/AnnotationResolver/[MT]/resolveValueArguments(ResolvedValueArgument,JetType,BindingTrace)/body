{
  List<CompileTimeConstant<?>> constants=Lists.newArrayList();
  for (  ValueArgument argument : resolvedValueArgument.getArguments()) {
    JetExpression argumentExpression=argument.getArgumentExpression();
    if (argumentExpression != null) {
      CompileTimeConstant<?> constant=ConstantExpressionEvaluator.OBJECT$.evaluate(argumentExpression,trace,expectedType);
      if (constant instanceof IntegerValueTypeConstant) {
        JetType defaultType=((IntegerValueTypeConstant)constant).getType(expectedType);
        SimpleResolutionContext context=new SimpleResolutionContext(trace,JetScope.Empty.INSTANCE$,NO_EXPECTED_TYPE,DataFlowInfo.EMPTY,ContextDependency.INDEPENDENT,new CompositeChecker(Lists.<CallChecker>newArrayList()),PartialBodyResolveProvider.NONE);
        ArgumentTypeResolver.updateNumberType(defaultType,argumentExpression,context);
      }
      if (constant != null) {
        constants.add(constant);
      }
      checkCompileTimeConstant(argumentExpression,expectedType,trace);
    }
  }
  return constants;
}
