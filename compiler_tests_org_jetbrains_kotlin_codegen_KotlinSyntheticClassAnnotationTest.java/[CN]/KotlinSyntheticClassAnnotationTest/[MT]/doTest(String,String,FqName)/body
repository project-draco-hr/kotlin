{
  loadText("package " + PACKAGE_NAME + "\n\n"+ code);
  List<OutputFile> output=generateClassesInFile().asList();
  Collection<OutputFile> files=Collections2.filter(output,new Predicate<OutputFile>(){
    @Override public boolean apply(    OutputFile file){
      return file.getRelativePath().contains(classFilePart);
    }
  }
);
  assertFalse("No files with \"" + classFilePart + "\" in the name are found: "+ output,files.isEmpty());
  assertTrue("Exactly one file with \"" + classFilePart + "\" in the name should be found: "+ files,files.size() == 1);
  String path=files.iterator().next().getRelativePath();
  String fqName=path.substring(0,path.length() - ".class".length()).replace('/','.');
  Class<?> aClass=generateClass(fqName);
  for (  FqName annotationFqName : annotationFqNames) {
    assertAnnotatedWith(aClass,annotationFqName.asString());
  }
}
