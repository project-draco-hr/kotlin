{
  for (  Map.Entry<JetClassOrObject,MutableClassDescriptor> entry : context.getClasses().entrySet()) {
    JetClassOrObject classOrObject=entry.getKey();
    MutableClassDescriptor descriptor=entry.getValue();
    if (classOrObject instanceof JetClass) {
      descriptorResolver.resolveGenericBounds((JetClass)classOrObject,descriptor.getScopeForSupertypeResolution(),(List)descriptor.getTypeConstructor().getParameters(),trace);
    }
    descriptorResolver.resolveSupertypesForMutableClassDescriptor(classOrObject,descriptor,trace);
  }
  for (  Map.Entry<JetObjectDeclaration,MutableClassDescriptor> entry : context.getObjects().entrySet()) {
    JetClassOrObject jetClass=entry.getKey();
    MutableClassDescriptor descriptor=entry.getValue();
    descriptorResolver.resolveSupertypesForMutableClassDescriptor(jetClass,descriptor,trace);
  }
}
