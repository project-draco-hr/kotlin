{
  if (toType.equals(fromType))   return;
  if (toType.getSort() == Type.VOID) {
    pop(v,fromType);
  }
 else   if (fromType.getSort() == Type.VOID) {
    if (toType.equals(JET_UNIT_TYPE) || toType.equals(OBJECT_TYPE)) {
      putUnitInstance(v);
    }
 else     if (toType.getSort() == Type.OBJECT || toType.getSort() == Type.ARRAY) {
      v.aconst(null);
    }
 else {
      pushDefaultPrimitiveValueOnStack(toType,v);
    }
  }
 else   if (toType.equals(JET_UNIT_TYPE)) {
    pop(v,fromType);
    putUnitInstance(v);
  }
 else   if (toType.getSort() == Type.ARRAY) {
    v.checkcast(toType);
  }
 else   if (toType.getSort() == Type.OBJECT) {
    if (fromType.getSort() == Type.OBJECT || fromType.getSort() == Type.ARRAY) {
      if (!toType.equals(OBJECT_TYPE)) {
        v.checkcast(toType);
      }
    }
 else {
      box(fromType,toType,v);
    }
  }
 else   if (fromType.getSort() == Type.OBJECT) {
    if (toType.getSort() == Type.BOOLEAN || toType.getSort() == Type.CHAR) {
      coerce(fromType,boxType(toType),v);
    }
 else {
      coerce(fromType,getType(Number.class),v);
    }
    unbox(toType,v);
  }
 else {
    v.cast(fromType,toType);
  }
}
