{
  Collection<KtType> supertypes=descriptor.getTypeConstructor().getSupertypes();
  return ContainerUtil.filter(supertypes,new Condition<KtType>(){
    @Override public boolean value(    KtType type){
      ClassDescriptor classDescriptor=getClassDescriptorForType(type);
      return !FAKE_CLASSES.contains(getFqNameSafe(classDescriptor).asString()) && !(classDescriptor.getKind() == ClassKind.INTERFACE && isNativeObject(classDescriptor));
    }
  }
);
}
