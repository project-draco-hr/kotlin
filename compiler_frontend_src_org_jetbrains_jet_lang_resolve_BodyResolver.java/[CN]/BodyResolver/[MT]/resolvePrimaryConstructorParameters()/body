{
  for (  Map.Entry<JetClass,MutableClassDescriptor> entry : context.getClasses().entrySet()) {
    JetClass klass=entry.getKey();
    MutableClassDescriptor classDescriptor=entry.getValue();
    ConstructorDescriptor unsubstitutedPrimaryConstructor=classDescriptor.getUnsubstitutedPrimaryConstructor();
    annotationResolver.resolveAnnotationsArguments(classDescriptor.getScopeForSupertypeResolution(),klass.getPrimaryConstructorModifierList(),trace);
    if (unsubstitutedPrimaryConstructor != null) {
      WritableScope parameterScope=new WritableScopeImpl(classDescriptor.getScopeForSupertypeResolution(),unsubstitutedPrimaryConstructor,RedeclarationHandler.DO_NOTHING,"Scope with value parameters of a constructor");
      for (      ValueParameterDescriptor valueParameterDescriptor : unsubstitutedPrimaryConstructor.getValueParameters()) {
        parameterScope.addVariableDescriptor(valueParameterDescriptor);
      }
      parameterScope.changeLockLevel(WritableScope.LockLevel.READING);
      expressionTypingServices.resolveValueParameters(klass.getPrimaryConstructorParameters(),unsubstitutedPrimaryConstructor.getValueParameters(),parameterScope,context.getOuterDataFlowInfo(),trace);
    }
  }
}
