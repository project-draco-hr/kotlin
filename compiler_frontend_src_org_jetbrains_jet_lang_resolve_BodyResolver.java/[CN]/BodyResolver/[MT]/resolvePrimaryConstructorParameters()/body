{
  for (  Map.Entry<JetClassOrObject,MutableClassDescriptor> entry : context.getClasses().entrySet()) {
    if (!(entry.getKey() instanceof JetClass))     continue;
    JetClass klass=(JetClass)entry.getKey();
    MutableClassDescriptor classDescriptor=entry.getValue();
    ConstructorDescriptor unsubstitutedPrimaryConstructor=classDescriptor.getUnsubstitutedPrimaryConstructor();
    annotationResolver.resolveAnnotationsArguments(classDescriptor.getScopeForSupertypeResolution(),klass.getPrimaryConstructorModifierList(),trace);
    if (unsubstitutedPrimaryConstructor != null) {
      WritableScope parameterScope=getPrimaryConstructorParametersScope(classDescriptor.getScopeForSupertypeResolution(),unsubstitutedPrimaryConstructor);
      expressionTypingServices.resolveValueParameters(klass.getPrimaryConstructorParameters(),unsubstitutedPrimaryConstructor.getValueParameters(),parameterScope,context.getOuterDataFlowInfo(),trace);
    }
  }
}
