{
  Collection<Box<DeferredType>> deferredTypes=trace.getKeys(DEFERRED_TYPE);
  if (deferredTypes != null) {
    final Queue<DeferredType> queue=new Queue<DeferredType>(deferredTypes.size() + 1);
    trace.addHandler(DEFERRED_TYPE,new ObservableBindingTrace.RecordHandler<Box<DeferredType>,Boolean>(){
      @Override public void handleRecord(      WritableSlice<Box<DeferredType>,Boolean> deferredTypeKeyDeferredTypeWritableSlice,      Box<DeferredType> key,      Boolean value){
        queue.addLast(key.getData());
      }
    }
);
    for (    Box<DeferredType> deferredType : deferredTypes) {
      queue.addLast(deferredType.getData());
    }
    while (!queue.isEmpty()) {
      DeferredType deferredType=queue.pullFirst();
      if (!deferredType.isComputed()) {
        try {
          deferredType.getDelegate();
        }
 catch (        ReenteringLazyValueComputationException e) {
        }
      }
    }
  }
}
