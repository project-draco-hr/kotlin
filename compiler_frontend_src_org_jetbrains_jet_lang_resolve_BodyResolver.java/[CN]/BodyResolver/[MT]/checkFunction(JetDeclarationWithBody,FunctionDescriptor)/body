{
  DeclarationDescriptor containingDescriptor=functionDescriptor.getContainingDeclaration();
  PsiElement nameIdentifier;
  boolean isPropertyAccessor=false;
  if (function instanceof JetNamedFunction) {
    nameIdentifier=((JetNamedFunction)function).getNameIdentifier();
  }
 else   if (function instanceof JetPropertyAccessor) {
    isPropertyAccessor=true;
    nameIdentifier=((JetPropertyAccessor)function).getNamePlaceholder();
  }
 else {
    throw new UnsupportedOperationException();
  }
  JetModifierListOwner modifierListOwner=(JetModifierListOwner)function;
  JetModifierList modifierList=modifierListOwner.getModifierList();
  ASTNode abstractNode=modifierList != null ? modifierList.getModifierNode(JetTokens.ABSTRACT_KEYWORD) : null;
  boolean hasAbstractModifier=abstractNode != null;
  if (containingDescriptor instanceof ClassDescriptor) {
    ClassDescriptor classDescriptor=(ClassDescriptor)containingDescriptor;
    boolean inTrait=classDescriptor.getKind() == ClassKind.TRAIT;
    boolean inEnum=classDescriptor.getKind() == ClassKind.ENUM_CLASS;
    boolean inAbstractClass=classDescriptor.getModality() == Modality.ABSTRACT;
    if (hasAbstractModifier && !inAbstractClass && !inTrait&& !inEnum) {
      context.getTrace().report(ABSTRACT_FUNCTION_IN_NON_ABSTRACT_CLASS.on(abstractNode,functionDescriptor.getName(),classDescriptor));
    }
    if (hasAbstractModifier && inTrait && !isPropertyAccessor) {
      context.getTrace().report(REDUNDANT_ABSTRACT.on(modifierListOwner,abstractNode));
    }
    if (function.getBodyExpression() != null && hasAbstractModifier) {
      context.getTrace().report(ABSTRACT_FUNCTION_WITH_BODY.on(abstractNode,functionDescriptor));
    }
    if (function.getBodyExpression() == null && !hasAbstractModifier && !inTrait && nameIdentifier != null && !isPropertyAccessor) {
      context.getTrace().report(NON_ABSTRACT_FUNCTION_WITH_NO_BODY.on(nameIdentifier,functionDescriptor));
    }
    return;
  }
  if (hasAbstractModifier) {
    if (!isPropertyAccessor) {
      context.getTrace().report(NON_MEMBER_ABSTRACT_FUNCTION.on(abstractNode,functionDescriptor));
    }
 else {
      context.getTrace().report(NON_MEMBER_ABSTRACT_ACCESSOR.on(abstractNode));
    }
  }
  if (function.getBodyExpression() == null && !hasAbstractModifier && nameIdentifier != null && !isPropertyAccessor) {
    context.getTrace().report(NON_MEMBER_FUNCTION_NO_BODY.on(nameIdentifier,functionDescriptor));
  }
}
