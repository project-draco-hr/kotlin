{
  assert(at(VAL_KEYWORD) || at(VAR_KEYWORD));
  advance();
  boolean typeParametersDeclared=at(LT) && parseTypeParameterList(TokenSet.create(IDENTIFIER,EQ,COLON,SEMICOLON));
  TokenSet propertyNameFollow=TokenSet.create(COLON,EQ,LBRACE,RBRACE,SEMICOLON,VAL_KEYWORD,VAR_KEYWORD,FUN_KEYWORD,CLASS_KEYWORD);
  myBuilder.disableJoiningComplexTokens();
  PsiBuilder.Marker receiver=mark();
  boolean receiverTypeDeclared=parseReceiverType("property",propertyNameFollow);
  boolean multiDeclaration=at(LPAR);
  errorIf(receiver,multiDeclaration && receiverTypeDeclared,"Receiver type is not allowed on a destructuring declaration");
  boolean isNameOnTheNextLine=eol();
  PsiBuilder.Marker beforeName=mark();
  if (multiDeclaration) {
    PsiBuilder.Marker multiDecl=mark();
    parseMultiDeclarationName(propertyNameFollow);
    errorIf(multiDecl,!local,"Destructuring declarations are only allowed for local variables/values");
  }
 else {
    parseFunctionOrPropertyName(receiverTypeDeclared,"property",propertyNameFollow,false);
  }
  myBuilder.restoreJoiningComplexTokensState();
  boolean noTypeReference=true;
  if (at(COLON)) {
    noTypeReference=false;
    PsiBuilder.Marker type=mark();
    advance();
    parseTypeRef();
    errorIf(type,multiDeclaration,"Type annotations are not allowed on destructuring declarations");
  }
  parseTypeConstraintsGuarded(typeParametersDeclared);
  if (!parsePropertyDelegateOrAssignment() && isNameOnTheNextLine && noTypeReference&& !receiverTypeDeclared) {
    beforeName.rollbackTo();
    error("Expecting property name or receiver type");
    return PROPERTY;
  }
  beforeName.drop();
  if (!local) {
    consumeIf(SEMICOLON);
    AccessorKind accessorKind=parsePropertyGetterOrSetter(null);
    if (accessorKind != null) {
      parsePropertyGetterOrSetter(accessorKind);
    }
    if (!atSet(EOL_OR_SEMICOLON,RBRACE)) {
      if (getLastToken() != SEMICOLON) {
        errorUntil("Property getter or setter expected",TokenSet.create(EOL_OR_SEMICOLON,LBRACE,RBRACE));
      }
    }
 else {
      consumeIf(SEMICOLON);
    }
  }
  return multiDeclaration ? DESTRUCTURING_DECLARATION : PROPERTY;
}
