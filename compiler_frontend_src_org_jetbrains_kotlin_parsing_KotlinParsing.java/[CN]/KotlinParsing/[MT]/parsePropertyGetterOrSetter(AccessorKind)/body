{
  PsiBuilder.Marker getterOrSetter=mark();
  parseModifierList(DEFAULT,TokenSet.EMPTY);
  AccessorKind accessorKind;
  if (at(GET_KEYWORD)) {
    accessorKind=AccessorKind.GET;
  }
 else   if (at(SET_KEYWORD)) {
    accessorKind=AccessorKind.SET;
  }
 else {
    getterOrSetter.rollbackTo();
    return null;
  }
  if (accessorKind == notAllowedKind) {
    getterOrSetter.rollbackTo();
    return null;
  }
  advance();
  if (!at(LPAR)) {
    TokenSet ACCESSOR_FIRST_OR_PROPERTY_END=TokenSet.orSet(MODIFIER_KEYWORDS,TokenSet.create(AT,GET_KEYWORD,SET_KEYWORD,EOL_OR_SEMICOLON,RBRACE));
    if (!atSet(ACCESSOR_FIRST_OR_PROPERTY_END)) {
      errorUntil("Accessor body expected",TokenSet.orSet(ACCESSOR_FIRST_OR_PROPERTY_END,TokenSet.create(LBRACE,LPAR,EQ)));
    }
 else {
      closeDeclarationWithCommentBinders(getterOrSetter,PROPERTY_ACCESSOR,false);
      return accessorKind;
    }
  }
  myBuilder.disableNewlines();
  expect(LPAR,"Expecting '('",TokenSet.create(RPAR,IDENTIFIER,COLON,LBRACE,EQ));
  if (accessorKind == AccessorKind.SET) {
    PsiBuilder.Marker parameterList=mark();
    PsiBuilder.Marker setterParameter=mark();
    parseModifierList(DEFAULT,TokenSet.create(COMMA,COLON,RPAR));
    expect(IDENTIFIER,"Expecting parameter name",TokenSet.create(RPAR,COLON,LBRACE,EQ));
    if (at(COLON)) {
      advance();
      parseTypeRef();
    }
    setterParameter.done(VALUE_PARAMETER);
    parameterList.done(VALUE_PARAMETER_LIST);
  }
  if (!at(RPAR)) {
    errorUntil("Expecting ')'",TokenSet.create(RPAR,COLON,LBRACE,RBRACE,EQ,EOL_OR_SEMICOLON));
  }
  if (at(RPAR)) {
    advance();
  }
  myBuilder.restoreNewlinesState();
  if (at(COLON)) {
    advance();
    parseTypeRef();
  }
  parseFunctionBody();
  closeDeclarationWithCommentBinders(getterOrSetter,PROPERTY_ACCESSOR,false);
  return accessorKind;
}
