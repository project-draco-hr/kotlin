{
  receiver.put(receiver.type,v);
switch (receiver.type.getSort()) {
case Type.BOOLEAN:
    v.getstatic("java/lang/Boolean","TYPE","Ljava/lang/Class;");
  break;
case Type.BYTE:
v.getstatic("java/lang/Byte","TYPE","Ljava/lang/Class;");
break;
case Type.SHORT:
v.getstatic("java/lang/Short","TYPE","Ljava/lang/Class;");
break;
case Type.CHAR:
v.getstatic("java/lang/Character","TYPE","Ljava/lang/Class;");
break;
case Type.INT:
v.getstatic("java/lang/Integer","TYPE","Ljava/lang/Class;");
break;
case Type.LONG:
v.getstatic("java/lang/Long","TYPE","Ljava/lang/Class;");
break;
case Type.FLOAT:
v.getstatic("java/lang/Float","TYPE","Ljava/lang/Class;");
break;
case Type.DOUBLE:
v.getstatic("java/lang/Double","TYPE","Ljava/lang/Class;");
break;
default :
v.invokevirtual("java/lang/Object","getClass","()Ljava/lang/Class;");
}
return StackValue.onStack(JetTypeMapper.JL_CLASS_TYPE);
}
