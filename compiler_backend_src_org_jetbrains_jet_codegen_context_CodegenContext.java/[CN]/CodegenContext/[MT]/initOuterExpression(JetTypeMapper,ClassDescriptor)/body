{
  lazyOuterExpression=LockBasedStorageManager.NO_LOCKS.createNullableLazyValue(new Function0<StackValue>(){
    @Override public StackValue invoke(){
      BindingContext bindingContext=typeMapper.getBindingContext();
      ClassDescriptor enclosingClass=getEnclosingClass();
      return enclosingClass != null && canHaveOuter(bindingContext,classDescriptor) ? StackValue.field(typeMapper.mapType(enclosingClass),CodegenBinding.getAsmType(bindingContext,classDescriptor),CAPTURED_THIS_FIELD,false) : null;
    }
  }
);
}
