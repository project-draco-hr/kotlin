{
  TypeConstructor constructor=subtype.getConstructor();
  if (constructor.equals(supertype.getConstructor())) {
    return subtype;
  }
  for (  Type immediateSupertype : constructor.getSupertypes()) {
    Type correspondingSupertype=findCorrespondingSupertype(immediateSupertype,supertype);
    if (correspondingSupertype != null) {
      return substituteInType(getSubstitutionContext(subtype),correspondingSupertype,Variance.INVARIANT);
    }
  }
  return null;
}
