{
  return receiverDescriptor.accept(new ReceiverDescriptorVisitor<DataFlowValue,BindingContext>(){
    @Override public DataFlowValue visitNoReceiver(    ReceiverDescriptor noReceiver,    BindingContext data){
      throw new IllegalArgumentException("No DataFlowValue exists for ReceiverDescriptor.NO_RECEIVER");
    }
    @Override public DataFlowValue visitExtensionReceiver(    ExtensionReceiver receiver,    BindingContext data){
      return createDataFlowValue(receiver);
    }
    @Override public DataFlowValue visitExpressionReceiver(    ExpressionReceiver receiver,    BindingContext bindingContext){
      return createDataFlowValue(receiver.getExpression(),receiver.getType(),bindingContext);
    }
    @Override public DataFlowValue visitClassReceiver(    ClassReceiver receiver,    BindingContext data){
      return createDataFlowValue(receiver);
    }
    @Override public DataFlowValue visitTransientReceiver(    TransientReceiver receiver,    BindingContext data){
      return createTransientDataFlowValue(receiver);
    }
    @Override public DataFlowValue visitScriptReceiver(    ScriptReceiver receiver,    BindingContext data){
      return createTransientDataFlowValue(receiver);
    }
    @NotNull private DataFlowValue createTransientDataFlowValue(    ReceiverDescriptor receiver){
      JetType type=receiver.getType();
      boolean nullable=type.isNullable() || TypeUtils.hasNullableSuperType(type);
      return new DataFlowValue(receiver,type,nullable,Nullability.NOT_NULL);
    }
  }
,bindingContext);
}
