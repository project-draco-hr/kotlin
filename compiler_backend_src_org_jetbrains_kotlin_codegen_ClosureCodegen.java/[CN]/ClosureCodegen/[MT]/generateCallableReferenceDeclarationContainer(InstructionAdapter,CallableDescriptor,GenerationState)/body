{
  DeclarationDescriptor container=descriptor.getContainingDeclaration();
  if (container instanceof ClassDescriptor) {
    putJavaLangClassInstance(iv,state.getTypeMapper().mapType(((ClassDescriptor)container).getDefaultType()));
    wrapJavaClassIntoKClass(iv);
  }
 else   if (container instanceof PackageFragmentDescriptor) {
    iv.aconst(state.getTypeMapper().mapOwner(descriptor));
    iv.aconst(state.getModuleName());
    iv.invokestatic(REFLECTION,"getOrCreateKotlinPackage",Type.getMethodDescriptor(K_DECLARATION_CONTAINER_TYPE,getType(Class.class),getType(String.class)),false);
  }
 else {
    iv.aconst(null);
  }
}
