{
  List<Field> fields=Lists.newArrayList();
  for (  Map.Entry<DiType,Field> entry : typeToFields.entries()) {
    if (parameterType.isAssignableFrom(entry.getKey())) {
      fields.add(entry.getValue());
    }
  }
  if (fields.isEmpty()) {
    if (parameterType.getClazz().isPrimitive() || parameterType.getClazz().getPackage().getName().equals("java.lang")) {
      throw new IllegalArgumentException("cannot declare magic field of type " + parameterType + ": "+ errorMessage);
    }
    Field dependency=addNewField(parameterType);
    satisfyDependenciesFor(dependency,neededFor);
    return dependency;
  }
 else   if (fields.size() == 1) {
    return fields.iterator().next();
  }
 else {
    throw new IllegalArgumentException("Ambiguous dependency: \n" + errorMessage + "\nneeded for "+ neededFor+ "\navailable: "+ fields);
  }
}
