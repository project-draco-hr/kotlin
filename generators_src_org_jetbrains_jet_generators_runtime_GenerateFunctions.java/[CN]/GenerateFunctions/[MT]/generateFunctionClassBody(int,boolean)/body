{
switch (kind) {
case FUNCTION:
case EXTENSION_FUNCTION:
{
      out.println(" {");
      if (kotlin) {
        generateKotlinInvokeSignature(i);
      }
 else {
        generateJavaInvokeSignature(i);
      }
      out.println("}");
      break;
    }
case K_FUNCTION:
case K_MEMBER_FUNCTION:
case K_EXTENSION_FUNCTION:
{
    if (kotlin) {
      out.println();
    }
 else {
      out.println(" {");
      out.println("}");
    }
    break;
  }
default :
throw new IllegalStateException("Unknown kind: " + kind);
}
}
