{
  return new JetTypeJetSignatureReader(javaSemanticServices,kotlinBuiltIns,typeVariableResolver){
    @Override public void visitBaseType(    char descriptor,    boolean nullable){
      JetType primitiveType=getPrimitiveType(descriptor,nullable);
      JetType arrayType;
      if (!nullable) {
        arrayType=KotlinBuiltIns.getInstance().getPrimitiveArrayJetTypeByPrimitiveJetType(primitiveType);
      }
 else {
        arrayType=TypeUtils.makeNullableAsSpecified(KotlinBuiltIns.getInstance().getArrayType(primitiveType),nullable);
      }
      JetTypeJetSignatureReader.this.done(arrayType);
    }
    @Override protected void done(    @NotNull JetType jetType){
      JetType arrayType=TypeUtils.makeNullableAsSpecified(KotlinBuiltIns.getInstance().getArrayType(jetType),nullable);
      JetTypeJetSignatureReader.this.done(arrayType);
    }
  }
;
}
