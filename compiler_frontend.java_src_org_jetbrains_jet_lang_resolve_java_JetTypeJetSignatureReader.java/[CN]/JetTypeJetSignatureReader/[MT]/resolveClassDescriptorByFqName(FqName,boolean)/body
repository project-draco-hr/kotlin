{
  if (!forceReal) {
    ClassDescriptor mappedDescriptor=JavaToKotlinClassMap.getInstance().mapKotlinClass(ourName,TypeUsage.MEMBER_SIGNATURE_INVARIANT);
    if (mappedDescriptor != null) {
      return mappedDescriptor;
    }
  }
  Matcher functionMatcher=Pattern.compile("jet\\.Function(\\d+)").matcher(ourName.getFqName());
  if (functionMatcher.matches()) {
    return KotlinBuiltIns.getInstance().getFunction(Integer.parseInt(functionMatcher.group(1)));
  }
  Matcher patternMatcher=Pattern.compile("jet\\.Tuple(\\d+)").matcher(ourName.getFqName());
  if (patternMatcher.matches()) {
    return KotlinBuiltIns.getInstance().getTuple(Integer.parseInt(patternMatcher.group(1)));
  }
  return javaDescriptorResolver.resolveClass(ourName,DescriptorSearchRule.INCLUDE_KOTLIN);
}
