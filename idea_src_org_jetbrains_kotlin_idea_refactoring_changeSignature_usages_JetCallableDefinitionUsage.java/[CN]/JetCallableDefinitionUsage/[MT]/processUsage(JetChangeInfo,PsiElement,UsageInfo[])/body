{
  if (!(element instanceof JetNamedDeclaration))   return true;
  JetPsiFactory psiFactory=JetPsiFactory(element.getProject());
  if (changeInfo.isNameChanged()) {
    PsiElement identifier=((JetCallableDeclaration)element).getNameIdentifier();
    if (identifier != null) {
      identifier.replace(psiFactory.createIdentifier(changeInfo.getNewName()));
    }
  }
  changeReturnTypeIfNeeded(changeInfo,element);
  JetParameterList parameterList=PsiUtilPackage.getValueParameterList((JetNamedDeclaration)element);
  if (changeInfo.isParameterSetOrOrderChanged()) {
    processParameterListWithStructuralChanges(changeInfo,element,parameterList,psiFactory);
  }
 else   if (parameterList != null) {
    int paramIndex=originalCallableDescriptor.getExtensionReceiverParameter() != null ? 1 : 0;
    for (    JetParameter parameter : parameterList.getParameters()) {
      JetParameterInfo parameterInfo=changeInfo.getNewParameters()[paramIndex];
      changeParameter(paramIndex,parameter,parameterInfo);
      paramIndex++;
    }
    ShortenPackage.addToShorteningWaitSet(parameterList,Options.DEFAULT);
  }
  if (element instanceof JetCallableDeclaration && changeInfo.isReceiverTypeChanged()) {
    String receiverTypeText=changeInfo.renderReceiverType((JetCallableDefinitionUsage<PsiElement>)this);
    JetTypeReference receiverTypeRef=receiverTypeText != null ? psiFactory.createType(receiverTypeText) : null;
    JetTypeReference newReceiverTypeRef=TypeRefHelpersPackage.setReceiverTypeReference((JetCallableDeclaration)element,receiverTypeRef);
    if (newReceiverTypeRef != null) {
      ShortenPackage.addToShorteningWaitSet(newReceiverTypeRef,ShortenReferences.Options.DEFAULT);
    }
  }
  if (changeInfo.isVisibilityChanged() && !JetPsiUtil.isLocal((JetDeclaration)element)) {
    changeVisibility(changeInfo,element);
  }
  return true;
}
