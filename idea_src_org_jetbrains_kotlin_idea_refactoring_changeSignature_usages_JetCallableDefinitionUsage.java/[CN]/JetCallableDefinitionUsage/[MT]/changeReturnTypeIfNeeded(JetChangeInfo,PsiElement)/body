{
  if (!(element instanceof JetCallableDeclaration))   return;
  if (element instanceof JetConstructor)   return;
  JetCallableDeclaration callable=(JetCallableDeclaration)element;
  boolean returnTypeIsNeeded;
  if (element instanceof JetFunction) {
    returnTypeIsNeeded=!(callable instanceof JetFunctionLiteral) && (changeInfo.isRefactoringTarget(originalCallableDescriptor) || callable.getTypeReference() != null);
  }
 else {
    returnTypeIsNeeded=element instanceof JetProperty || element instanceof JetParameter;
  }
  if (changeInfo.isReturnTypeChanged() && returnTypeIsNeeded) {
    callable.setTypeReference(null);
    String returnTypeText=changeInfo.renderReturnType((JetCallableDefinitionUsage<PsiElement>)this);
    if (!(returnTypeText.equals("Unit") || returnTypeText.equals("kotlin.Unit"))) {
      ShortenWaitingSetKt.addToShorteningWaitSet(callable.setTypeReference(JetPsiFactoryKt.JetPsiFactory(callable).createType(returnTypeText)),Options.DEFAULT);
    }
  }
}
