{
  if (descriptor instanceof PropertyDescriptor) {
    PropertyDescriptor propertyDescriptor=(PropertyDescriptor)descriptor;
    if (propertyDescriptor.getGetter() != null) {
      checkPlatformNameApplicability(propertyDescriptor.getGetter());
    }
    if (propertyDescriptor.getSetter() != null) {
      checkPlatformNameApplicability(propertyDescriptor.getSetter());
    }
  }
  AnnotationDescriptor annotation=descriptor.getAnnotations().findAnnotation(new FqName("kotlin.platform.platformName"));
  if (annotation == null)   return;
  JetAnnotationEntry annotationEntry=trace.get(BindingContext.ANNOTATION_DESCRIPTOR_TO_PSI_ELEMENT,annotation);
  if (annotationEntry == null)   return;
  if (!DescriptorUtils.isTopLevelDeclaration(descriptor) || !(descriptor instanceof FunctionDescriptor)) {
    trace.report(INAPPLICABLE_ANNOTATION.on(annotationEntry));
  }
  Collection<CompileTimeConstant<?>> values=annotation.getAllValueArguments().values();
  if (!values.isEmpty()) {
    CompileTimeConstant<?> name=values.iterator().next();
    if (name instanceof StringValue) {
      String value=((StringValue)name).getValue();
      if (value == null || !Name.isValidIdentifier(value)) {
        trace.report(ILLEGAL_PLATFORM_NAME.on(annotationEntry,String.valueOf(value)));
      }
    }
  }
}
