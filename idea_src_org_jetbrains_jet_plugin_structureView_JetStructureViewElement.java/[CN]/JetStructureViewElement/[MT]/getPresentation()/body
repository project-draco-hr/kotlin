{
  return new ColoredItemPresentation(){
    @Override public String getPresentableText(){
      if (elementText == null) {
        elementText=getElementText();
      }
      return elementText;
    }
    @Override public String getLocationString(){
      return null;
    }
    @Override public Icon getIcon(    boolean unused){
      if (myElement.isValid()) {
        return PsiIconUtil.getProvidersIcon(myElement,0);
      }
      return null;
    }
    @Nullable @Override public TextAttributesKey getTextAttributesKey(){
      if (myElement instanceof JetModifierListOwner && JetPsiUtil.isDeprecated((JetModifierListOwner)myElement)) {
        return CodeInsightColors.DEPRECATED_ATTRIBUTES;
      }
      return null;
    }
  }
;
}
