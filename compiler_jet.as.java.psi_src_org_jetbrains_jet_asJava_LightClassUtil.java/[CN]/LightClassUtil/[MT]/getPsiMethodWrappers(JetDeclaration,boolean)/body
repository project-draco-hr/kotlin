{
  PsiClass psiClass=getWrappingClass(declaration);
  if (psiClass == null) {
    return Collections.emptyList();
  }
  List<PsiMethod> methods=new SmartList<PsiMethod>();
  for (  PsiMethod method : psiClass.getMethods()) {
    try {
      if (method instanceof JetClsMethod && ((JetClsMethod)method).getOrigin() == declaration) {
        methods.add(method);
        if (!collectAll) {
          return methods;
        }
      }
    }
 catch (    ProcessCanceledException e) {
      throw e;
    }
catch (    Throwable e) {
      throw new IllegalStateException("Error while wrapping declaration " + declaration.getName() + "Context\n:"+ String.format("=== In file ===\n" + "%s\n" + "=== On element ===\n"+ "%s\n"+ "=== WrappedElement ===\n"+ "%s\n",declaration.getContainingFile().getText(),declaration.getText(),method.toString()),e);
    }
  }
  return methods;
}
