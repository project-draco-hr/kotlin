{
  PsiType psiType=parameter.getPsiParameter().getType();
  Name name=Name.identifier(getParameterName(i,parameter));
  TypeUsage typeUsage=JavaTypeTransformer.adjustTypeUsageWithMutabilityAnnotations(parameter.getPsiParameter(),TypeUsage.MEMBER_SIGNATURE_CONTRAVARIANT);
  JetType outType=getTypeTransformer().transformToType(psiType,typeUsage,typeVariableResolver);
  JetType varargElementType;
  if (psiType instanceof PsiEllipsisType) {
    varargElementType=KotlinBuiltIns.getInstance().getArrayElementType(TypeUtils.makeNotNullable(outType));
    outType=TypeUtils.makeNotNullable(outType);
  }
 else {
    varargElementType=null;
  }
  JetType transformedType;
  if (JavaAnnotationResolver.findAnnotationWithExternal(parameter.getPsiParameter(),JvmAbi.JETBRAINS_NOT_NULL_ANNOTATION.getFqName().asString()) != null) {
    transformedType=TypeUtils.makeNullableAsSpecified(outType,false);
  }
 else {
    transformedType=outType;
  }
  return JvmMethodParameterMeaning.regular(new ValueParameterDescriptorImpl(containingDeclaration,i,Collections.<AnnotationDescriptor>emptyList(),name,transformedType,false,varargElementType));
}
