{
  KotlinModuleDescriptionBuilder builder=FACTORY.create();
  boolean noSources=true;
  Set<File> outputDirs=new HashSet<File>();
  for (  ModuleBuildTarget target : chunk.getTargets()) {
    outputDirs.add(getOutputDir(target));
  }
  ProjectBuilderLogger logger=context.getLoggingManager().getProjectBuilderLogger();
  for (  ModuleBuildTarget target : chunk.getTargets()) {
    File outputDir=getOutputDir(target);
    List<File> moduleSources=new ArrayList<File>(IncrementalCompilation.ENABLED ? sourceFiles.get(target) : KotlinSourceFileCollector.getAllKotlinSourceFiles(target));
    if (moduleSources.size() > 0 || hasRemovedFiles) {
      noSources=false;
      if (logger.isEnabled()) {
        logger.logCompiledFiles(moduleSources,KotlinBuilder.KOTLIN_BUILDER_NAME,"Compiling files:");
      }
    }
    builder.addModule(target.getId(),outputDir.getAbsolutePath(),getKotlinModuleDependencies(context,target),moduleSources,target.isTests(),outputDirs);
  }
  if (noSources)   return null;
  File scriptFile=File.createTempFile("kjps",StringUtil.sanitizeJavaIdentifier(chunk.getName()) + ".script.xml");
  FileUtil.writeToFile(scriptFile,builder.asText().toString());
  return scriptFile;
}
