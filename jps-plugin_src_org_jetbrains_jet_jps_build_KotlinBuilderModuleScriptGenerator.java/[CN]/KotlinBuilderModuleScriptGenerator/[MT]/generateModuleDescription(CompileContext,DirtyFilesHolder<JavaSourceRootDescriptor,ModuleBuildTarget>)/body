{
  KotlinModuleDescriptionBuilder builder=FACTORY.create();
  boolean noSources=true;
  Map<ModuleBuildTarget,List<File>> target2sources=getMapTargetToDirtySources(dirtyFilesHolder);
  Set<ModuleBuildTarget> targets=target2sources.keySet();
  Set<File> outputDirs=ContainerUtil.map2Set(targets,new Function<ModuleBuildTarget,File>(){
    @Override public File fun(    ModuleBuildTarget target){
      return getOutputDir(target);
    }
  }
);
  for (  ModuleBuildTarget target : targets) {
    File outputDir=getOutputDir(target);
    List<File> sourceFiles=target2sources.get(target);
    if (sourceFiles == null) {
      sourceFiles=Collections.emptyList();
    }
    noSources&=sourceFiles.isEmpty();
    builder.addModule(target.getId(),outputDir.getAbsolutePath(),getKotlinModuleDependencies(context,target),sourceFiles,target.isTests(),outputDirs);
  }
  if (noSources)   return null;
  ModuleBuildTarget representativeTarget=targets.iterator().next();
  File scriptFile=new File(getOutputDir(representativeTarget),"script." + FACTORY.getFileExtension());
  writeScriptToFile(context,builder.asText(),scriptFile);
  return scriptFile;
}
