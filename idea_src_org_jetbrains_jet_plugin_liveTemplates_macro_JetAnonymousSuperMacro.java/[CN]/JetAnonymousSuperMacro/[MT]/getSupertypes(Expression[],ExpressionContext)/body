{
  if (params.length != 0)   return null;
  Project project=context.getProject();
  PsiDocumentManager.getInstance(project).commitAllDocuments();
  PsiFile psiFile=PsiDocumentManager.getInstance(project).getPsiFile(context.getEditor().getDocument());
  if (!(psiFile instanceof JetFile))   return null;
  JetExpression expression=PsiTreeUtil.getParentOfType(psiFile.findElementAt(context.getStartOffset()),JetExpression.class);
  if (expression == null)   return null;
  BindingContext bc=AnalyzerFacadeWithCache.getContextForElement(expression);
  JetScope scope=bc.get(BindingContext.RESOLUTION_SCOPE,expression);
  if (scope == null)   return null;
  List<PsiNamedElement> result=new ArrayList<PsiNamedElement>();
  for (  DeclarationDescriptor descriptor : scope.getDescriptors(JetScope.KindFilter.NON_SINGLETON_CLASSIFIERS,JetScope.ALL_NAME_FILTER)) {
    if (!(descriptor instanceof ClassDescriptor))     continue;
    ClassDescriptor classDescriptor=(ClassDescriptor)descriptor;
    if (!classDescriptor.getModality().isOverridable())     continue;
    ClassKind kind=classDescriptor.getKind();
    if (kind == ClassKind.TRAIT || kind == ClassKind.CLASS) {
      PsiElement declaration=DescriptorToSourceUtils.descriptorToDeclaration(descriptor);
      if (declaration != null) {
        result.add((PsiNamedElement)declaration);
      }
    }
  }
  return result.toArray(new PsiNamedElement[result.size()]);
}
