{
  return new CopyBuilder<SimpleFunctionDescriptor>(){
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setOwner(    @NotNull DeclarationDescriptor owner){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setModality(    @NotNull Modality modality){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setVisibility(    @NotNull Visibility visibility){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setKind(    @NotNull Kind kind){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setCopyOverrides(    boolean copyOverrides){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setName(    @NotNull Name name){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setValueParameters(    @NotNull List<ValueParameterDescriptor> parameters){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setSubstitution(    @NotNull TypeSubstitution substitution){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setTypeParameters(    @NotNull List<TypeParameterDescriptor> parameters){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setReturnType(    @NotNull KotlinType type){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setExtensionReceiverType(    @Nullable KotlinType type){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setDispatchReceiverParameter(    @Nullable ReceiverParameterDescriptor dispatchReceiverParameter){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setOriginal(    @NotNull FunctionDescriptor original){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setSignatureChange(){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setPreserveSourceElement(){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setDropOriginalInContainingParts(){
      return this;
    }
    @NotNull @Override public CopyBuilder<SimpleFunctionDescriptor> setHiddenToOvercomeSignatureClash(){
      return this;
    }
    @Nullable @Override public SimpleFunctionDescriptor build(){
      return ErrorSimpleFunctionDescriptorImpl.this;
    }
  }
;
}
