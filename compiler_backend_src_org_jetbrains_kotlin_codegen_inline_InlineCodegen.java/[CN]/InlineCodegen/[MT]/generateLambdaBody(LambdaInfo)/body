{
  JetExpression declaration=info.getFunctionWithBodyOrCallableReference();
  FunctionDescriptor descriptor=info.getFunctionDescriptor();
  MethodContext parentContext=codegen.getContext();
  MethodContext context=parentContext.intoClosure(descriptor,codegen,typeMapper).intoInlinedLambda(descriptor);
  JvmMethodSignature jvmMethodSignature=typeMapper.mapSignature(descriptor);
  Method asmMethod=jvmMethodSignature.getAsmMethod();
  MethodNode methodNode=new MethodNode(InlineCodegenUtil.API,getMethodAsmFlags(descriptor,context.getContextKind()),asmMethod.getName(),asmMethod.getDescriptor(),jvmMethodSignature.getGenericsSignature(),null);
  MethodVisitor adapter=InlineCodegenUtil.wrapWithMaxLocalCalc(methodNode);
  SMAP smap=generateMethodBody(adapter,descriptor,context,declaration,jvmMethodSignature,true);
  adapter.visitMaxs(-1,-1);
  return new SMAPAndMethodNode(methodNode,smap);
}
