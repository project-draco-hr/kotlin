{
  for (  JetClass aClass : context.getClasses().keySet()) {
    if (!context.completeAnalysisNeeded(aClass))     continue;
    checkClassOrObject(aClass);
  }
  for (  JetObjectDeclaration objectDeclaration : context.getObjects().keySet()) {
    if (!context.completeAnalysisNeeded(objectDeclaration))     continue;
    checkClassOrObject(objectDeclaration);
  }
  for (  Map.Entry<JetNamedFunction,FunctionDescriptorImpl> entry : context.getFunctions().entrySet()) {
    JetNamedFunction function=entry.getKey();
    FunctionDescriptorImpl functionDescriptor=entry.getValue();
    if (!context.completeAnalysisNeeded(function))     continue;
    final JetType expectedReturnType=!function.hasBlockBody() && !function.hasDeclaredReturnType() ? NO_EXPECTED_TYPE : functionDescriptor.getReturnType();
    checkFunction(function,expectedReturnType);
  }
  for (  JetSecondaryConstructor constructor : this.context.getConstructors().keySet()) {
    if (!context.completeAnalysisNeeded(constructor))     continue;
    checkFunction(constructor,JetStandardClasses.getUnitType());
  }
  for (  Map.Entry<JetProperty,PropertyDescriptor> entry : context.getProperties().entrySet()) {
    JetProperty property=entry.getKey();
    PropertyDescriptor propertyDescriptor=entry.getValue();
    checkProperty(property,propertyDescriptor);
  }
}
