{
  boolean isVar=!field.isFinal();
  PropertyDescriptorImpl propertyDescriptor=createPropertyDescriptor(owner,name,field,isVar);
  propertyDescriptor.initialize(null,null);
  TypeVariableResolver typeVariableResolver=new TypeVariableResolver(Collections.<TypeParameterDescriptor>emptyList(),propertyDescriptor);
  JetType propertyType=getPropertyType(field,typeVariableResolver);
  propertyType=getAlternativeSignatureData(isVar,field,propertyDescriptor,propertyType);
  propertyDescriptor.setType(propertyType,Collections.<TypeParameterDescriptor>emptyList(),DescriptorUtils.getExpectedThisObjectIfNeeded(owner),(JetType)null);
  trace.record(BindingContext.VARIABLE,field.getPsi(),propertyDescriptor);
  trace.record(JavaBindingContext.IS_DECLARED_IN_JAVA,propertyDescriptor);
  if (AnnotationUtils.isPropertyAcceptableAsAnnotationParameter(propertyDescriptor)) {
    PsiExpression initializer=field.getPsi().getInitializer();
    if (initializer instanceof PsiLiteralExpression) {
      CompileTimeConstant<?> constant=JavaAnnotationArgumentResolver.resolveCompileTimeConstantValue(((PsiLiteralExpression)initializer).getValue(),propertyType);
      if (constant != null) {
        trace.record(BindingContext.COMPILE_TIME_INITIALIZER,propertyDescriptor,constant);
      }
    }
  }
  return propertyDescriptor;
}
