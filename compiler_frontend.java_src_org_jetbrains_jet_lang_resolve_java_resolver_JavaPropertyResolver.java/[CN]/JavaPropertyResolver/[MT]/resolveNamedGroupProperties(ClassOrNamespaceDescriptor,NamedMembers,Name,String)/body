{
  Collection<PropertyPsiData> psiDataCollection=PropertyPsiData.assemblePropertyPsiDataFromElements(namedMembers.getPropertyPsiDataElements());
  Set<PropertyDescriptor> propertiesFromCurrent=new HashSet<PropertyDescriptor>(1);
  int regularPropertiesCount=getNumberOfNonExtensionProperties(psiDataCollection);
  for (  PropertyPsiData propertyPsiData : psiDataCollection) {
    if (!propertyPsiData.isExtension() && regularPropertiesCount > 1) {
      continue;
    }
    if (!DescriptorResolverUtils.isCorrectOwnerForEnumMember(ownerDescriptor,propertyPsiData.getCharacteristicPsi())) {
      continue;
    }
    propertiesFromCurrent.add(resolveProperty(ownerDescriptor,propertyName,context,propertyPsiData));
  }
  Set<PropertyDescriptor> propertiesFromSupertypes=getPropertiesFromSupertypes(propertyName,ownerDescriptor);
  Set<PropertyDescriptor> properties=Sets.newHashSet();
  generateOverrides(ownerDescriptor,propertyName,propertiesFromCurrent,propertiesFromSupertypes,properties);
  OverrideResolver.resolveUnknownVisibilities(properties,trace);
  properties.addAll(propertiesFromCurrent);
  return Sets.<VariableDescriptor>newHashSet(properties);
}
