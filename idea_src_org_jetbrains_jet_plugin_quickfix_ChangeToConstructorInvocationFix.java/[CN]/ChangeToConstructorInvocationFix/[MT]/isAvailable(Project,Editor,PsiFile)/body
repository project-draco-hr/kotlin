{
  if (!super.isAvailable(project,editor,file)) {
    return false;
  }
  JetTypeReference typeReference=element.getTypeReference();
  BindingContext context=KotlinCacheManagerUtil.getDeclarationsBindingContext((JetFile)file);
  JetType supertype=context.get(BindingContext.TYPE,typeReference);
  if (supertype == null)   return false;
  ClassDescriptor classDescriptor=TypeUtils.getClassDescriptor(supertype);
  if (classDescriptor == null)   return false;
  for (  ConstructorDescriptor constructor : classDescriptor.getConstructors()) {
    boolean needsParametersPassed=false;
    for (    ValueParameterDescriptor parameter : constructor.getValueParameters()) {
      needsParametersPassed|=!parameter.hasDefaultValue() && parameter.getVarargElementType() == null;
    }
    if (!needsParametersPassed)     return true;
  }
  return false;
}
