{
  return new JetSingleIntentionActionFactory(){
    @Override public IntentionAction createAction(    Diagnostic diagnostic){
      DiagnosticWithParameters1<JetElement,Integer> diagnosticWithParameters=Errors.WRONG_NUMBER_OF_TYPE_ARGUMENTS.cast(diagnostic);
      Integer size=diagnosticWithParameters.getA();
      JetUserType userType=QuickFixUtil.getParentElementOfType(diagnostic,JetUserType.class);
      if (userType == null)       return null;
      return new AddStarProjectionsFix(userType,size){
        @Override public boolean isAvailable(        @NotNull Project project,        Editor editor,        PsiFile file){
          return super.isAvailable(project,editor,file) && isZeroTypeArguments() && isInsideJavaClassCall();
        }
        private boolean isZeroTypeArguments(){
          return element.getTypeArguments().isEmpty();
        }
        private boolean isInsideJavaClassCall(){
          PsiElement parent=element.getParent().getParent().getParent().getParent();
          if (parent instanceof JetCallExpression) {
            JetExpression calleeExpression=((JetCallExpression)parent).getCalleeExpression();
            if (calleeExpression instanceof JetSimpleNameExpression) {
              JetSimpleNameExpression simpleNameExpression=(JetSimpleNameExpression)calleeExpression;
              return "javaClass".equals(simpleNameExpression.getReferencedName());
            }
          }
          return false;
        }
      }
;
    }
  }
;
}
