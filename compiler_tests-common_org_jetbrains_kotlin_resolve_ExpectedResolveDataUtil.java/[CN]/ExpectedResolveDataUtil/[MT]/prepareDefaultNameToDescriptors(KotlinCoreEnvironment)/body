{
  Project project=environment.getProject();
  KotlinBuiltIns builtIns=DefaultBuiltIns.getInstance();
  Map<String,DeclarationDescriptor> nameToDescriptor=new HashMap<String,DeclarationDescriptor>();
  nameToDescriptor.put("kotlin::Int.plus(Int)",standardFunction(builtIns.getInt(),"plus",project,builtIns.getIntType()));
  FunctionDescriptor descriptorForGet=standardFunction(builtIns.getArray(),"get",project,builtIns.getIntType());
  nameToDescriptor.put("kotlin::Array.get(Int)",descriptorForGet.getOriginal());
  nameToDescriptor.put("kotlin::Int.compareTo(Double)",standardFunction(builtIns.getInt(),"compareTo",project,builtIns.getDoubleType()));
  @NotNull FunctionDescriptor descriptorForSet=standardFunction(builtIns.getArray(),"set",project,builtIns.getIntType(),builtIns.getIntType());
  nameToDescriptor.put("kotlin::Array.set(Int, Int)",descriptorForSet.getOriginal());
  return nameToDescriptor;
}
