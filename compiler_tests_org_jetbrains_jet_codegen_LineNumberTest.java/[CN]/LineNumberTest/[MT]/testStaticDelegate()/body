{
  JetFile foo=createPsiFile("staticDelegate/foo.kt");
  JetFile bar=createPsiFile("staticDelegate/bar.kt");
  GenerationState state=GenerationUtils.compileManyFilesGetGenerationStateForTest(foo.getProject(),Arrays.asList(foo,bar));
  ClassReader reader=new ClassReader(state.getFactory().asBytes(JvmAbi.PACKAGE_CLASS + ".class"));
  List<Integer> expectedLineNumbers=Arrays.asList(1,1);
  final List<Integer> actualLineNumbers=new ArrayList<Integer>();
  reader.accept(new ClassVisitor(Opcodes.ASM4){
    @Override public MethodVisitor visitMethod(    int access,    String name,    final String desc,    final String signature,    String[] exceptions){
      return new MethodVisitor(Opcodes.ASM4){
        @Override public void visitLineNumber(        int line,        Label label){
          actualLineNumbers.add(line);
        }
      }
;
    }
  }
,ClassReader.SKIP_FRAMES);
  assertSameElements(actualLineNumbers,expectedLineNumbers);
}
