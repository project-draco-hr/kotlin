{
  BindingContext context=ResolvePackage.getBindingContext(functionElement);
  FunctionDescriptor functionDescriptor=context.get(BindingContext.FUNCTION,functionElement);
  if (functionDescriptor == null)   return Lists.newArrayList();
  List<FunctionDescriptor> superFunctions=getPossibleSuperFunctionsDescriptors(functionDescriptor);
  Map<String,FunctionDescriptor> possibleSignatures=Maps.newHashMap();
  for (  FunctionDescriptor superFunction : superFunctions) {
    if (!superFunction.getKind().isReal())     continue;
    FunctionDescriptor signature=changeSignatureToMatch(functionDescriptor,superFunction);
    possibleSignatures.put(getFunctionSignatureString(signature,false),signature);
  }
  return Lists.newArrayList(possibleSignatures.values());
}
