{
  DeclarationDescriptor containingDeclaration=functionDescriptor.getContainingDeclaration();
  List<FunctionDescriptor> superFunctions=Lists.newArrayList();
  if (!(containingDeclaration instanceof ClassDescriptor))   return superFunctions;
  ClassDescriptor classDescriptor=(ClassDescriptor)containingDeclaration;
  Name name=functionDescriptor.getName();
  for (  ClassDescriptor superclass : DescriptorUtils.getSuperclassDescriptors(classDescriptor)) {
    JetType type=superclass.getDefaultType();
    JetScope scope=type.getMemberScope();
    for (    FunctionDescriptor function : scope.getFunctions(name)) {
      if (!function.getKind().isReal())       continue;
      if (function.getModality().isOverridable())       superFunctions.add(function);
    }
  }
  return superFunctions;
}
