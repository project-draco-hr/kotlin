{
  if (actualType == null || noExpectedType(targetType))   return;
  if (!CastDiagnosticsUtil.isCastPossible(actualType,targetType,components.platformToKotlinClassMap)) {
    context.trace.report(CAST_NEVER_SUCCEEDS.on(expression.getOperationReference()));
    return;
  }
  JetTypeChecker typeChecker=JetTypeChecker.DEFAULT;
  if (actualType.equals(targetType)) {
    context.trace.report(USELESS_CAST.on(expression.getOperationReference()));
    return;
  }
  Collection<JetType> possibleTypes=DataFlowUtils.getAllPossibleTypes(expression.getLeft(),context.dataFlowInfo,actualType,context.trace.getBindingContext());
  for (  JetType possibleType : possibleTypes) {
    if (typeChecker.isSubtypeOf(possibleType,targetType)) {
      context.trace.report(USELESS_CAST_STATIC_ASSERT_IS_FINE.on(expression.getOperationReference()));
      return;
    }
  }
  if (CastDiagnosticsUtil.isCastErased(actualType,targetType,typeChecker)) {
    context.trace.report(UNCHECKED_CAST.on(expression,actualType,targetType));
  }
}
