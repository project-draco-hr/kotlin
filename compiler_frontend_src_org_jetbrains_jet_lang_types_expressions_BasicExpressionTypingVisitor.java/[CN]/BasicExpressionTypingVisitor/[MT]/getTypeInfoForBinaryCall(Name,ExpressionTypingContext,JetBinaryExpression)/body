{
  JetExpression left=binaryExpression.getLeft();
  DataFlowInfo dataFlowInfo=context.dataFlowInfo;
  if (left != null) {
    dataFlowInfo=facade.getTypeInfo(left,context.replaceContextDependency(INDEPENDENT).replaceExpectedType(NO_EXPECTED_TYPE)).getDataFlowInfo();
  }
  ExpressionTypingContext contextWithDataFlow=context.replaceDataFlowInfo(dataFlowInfo);
  OverloadResolutionResults<FunctionDescriptor> resolutionResults;
  if (left != null) {
    ExpressionReceiver receiver=safeGetExpressionReceiver(facade,left,context);
    resolutionResults=components.callResolver.resolveBinaryCall(contextWithDataFlow.replaceScope(context.scope),receiver,binaryExpression,name);
  }
 else {
    resolutionResults=OverloadResolutionResultsImpl.nameNotFound();
  }
  if (resolutionResults.isSingleResult()) {
    dataFlowInfo=resolutionResults.getResultingCall().getDataFlowInfoForArguments().getResultInfo();
  }
  return JetTypeInfo.create(OverloadResolutionResultsUtil.getResultingType(resolutionResults,context.contextDependency),dataFlowInfo);
}
