{
  char prev=0;
  char c;
  for (int i=start; i < end - 2; i++, prev=c) {
    c=source.charAt(i);
    if (prev == '\\') {
      if (c == 'u' || c == 'U') {
        if (source.regionMatches(true,i - 1,ESCAPE_STRING,0,ESCAPE_STRING.length())) {
          Location location=Location.create(context.file,source,offset + i - 1,offset + i - 1 + ESCAPE_STRING.length());
          context.report(EASTER_EGG,location,"Code might be hidden here; found unicode escape sequence " + "which is interpreted as comment end, compiled code follows");
        }
      }
 else {
        i++;
      }
    }
 else     if (prev == 'S' && c == 'T' && source.regionMatches(i - 1,STOPSHIP_COMMENT,0,STOPSHIP_COMMENT.length())) {
      Location location=Location.create(context.file,source,offset + i - 1,offset + i - 1 + STOPSHIP_COMMENT.length());
      context.report(STOP_SHIP,location,"`STOPSHIP` comment found; points to code which must be fixed prior " + "to release");
    }
  }
}
