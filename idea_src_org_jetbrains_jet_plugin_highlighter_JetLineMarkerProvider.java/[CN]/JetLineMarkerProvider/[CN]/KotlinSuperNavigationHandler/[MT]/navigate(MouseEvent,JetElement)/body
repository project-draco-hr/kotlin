{
  BindingContext bindingContext=AnalyzerFacadeWithCache.getContextForElement(element);
  DeclarationDescriptor descriptor=bindingContext.get(BindingContext.DECLARATION_TO_DESCRIPTOR,element);
  if (!(descriptor instanceof CallableMemberDescriptor))   return;
  Set<CallableMemberDescriptor> overriddenMembers=getDirectlyOverriddenDeclarations((CallableMemberDescriptor)descriptor);
  if (overriddenMembers.isEmpty())   return;
  List<NavigatablePsiElement> superDeclarations=Lists.newArrayList();
  for (  CallableMemberDescriptor overriddenMember : overriddenMembers) {
    Collection<PsiElement> declarations=DescriptorToDeclarationUtil.INSTANCE$.resolveToPsiElements(element.getProject(),overriddenMember);
    for (    PsiElement declaration : declarations) {
      if (declaration instanceof NavigatablePsiElement) {
        superDeclarations.add((NavigatablePsiElement)declaration);
      }
    }
  }
  if (!ApplicationManager.getApplication().isUnitTestMode()) {
    PsiElementListNavigator.openTargets(e,ArrayUtil.toObjectArray(superDeclarations,NavigatablePsiElement.class),JetBundle.message("navigation.title.super.declaration",descriptor.getName()),JetBundle.message("navigation.findUsages.title.super.declaration",descriptor.getName()),new JetFunctionPsiElementCellRenderer(bindingContext));
  }
 else {
    testNavigableElements=superDeclarations;
  }
}
