{
  BindingContext bindingContext=AnalyzerFacadeWithCache.getContextForElement((JetElement)elt);
  DeclarationDescriptor descriptor=bindingContext.get(BindingContext.DECLARATION_TO_DESCRIPTOR,elt);
  if (!(descriptor instanceof CallableMemberDescriptor))   return;
  Set<CallableMemberDescriptor> overriddenMembers=OverrideResolver.getDirectlyOverriddenDeclarations((CallableMemberDescriptor)descriptor);
  if (overriddenMembers.isEmpty())   return;
  List<NavigatablePsiElement> list=Lists.newArrayList();
  for (  CallableMemberDescriptor overriddenMember : overriddenMembers) {
    Collection<PsiElement> declarations=DescriptorToDeclarationUtil.INSTANCE$.resolveToPsiElements(elt.getProject(),overriddenMember);
    for (    PsiElement declaration : declarations) {
      if (declaration instanceof NavigatablePsiElement) {
        list.add((NavigatablePsiElement)declaration);
      }
    }
  }
  PsiElementListNavigator.openTargets(event,ArrayUtil.toObjectArray(list,NavigatablePsiElement.class),JetBundle.message("navigation.title.super.declaration",descriptor.getName()),JetBundle.message("navigation.findUsages.title.super.declaration",descriptor.getName()),new JetFunctionPsiElementCellRenderer(bindingContext));
}
