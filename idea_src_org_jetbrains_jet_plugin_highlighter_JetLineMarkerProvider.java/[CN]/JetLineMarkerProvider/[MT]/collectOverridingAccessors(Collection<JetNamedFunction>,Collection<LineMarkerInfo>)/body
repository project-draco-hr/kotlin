{
  Map<PsiMethod,JetNamedFunction> mappingToJava=Maps.newHashMap();
  for (  JetNamedFunction function : functions) {
    if (isOverridableHeuristic(function)) {
      PsiMethod method=LightClassUtil.getLightClassMethod(function);
      if (method != null) {
        mappingToJava.put(method,function);
      }
    }
  }
  Set<PsiClass> classes=collectContainingClasses(mappingToJava.keySet());
  for (  JetNamedFunction function : MarkersPackage.getOverriddenDeclarations(mappingToJava,classes)) {
    ProgressManager.checkCanceled();
    PsiElement anchor=function.getNameIdentifier();
    if (anchor == null)     anchor=function;
    LineMarkerInfo info=new LineMarkerInfo<PsiElement>(anchor,anchor.getTextOffset(),isImplemented(function) ? IMPLEMENTED_MARK : OVERRIDDEN_MARK,Pass.UPDATE_OVERRIDEN_MARKERS,OVERRIDDEN_FUNCTION.getTooltip(),OVERRIDDEN_FUNCTION.getNavigationHandler(),GutterIconRenderer.Alignment.RIGHT);
    result.add(info);
  }
}
