{
  JetFile file=(JetFile)element.getContainingFile();
  if (file == null)   return "";
  BindingContext bindingContext=AnalyzerFacadeWithCache.analyzeFileWithCache(file).getBindingContext();
  DeclarationDescriptor descriptor=bindingContext.get(BindingContext.DECLARATION_TO_DESCRIPTOR,element);
  if (!(descriptor instanceof CallableMemberDescriptor)) {
    return "";
  }
  Set<CallableMemberDescriptor> overriddenMembers=getDirectlyOverriddenDeclarations((CallableMemberDescriptor)descriptor);
  if (overriddenMembers.size() == 0) {
    return "";
  }
  boolean allOverriddenAbstract=true;
  for (  CallableMemberDescriptor function : overriddenMembers) {
    allOverriddenAbstract&=function.getModality() == Modality.ABSTRACT;
  }
  String implementsOrOverrides=allOverriddenAbstract ? "implements" : "overrides";
  String memberKind=element instanceof JetNamedFunction ? "function" : "property";
  StringBuilder builder=new StringBuilder();
  builder.append(DescriptorRenderer.HTML.render(descriptor));
  int overrideCount=overriddenMembers.size();
  if (overrideCount >= 1) {
    builder.append("<br/>").append(implementsOrOverrides).append("<br/>");
    builder.append(DescriptorRenderer.HTML.render(overriddenMembers.iterator().next()));
  }
  if (overrideCount > 1) {
    int otherCount=overrideCount - 1;
    builder.append("<br/>and ").append(otherCount).append(" other ").append(StringUtil.pluralize(memberKind,otherCount));
  }
  return builder.toString();
}
