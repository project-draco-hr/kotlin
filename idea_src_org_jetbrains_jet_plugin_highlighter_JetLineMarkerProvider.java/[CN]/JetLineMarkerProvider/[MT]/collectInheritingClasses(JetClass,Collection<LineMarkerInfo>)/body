{
  if (!element.hasModifier(JetTokens.OPEN_KEYWORD)) {
    return;
  }
  PsiClass lightClass=LightClassUtil.createLightClass(element);
  if (lightClass == null) {
    return;
  }
  PsiClass inheritor=ClassInheritorsSearch.search(lightClass,false).findFirst();
  if (inheritor != null) {
    final PsiElement nameIdentifier=element.getNameIdentifier();
    PsiElement anchor=nameIdentifier != null ? nameIdentifier : element;
    result.add(new LineMarkerInfo<PsiElement>(anchor,anchor.getTextOffset(),OVERRIDDEN_MARK,Pass.UPDATE_OVERRIDEN_MARKERS,SUBCLASSED_CLASS_TOOLTIP_ADAPTER,SUBCLASSED_CLASS_NAVIGATION_HANDLER));
  }
}
